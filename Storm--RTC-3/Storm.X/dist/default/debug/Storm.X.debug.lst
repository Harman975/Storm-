

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 02 11:33:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F2520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	smallconst
    70  000600                     __psmallconst:
    71                           	callstack 0
    72  000600  00                 	db	0
    73  000601                     _dpowers:
    74                           	callstack 0
    75  000601  0001               	dw	1
    76  000603  000A               	dw	10
    77  000605  0064               	dw	100
    78  000607  03E8               	dw	1000
    79  000609  2710               	dw	10000
    80  00060B                     __end_of_dpowers:
    81                           	callstack 0
    82  0000                     _TRISC4	set	31908
    83  0000                     _TRISC3	set	31907
    84  0000                     _TRISA2	set	31890
    85  0000                     _TRISA1	set	31889
    86  0000                     _LATA6	set	31822
    87  0000                     _LATA5	set	31821
    88  0000                     _LATA4	set	31820
    89  0000                     _TRISB0	set	31896
    90  0000                     _TRISB1	set	31897
    91  0000                     _TRISC7	set	31911
    92  0000                     _TRISC6	set	31910
    93  0000                     _PIR2bits	set	4001
    94  0000                     _EECON1	set	4006
    95  0000                     _EECON2	set	4007
    96  0000                     _EEDATA	set	4008
    97  0000                     _EECON1bits	set	4006
    98  0000                     _EEADR	set	4009
    99  0000                     _SSPCON2bits	set	4037
   100  0000                     _PIR1bits	set	3998
   101  0000                     _T1CONbits	set	4045
   102  0000                     _TMR1L	set	4046
   103  0000                     _TMR1H	set	4047
   104  0000                     _SSPBUF	set	4041
   105  0000                     _SSPCON2	set	4037
   106  0000                     _SSPSTAT	set	4039
   107  0000                     _SSPCON1bits	set	4038
   108  0000                     _SSPADD	set	4040
   109  0000                     _ADRESL	set	4035
   110  0000                     _ADRESH	set	4036
   111  0000                     _ADCON0bits	set	4034
   112  0000                     _ADCON2bits	set	4032
   113  0000                     _ADCON1bits	set	4033
   114  0000                     _RCREG	set	4014
   115  0000                     _TXREG	set	4013
   116  0000                     _SPBRG	set	4015
   117  0000                     _SPBRGH	set	4016
   118  0000                     _RCSTAbits	set	4011
   119  0000                     _BAUDCONbits	set	4024
   120  0000                     _TXSTAbits	set	4012
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _ACKEN	set	32300
   123  0000                     _ACKDT	set	32301
   124  0000                     _RCEN	set	32299
   125  0000                     _PEN	set	32298
   126  0000                     _RSEN	set	32297
   127  0000                     _SEN	set	32296
   128  0000                     _SSPIF	set	31987
   129  0000                     _RCIF	set	31989
   130  0000                     _TXIF	set	31988
   131  0000                     _IPEN	set	32391
   132  0000                     _INTCONbits	set	4082
   133  00060B                     STR_3:
   134  00060B  45                 	db	69	;'E'
   135  00060C  45                 	db	69	;'E'
   136  00060D  50                 	db	80	;'P'
   137  00060E  52                 	db	82	;'R'
   138  00060F  4F                 	db	79	;'O'
   139  000610  4D                 	db	77	;'M'
   140  000611  3A                 	db	58	;':'
   141  000612  20                 	db	32
   142  000613  25                 	db	37
   143  000614  75                 	db	117	;'u'
   144  000615  0A                 	db	10
   145  000616  00                 	db	0
   146  000617                     STR_2:
   147  000617  48                 	db	72	;'H'
   148  000618  55                 	db	85	;'U'
   149  000619  4D                 	db	77	;'M'
   150  00061A  49                 	db	73	;'I'
   151  00061B  44                 	db	68	;'D'
   152  00061C  3A                 	db	58	;':'
   153  00061D  20                 	db	32
   154  00061E  25                 	db	37
   155  00061F  75                 	db	117	;'u'
   156  000620  0A                 	db	10
   157  000621  00                 	db	0
   158  000622                     STR_1:
   159  000622  54                 	db	84	;'T'
   160  000623  45                 	db	69	;'E'
   161  000624  4D                 	db	77	;'M'
   162  000625  50                 	db	80	;'P'
   163  000626  3A                 	db	58	;':'
   164  000627  20                 	db	32
   165  000628  25                 	db	37
   166  000629  75                 	db	117	;'u'
   167  00062A  0A                 	db	10
   168  00062B  00                 	db	0
   169  00062C  00                 	db	0	; dummy byte at the end
   170  0000                     
   171                           ; #config settings
   172                           
   173                           	psect	cinit
   174  000B18                     __pcinit:
   175                           	callstack 0
   176  000B18                     start_initialization:
   177                           	callstack 0
   178  000B18                     __initialization:
   179                           	callstack 0
   180                           
   181                           ; Clear objects allocated to COMRAM (14 bytes)
   182  000B18  EE00  F052         	lfsr	0,__pbssCOMRAM
   183  000B1C  0E0E               	movlw	14
   184  000B1E                     clear_0:
   185  000B1E  6AEE               	clrf	postinc0,c
   186  000B20  06E8               	decf	wreg,f,c
   187  000B22  E1FD               	bnz	clear_0
   188  000B24                     end_of_initialization:
   189                           	callstack 0
   190  000B24                     __end_of__initialization:
   191                           	callstack 0
   192  000B24  0E00               	movlw	low (__Lmediumconst shr (0+16))
   193  000B26  6EF8               	movwf	tblptru,c
   194  000B28  0100               	movlb	0
   195  000B2A  EF17  F003         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198  000052                     __pbssCOMRAM:
   199                           	callstack 0
   200  000052                     _ADC:
   201                           	callstack 0
   202  000052                     	ds	4
   203  000056                     _value:
   204                           	callstack 0
   205  000056                     	ds	4
   206  00005A                     _voltage:
   207                           	callstack 0
   208  00005A                     	ds	4
   209  00005E                     _i:
   210                           	callstack 0
   211  00005E                     	ds	2
   212                           
   213                           	psect	cstackCOMRAM
   214  000001                     __pcstackCOMRAM:
   215                           	callstack 0
   216  000001                     ??_poll_if_tim1:
   217  000001                     ?_Read_ADC:
   218                           	callstack 0
   219  000001                     ?___lwdiv:
   220                           	callstack 0
   221  000001                     UART_send_char@bt:
   222                           	callstack 0
   223  000001                     UART_Init@baud_rate:
   224                           	callstack 0
   225  000001                     ___lwdiv@dividend:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x0
   229  000001                     	ds	1
   230  000002                     UART_send_string@st_pt:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x1
   234  000002                     	ds	1
   235  000003                     ??_Read_ADC:
   236  000003                     i2c_wr@i2c_data:
   237                           	callstack 0
   238  000003                     i2c_rd@rtcc_buf:
   239                           	callstack 0
   240  000003                     ___lwdiv@divisor:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x2
   244  000003                     	ds	1
   245  000004                     
   246                           ; 1 bytes @ 0x3
   247  000004                     	ds	1
   248  000005                     Read_ADC@result:
   249                           	callstack 0
   250  000005                     ___lwdiv@quotient:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x4
   254  000005                     	ds	2
   255  000007                     Read_ADC@channel:
   256                           	callstack 0
   257  000007                     ___lwdiv@counter:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x6
   261  000007                     	ds	1
   262  000008                     ?___lwmod:
   263                           	callstack 0
   264  000008                     ___lwmod@dividend:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x7
   268  000008                     	ds	2
   269  00000A                     ___lwmod@divisor:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x9
   273  00000A                     	ds	2
   274  00000C                     ___lwmod@counter:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0xB
   278  00000C                     	ds	1
   279  00000D                     ?_sprintf:
   280                           	callstack 0
   281  00000D                     sprintf@sp:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0xC
   285  00000D                     	ds	2
   286  00000F                     sprintf@f:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0xE
   290  00000F                     	ds	4
   291  000013                     sprintf@flag:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x12
   295  000013                     	ds	1
   296  000014                     sprintf@ap:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x13
   300  000014                     	ds	2
   301  000016                     sprintf@val:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x15
   305  000016                     	ds	2
   306  000018                     sprintf@prec:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x17
   310  000018                     	ds	1
   311  000019                     sprintf@c:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x18
   315  000019                     	ds	1
   316  00001A                     ??_main:
   317                           
   318                           ; 1 bytes @ 0x19
   319  00001A                     	ds	2
   320  00001C                     main@memory:
   321                           	callstack 0
   322                           
   323                           ; 20 bytes @ 0x1B
   324  00001C                     	ds	20
   325  000030                     main@_adc_str:
   326                           	callstack 0
   327                           
   328                           ; 20 bytes @ 0x2F
   329  000030                     	ds	20
   330  000044                     main@memory_string:
   331                           	callstack 0
   332                           
   333                           ; 10 bytes @ 0x43
   334  000044                     	ds	10
   335  00004E                     main@temp_adc:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x4D
   339  00004E                     	ds	2
   340  000050                     main@humid_adc:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x4F
   344  000050                     	ds	2
   345                           
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 123 in file "Test.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  _adc_str       20   47[COMRAM] unsigned char [20]
   356 ;;  memory         20   27[COMRAM] unsigned char [20]
   357 ;;  _adc_buf       20    0        unsigned char [20]
   358 ;;  memory_strin   10   67[COMRAM] unsigned char [10]
   359 ;;  time           10    0        unsigned char [10]
   360 ;;  humid_adc       2   79[COMRAM] unsigned int 
   361 ;;  temp_adc        2   77[COMRAM] unsigned int 
   362 ;;  a               2    0        unsigned int 
   363 ;;  i               2    0        unsigned int 
   364 ;;  eeprom_val      1    0        unsigned char 
   365 ;;  i2c_val         1    0        unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   375 ;;      Params:         0       0       0       0       0       0       0
   376 ;;      Locals:        54       0       0       0       0       0       0
   377 ;;      Temps:          2       0       0       0       0       0       0
   378 ;;      Totals:        56       0       0       0       0       0       0
   379 ;;Total ram usage:       56 bytes
   380 ;; Hardware stack levels required when called:    3
   381 ;; This function calls:
   382 ;;		_ADC_intialize
   383 ;;		_CLK_intialize
   384 ;;		_InitI2C
   385 ;;		_PORT_Initialize
   386 ;;		_Read_ADC
   387 ;;		_UART_Init
   388 ;;		_UART_send_string
   389 ;;		_rtcc_rd
   390 ;;		_sprintf
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text0
   397  00062E                     __ptext0:
   398                           	callstack 0
   399  00062E                     _main:
   400                           	callstack 28
   401  00062E                     
   402                           ;Test.c: 127: unsigned int humid_adc = 0;
   403  00062E  0E00               	movlw	0
   404  000630  6E51               	movwf	(main@humid_adc+1)^0,c
   405  000632  0E00               	movlw	0
   406  000634  6E50               	movwf	main@humid_adc^0,c
   407  000636                     
   408                           ;Test.c: 128: unsigned short I2C_Master_Read(unsigned short a);;Test.c: 129: char _adc_s
      +                          tr[20];;Test.c: 130: char _adc_buf[20];;Test.c: 131: unsigned int i, a;;Test.c: 132: cha
      +                          r memory[20];;Test.c: 133: char memory_string [10];;Test.c: 134: CLK_intialize();
   409  000636  ECC4  F005         	call	_CLK_intialize	;wreg free
   410                           
   411                           ;Test.c: 135: PORT_Initialize();
   412  00063A  ECDB  F005         	call	_PORT_Initialize	;wreg free
   413  00063E                     
   414                           ;Test.c: 136: UART_Init(9600);
   415  00063E  0E25               	movlw	37
   416  000640  6E02               	movwf	(UART_Init@baud_rate+1)^0,c
   417  000642  0E80               	movlw	128
   418  000644  6E01               	movwf	UART_Init@baud_rate^0,c
   419  000646  ECAD  F005         	call	_UART_Init	;wreg free
   420  00064A                     
   421                           ;Test.c: 137: ADC_intialize();
   422  00064A  EC7B  F005         	call	_ADC_intialize	;wreg free
   423  00064E                     
   424                           ;Test.c: 139: InitI2C();
   425  00064E  ECA2  F005         	call	_InitI2C	;wreg free
   426  000652                     
   427                           ;Test.c: 140: void i2c_start(void) ;;Test.c: 143: unsigned char i2c_val;;Test.c: 144: ch
      +                          ar time [10];;Test.c: 145: unsigned char eeprom_val ;;Test.c: 163: _delay((unsigned long
      +                          )((500)*(8000000/4000.0)));
   428  000652  0E06               	movlw	6
   429  000654  6E1B               	movwf	(??_main+1)^0,c
   430  000656  0E13               	movlw	19
   431  000658  6E1A               	movwf	??_main^0,c
   432  00065A  0EAE               	movlw	174
   433  00065C                     u427:
   434  00065C  2EE8               	decfsz	wreg,f,c
   435  00065E  D7FE               	bra	u427
   436  000660  2E1A               	decfsz	??_main^0,f,c
   437  000662  D7FC               	bra	u427
   438  000664  2E1B               	decfsz	(??_main+1)^0,f,c
   439  000666  D7FA               	bra	u427
   440  000668                     l1530:
   441                           
   442                           ;Test.c: 166: {;Test.c: 170: _delay((unsigned long)((500)*(8000000/4000.0)));
   443  000668  0E06               	movlw	6
   444  00066A  6E1B               	movwf	(??_main+1)^0,c
   445  00066C  0E13               	movlw	19
   446  00066E  6E1A               	movwf	??_main^0,c
   447  000670  0EAE               	movlw	174
   448  000672                     u437:
   449  000672  2EE8               	decfsz	wreg,f,c
   450  000674  D7FE               	bra	u437
   451  000676  2E1A               	decfsz	??_main^0,f,c
   452  000678  D7FC               	bra	u437
   453  00067A  2E1B               	decfsz	(??_main+1)^0,f,c
   454  00067C  D7FA               	bra	u437
   455  00067E                     
   456                           ;Test.c: 171: TRISB1 = 0;
   457  00067E  9293               	bcf	3987,1,c	;volatile
   458  000680                     
   459                           ;Test.c: 172: _delay((unsigned long)((500)*(8000000/4000.0)));
   460  000680  0E06               	movlw	6
   461  000682  6E1B               	movwf	(??_main+1)^0,c
   462  000684  0E13               	movlw	19
   463  000686  6E1A               	movwf	??_main^0,c
   464  000688  0EAE               	movlw	174
   465  00068A                     u447:
   466  00068A  2EE8               	decfsz	wreg,f,c
   467  00068C  D7FE               	bra	u447
   468  00068E  2E1A               	decfsz	??_main^0,f,c
   469  000690  D7FC               	bra	u447
   470  000692  2E1B               	decfsz	(??_main+1)^0,f,c
   471  000694  D7FA               	bra	u447
   472  000696                     
   473                           ;Test.c: 173: TRISB1 = 1;
   474  000696  8293               	bsf	3987,1,c	;volatile
   475  000698                     
   476                           ;Test.c: 175: _delay((unsigned long)((500)*(8000000/4000.0)));
   477  000698  0E06               	movlw	6
   478  00069A  6E1B               	movwf	(??_main+1)^0,c
   479  00069C  0E13               	movlw	19
   480  00069E  6E1A               	movwf	??_main^0,c
   481  0006A0  0EAE               	movlw	174
   482  0006A2                     u457:
   483  0006A2  2EE8               	decfsz	wreg,f,c
   484  0006A4  D7FE               	bra	u457
   485  0006A6  2E1A               	decfsz	??_main^0,f,c
   486  0006A8  D7FC               	bra	u457
   487  0006AA  2E1B               	decfsz	(??_main+1)^0,f,c
   488  0006AC  D7FA               	bra	u457
   489  0006AE                     
   490                           ;Test.c: 176: TRISB0 = 0;
   491  0006AE  9093               	bcf	3987,0,c	;volatile
   492  0006B0                     
   493                           ;Test.c: 177: _delay((unsigned long)((500)*(8000000/4000.0)));
   494  0006B0  0E06               	movlw	6
   495  0006B2  6E1B               	movwf	(??_main+1)^0,c
   496  0006B4  0E13               	movlw	19
   497  0006B6  6E1A               	movwf	??_main^0,c
   498  0006B8  0EAE               	movlw	174
   499  0006BA                     u467:
   500  0006BA  2EE8               	decfsz	wreg,f,c
   501  0006BC  D7FE               	bra	u467
   502  0006BE  2E1A               	decfsz	??_main^0,f,c
   503  0006C0  D7FC               	bra	u467
   504  0006C2  2E1B               	decfsz	(??_main+1)^0,f,c
   505  0006C4  D7FA               	bra	u467
   506  0006C6                     
   507                           ;Test.c: 178: TRISB0 = 1;
   508  0006C6  8093               	bsf	3987,0,c	;volatile
   509  0006C8                     
   510                           ;Test.c: 182: temp_adc = Read_ADC (0);
   511  0006C8  0E00               	movlw	0
   512  0006CA  ECF7  F004         	call	_Read_ADC
   513  0006CE  C001  F04E         	movff	?_Read_ADC,main@temp_adc
   514  0006D2  C002  F04F         	movff	?_Read_ADC+1,main@temp_adc+1
   515  0006D6                     
   516                           ;Test.c: 184: sprintf(_adc_str,"TEMP: %u\n", temp_adc);
   517  0006D6  0E30               	movlw	low main@_adc_str
   518  0006D8  6E0D               	movwf	sprintf@sp^0,c
   519  0006DA  0E00               	movlw	high main@_adc_str
   520  0006DC  6E0E               	movwf	(sprintf@sp+1)^0,c
   521  0006DE  0E22               	movlw	low STR_1
   522  0006E0  6E0F               	movwf	sprintf@f^0,c
   523  0006E2  0E06               	movlw	high STR_1
   524  0006E4  6E10               	movwf	(sprintf@f+1)^0,c
   525  0006E6  C04E  F011         	movff	main@temp_adc,?_sprintf+4
   526  0006EA  C04F  F012         	movff	main@temp_adc+1,?_sprintf+5
   527  0006EE  ECD9  F003         	call	_sprintf	;wreg free
   528  0006F2                     
   529                           ;Test.c: 185: UART_send_string(_adc_str);
   530  0006F2  0E30               	movlw	low main@_adc_str
   531  0006F4  6E02               	movwf	UART_send_string@st_pt^0,c
   532  0006F6  0E00               	movlw	high main@_adc_str
   533  0006F8  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   534  0006FA  EC4F  F005         	call	_UART_send_string	;wreg free
   535  0006FE                     
   536                           ;Test.c: 187: _delay((unsigned long)((100)*(8000000/4000.0)));
   537  0006FE  0E02               	movlw	2
   538  000700  6E1B               	movwf	(??_main+1)^0,c
   539  000702  0E04               	movlw	4
   540  000704  6E1A               	movwf	??_main^0,c
   541  000706  0EBA               	movlw	186
   542  000708                     u477:
   543  000708  2EE8               	decfsz	wreg,f,c
   544  00070A  D7FE               	bra	u477
   545  00070C  2E1A               	decfsz	??_main^0,f,c
   546  00070E  D7FC               	bra	u477
   547  000710  2E1B               	decfsz	(??_main+1)^0,f,c
   548  000712  D7FA               	bra	u477
   549  000714  D000               	nop2	
   550  000716                     
   551                           ;Test.c: 189: humid_adc = Read_ADC (1);
   552  000716  0E01               	movlw	1
   553  000718  ECF7  F004         	call	_Read_ADC
   554  00071C  C001  F050         	movff	?_Read_ADC,main@humid_adc
   555  000720  C002  F051         	movff	?_Read_ADC+1,main@humid_adc+1
   556  000724                     
   557                           ;Test.c: 190: sprintf(_adc_str, "HUMID: %u\n", humid_adc);
   558  000724  0E30               	movlw	low main@_adc_str
   559  000726  6E0D               	movwf	sprintf@sp^0,c
   560  000728  0E00               	movlw	high main@_adc_str
   561  00072A  6E0E               	movwf	(sprintf@sp+1)^0,c
   562  00072C  0E17               	movlw	low STR_2
   563  00072E  6E0F               	movwf	sprintf@f^0,c
   564  000730  0E06               	movlw	high STR_2
   565  000732  6E10               	movwf	(sprintf@f+1)^0,c
   566  000734  C050  F011         	movff	main@humid_adc,?_sprintf+4
   567  000738  C051  F012         	movff	main@humid_adc+1,?_sprintf+5
   568  00073C  ECD9  F003         	call	_sprintf	;wreg free
   569  000740                     
   570                           ;Test.c: 191: UART_send_string(_adc_str);
   571  000740  0E30               	movlw	low main@_adc_str
   572  000742  6E02               	movwf	UART_send_string@st_pt^0,c
   573  000744  0E00               	movlw	high main@_adc_str
   574  000746  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   575  000748  EC4F  F005         	call	_UART_send_string	;wreg free
   576  00074C                     
   577                           ;Test.c: 193: _delay((unsigned long)((100)*(8000000/4000.0)));
   578  00074C  0E02               	movlw	2
   579  00074E  6E1B               	movwf	(??_main+1)^0,c
   580  000750  0E04               	movlw	4
   581  000752  6E1A               	movwf	??_main^0,c
   582  000754  0EBA               	movlw	186
   583  000756                     u487:
   584  000756  2EE8               	decfsz	wreg,f,c
   585  000758  D7FE               	bra	u487
   586  00075A  2E1A               	decfsz	??_main^0,f,c
   587  00075C  D7FC               	bra	u487
   588  00075E  2E1B               	decfsz	(??_main+1)^0,f,c
   589  000760  D7FA               	bra	u487
   590  000762  D000               	nop2	
   591  000764                     
   592                           ;Test.c: 194: sprintf(memory_string,"EEPROM: %u\n", memory[0]);
   593  000764  0E44               	movlw	low main@memory_string
   594  000766  6E0D               	movwf	sprintf@sp^0,c
   595  000768  0E00               	movlw	high main@memory_string
   596  00076A  6E0E               	movwf	(sprintf@sp+1)^0,c
   597  00076C  0E0B               	movlw	low STR_3
   598  00076E  6E0F               	movwf	sprintf@f^0,c
   599  000770  0E06               	movlw	high STR_3
   600  000772  6E10               	movwf	(sprintf@f+1)^0,c
   601  000774  C01C  F011         	movff	main@memory,?_sprintf+4
   602  000778  6A12               	clrf	(?_sprintf+5)^0,c
   603  00077A  ECD9  F003         	call	_sprintf	;wreg free
   604  00077E                     
   605                           ;Test.c: 195: UART_send_string(memory_string);
   606  00077E  0E44               	movlw	low main@memory_string
   607  000780  6E02               	movwf	UART_send_string@st_pt^0,c
   608  000782  0E00               	movlw	high main@memory_string
   609  000784  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   610  000786  EC4F  F005         	call	_UART_send_string	;wreg free
   611  00078A                     
   612                           ;Test.c: 198: rtcc_rd( ) ;
   613  00078A  EC67  F005         	call	_rtcc_rd	;wreg free
   614  00078E                     
   615                           ;Test.c: 224: _delay((unsigned long)((5)*(8000000/4000.0)));
   616  00078E  0E0D               	movlw	13
   617  000790  6E1A               	movwf	??_main^0,c
   618  000792  0EFC               	movlw	252
   619  000794                     u497:
   620  000794  2EE8               	decfsz	wreg,f,c
   621  000796  D7FE               	bra	u497
   622  000798  2E1A               	decfsz	??_main^0,f,c
   623  00079A  D7FC               	bra	u497
   624  00079C                     
   625                           ;Test.c: 228: _delay((unsigned long)((5)*(8000000/4000.0)));
   626  00079C  0E0D               	movlw	13
   627  00079E  6E1A               	movwf	??_main^0,c
   628  0007A0  0EFC               	movlw	252
   629  0007A2                     u507:
   630  0007A2  2EE8               	decfsz	wreg,f,c
   631  0007A4  D7FE               	bra	u507
   632  0007A6  2E1A               	decfsz	??_main^0,f,c
   633  0007A8  D7FC               	bra	u507
   634  0007AA  EF34  F003         	goto	l1530
   635  0007AE  EF00  F000         	goto	start
   636  0007B2                     __end_of_main:
   637                           	callstack 0
   638                           
   639 ;; *************** function _sprintf *****************
   640 ;; Defined at:
   641 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  sp              2   12[COMRAM] PTR unsigned char 
   644 ;;		 -> main@memory_string(10), main@_adc_str(20), 
   645 ;;  f               2   14[COMRAM] PTR const unsigned char 
   646 ;;		 -> STR_3(12), STR_2(11), STR_1(10), 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  tmpval          4    0        struct .
   649 ;;  cp              3    0        PTR const unsigned char 
   650 ;;  val             2   21[COMRAM] unsigned int 
   651 ;;  ap              2   19[COMRAM] PTR void [1]
   652 ;;		 -> ?_sprintf(2), 
   653 ;;  len             2    0        unsigned int 
   654 ;;  c               1   24[COMRAM] unsigned char 
   655 ;;  prec            1   23[COMRAM] char 
   656 ;;  flag            1   18[COMRAM] unsigned char 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  2   12[COMRAM] int 
   659 ;; Registers used:
   660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   666 ;;      Params:         6       0       0       0       0       0       0
   667 ;;      Locals:         7       0       0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0       0       0
   669 ;;      Totals:        13       0       0       0       0       0       0
   670 ;;Total ram usage:       13 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    1
   673 ;; This function calls:
   674 ;;		___lwdiv
   675 ;;		___lwmod
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text1
   682  0007B2                     __ptext1:
   683                           	callstack 0
   684  0007B2                     _sprintf:
   685                           	callstack 29
   686  0007B2                     
   687                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
   688  0007B2  0E11               	movlw	low (?_sprintf+4)
   689  0007B4  6E14               	movwf	sprintf@ap^0,c
   690  0007B6  0E00               	movlw	high (?_sprintf+4)
   691  0007B8  6E15               	movwf	(sprintf@ap+1)^0,c
   692                           
   693                           ;doprnt.c: 553: while((c = *f++)) {
   694  0007BA  EF73  F004         	goto	l1504
   695  0007BE                     l1464:
   696                           
   697                           ;doprnt.c: 555: if(c != '%')
   698  0007BE  0E25               	movlw	37
   699  0007C0  1819               	xorwf	sprintf@c^0,w,c
   700  0007C2  B4D8               	btfsc	status,2,c
   701  0007C4  EFE6  F003         	goto	u361
   702  0007C8  EFE8  F003         	goto	u360
   703  0007CC                     u361:
   704  0007CC  EFF2  F003         	goto	l1470
   705  0007D0                     u360:
   706  0007D0                     
   707                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   708  0007D0  C00D  FFD9         	movff	sprintf@sp,fsr2l
   709  0007D4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   710  0007D8  C019  FFDF         	movff	sprintf@c,indf2
   711  0007DC  4A0D               	infsnz	sprintf@sp^0,f,c
   712  0007DE  2A0E               	incf	(sprintf@sp+1)^0,f,c
   713                           
   714                           ;doprnt.c: 559: continue;
   715  0007E0  EF73  F004         	goto	l1504
   716  0007E4                     l1470:
   717                           
   718                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   719  0007E4  0E00               	movlw	0
   720  0007E6  6E13               	movwf	sprintf@flag^0,c
   721                           
   722                           ;doprnt.c: 661: switch(c = *f++) {
   723  0007E8  EFFA  F003         	goto	l1476
   724  0007EC                     l1472:
   725                           
   726                           ;doprnt.c: 844: flag |= 0xC0;
   727  0007EC  0EC0               	movlw	192
   728  0007EE  1213               	iorwf	sprintf@flag^0,f,c
   729                           
   730                           ;doprnt.c: 845: break;
   731  0007F0  EF0E  F004         	goto	l1478
   732  0007F4                     l1476:
   733  0007F4  C00F  FFF6         	movff	sprintf@f,tblptrl
   734  0007F8  C010  FFF7         	movff	sprintf@f+1,tblptrh
   735  0007FC  4A0F               	infsnz	sprintf@f^0,f,c
   736  0007FE  2A10               	incf	(sprintf@f+1)^0,f,c
   737  000800                     	if	0	;tblptru may be non-zero
   738  000800                     	endif
   739  000800                     	if	0	;tblptru may be non-zero
   740  000800                     	endif
   741  000800  0008               	tblrd		*
   742  000802  CFF5 F019          	movff	tablat,sprintf@c
   743  000806  5019               	movf	sprintf@c^0,w,c
   744                           
   745                           ; Switch size 1, requested type "simple"
   746                           ; Number of cases is 2, Range of values is 0 to 117
   747                           ; switch strategies available:
   748                           ; Name         Instructions Cycles
   749                           ; simple_byte            7     4 (average)
   750                           ;	Chosen strategy is simple_byte
   751  000808  0A00               	xorlw	0	; case 0
   752  00080A  B4D8               	btfsc	status,2,c
   753  00080C  EF84  F004         	goto	l1506
   754  000810  0A75               	xorlw	117	; case 117
   755  000812  B4D8               	btfsc	status,2,c
   756  000814  EFF6  F003         	goto	l1472
   757  000818  EF73  F004         	goto	l1504
   758  00081C                     l1478:
   759                           
   760                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
   761  00081C  C014  FFD9         	movff	sprintf@ap,fsr2l
   762  000820  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   763  000824  CFDE F016          	movff	postinc2,sprintf@val
   764  000828  CFDD F017          	movff	postdec2,sprintf@val+1
   765  00082C  0E02               	movlw	2
   766  00082E  2614               	addwf	sprintf@ap^0,f,c
   767  000830  0E00               	movlw	0
   768  000832  2215               	addwfc	(sprintf@ap+1)^0,f,c
   769  000834                     
   770                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
   771  000834  0E01               	movlw	1
   772  000836  6E19               	movwf	sprintf@c^0,c
   773  000838                     l1488:
   774                           
   775                           ;doprnt.c: 1332: if(val < dpowers[c])
   776  000838  5019               	movf	sprintf@c^0,w,c
   777  00083A  0D02               	mullw	2
   778  00083C  0E01               	movlw	low _dpowers
   779  00083E  24F3               	addwf	243,w,c
   780  000840  6EF6               	movwf	tblptrl,c
   781  000842  0E06               	movlw	high _dpowers
   782  000844  20F4               	addwfc	244,w,c
   783  000846  6EF7               	movwf	tblptrh,c
   784  000848                     	if	0	;There are less than 3 active tblptr bytes
   785  000848                     	endif
   786  000848  0009               	tblrd		*+
   787  00084A  50F5               	movf	tablat,w,c
   788  00084C  5C16               	subwf	sprintf@val^0,w,c
   789  00084E  0009               	tblrd		*+
   790  000850  50F5               	movf	tablat,w,c
   791  000852  5817               	subwfb	(sprintf@val+1)^0,w,c
   792  000854  B0D8               	btfsc	status,0,c
   793  000856  EF2F  F004         	goto	u371
   794  00085A  EF31  F004         	goto	u370
   795  00085E                     u371:
   796  00085E  EF33  F004         	goto	l1492
   797  000862                     u370:
   798  000862  EF3D  F004         	goto	l312
   799  000866                     l1492:
   800  000866  2A19               	incf	sprintf@c^0,f,c
   801  000868  0E05               	movlw	5
   802  00086A  1819               	xorwf	sprintf@c^0,w,c
   803  00086C  A4D8               	btfss	status,2,c
   804  00086E  EF3B  F004         	goto	u381
   805  000872  EF3D  F004         	goto	u380
   806  000876                     u381:
   807  000876  EF1C  F004         	goto	l1488
   808  00087A                     u380:
   809  00087A                     l312:
   810                           
   811                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
   812  00087A  C019  F018         	movff	sprintf@c,sprintf@prec
   813                           
   814                           ;doprnt.c: 1500: while(prec--) {
   815  00087E  EF6A  F004         	goto	l1502
   816  000882                     l1496:
   817                           
   818                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
   819  000882  5018               	movf	sprintf@prec^0,w,c
   820  000884  0D02               	mullw	2
   821  000886  0E01               	movlw	low _dpowers
   822  000888  24F3               	addwf	243,w,c
   823  00088A  6EF6               	movwf	tblptrl,c
   824  00088C  0E06               	movlw	high _dpowers
   825  00088E  20F4               	addwfc	244,w,c
   826  000890  6EF7               	movwf	tblptrh,c
   827  000892                     	if	0	;There are less than 3 active tblptr bytes
   828  000892                     	endif
   829  000892  0009               	tblrd		*+
   830  000894  CFF5 F003          	movff	tablat,___lwdiv@divisor
   831  000898  000A               	tblrd		*-
   832  00089A  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   833  00089E  C016  F001         	movff	sprintf@val,___lwdiv@dividend
   834  0008A2  C017  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   835  0008A6  EC8B  F004         	call	___lwdiv	;wreg free
   836  0008AA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   837  0008AE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   838  0008B2  0E00               	movlw	0
   839  0008B4  6E0B               	movwf	(___lwmod@divisor+1)^0,c
   840  0008B6  0E0A               	movlw	10
   841  0008B8  6E0A               	movwf	___lwmod@divisor^0,c
   842  0008BA  ECC5  F004         	call	___lwmod	;wreg free
   843  0008BE  5008               	movf	?___lwmod^0,w,c
   844  0008C0  0F30               	addlw	48
   845  0008C2  6E19               	movwf	sprintf@c^0,c
   846  0008C4                     
   847                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
   848  0008C4  C00D  FFD9         	movff	sprintf@sp,fsr2l
   849  0008C8  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   850  0008CC  C019  FFDF         	movff	sprintf@c,indf2
   851  0008D0  4A0D               	infsnz	sprintf@sp^0,f,c
   852  0008D2  2A0E               	incf	(sprintf@sp+1)^0,f,c
   853  0008D4                     l1502:
   854  0008D4  0618               	decf	sprintf@prec^0,f,c
   855  0008D6  2818               	incf	sprintf@prec^0,w,c
   856  0008D8  A4D8               	btfss	status,2,c
   857  0008DA  EF71  F004         	goto	u391
   858  0008DE  EF73  F004         	goto	u390
   859  0008E2                     u391:
   860  0008E2  EF41  F004         	goto	l1496
   861  0008E6                     u390:
   862  0008E6                     l1504:
   863  0008E6  C00F  FFF6         	movff	sprintf@f,tblptrl
   864  0008EA  C010  FFF7         	movff	sprintf@f+1,tblptrh
   865  0008EE  4A0F               	infsnz	sprintf@f^0,f,c
   866  0008F0  2A10               	incf	(sprintf@f+1)^0,f,c
   867  0008F2                     	if	0	;tblptru may be non-zero
   868  0008F2                     	endif
   869  0008F2                     	if	0	;tblptru may be non-zero
   870  0008F2                     	endif
   871  0008F2  0008               	tblrd		*
   872  0008F4  CFF5 F019          	movff	tablat,sprintf@c
   873  0008F8  5019               	movf	sprintf@c^0,w,c
   874  0008FA  A4D8               	btfss	status,2,c
   875  0008FC  EF82  F004         	goto	u401
   876  000900  EF84  F004         	goto	u400
   877  000904                     u401:
   878  000904  EFDF  F003         	goto	l1464
   879  000908                     u400:
   880  000908                     l1506:
   881                           
   882                           ;doprnt.c: 1564: *sp = 0;
   883  000908  C00D  FFD9         	movff	sprintf@sp,fsr2l
   884  00090C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   885  000910  0E00               	movlw	0
   886  000912  6EDF               	movwf	indf2,c
   887  000914  0012               	return		;funcret
   888  000916                     __end_of_sprintf:
   889                           	callstack 0
   890                           
   891 ;; *************** function ___lwmod *****************
   892 ;; Defined at:
   893 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  dividend        2    7[COMRAM] unsigned int 
   896 ;;  divisor         2    9[COMRAM] unsigned int 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  counter         1   11[COMRAM] unsigned char 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  2    7[COMRAM] unsigned int 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   908 ;;      Params:         4       0       0       0       0       0       0
   909 ;;      Locals:         1       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0
   911 ;;      Totals:         5       0       0       0       0       0       0
   912 ;;Total ram usage:        5 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_sprintf
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text2
   922  00098A                     __ptext2:
   923                           	callstack 0
   924  00098A                     ___lwmod:
   925                           	callstack 29
   926  00098A  500A               	movf	___lwmod@divisor^0,w,c
   927  00098C  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
   928  00098E  B4D8               	btfsc	status,2,c
   929  000990  EFCC  F004         	goto	u301
   930  000994  EFCE  F004         	goto	u300
   931  000998                     u301:
   932  000998  EFF2  F004         	goto	l810
   933  00099C                     u300:
   934  00099C  0E01               	movlw	1
   935  00099E  6E0C               	movwf	___lwmod@counter^0,c
   936  0009A0  EFD6  F004         	goto	l1430
   937  0009A4                     l1428:
   938  0009A4  90D8               	bcf	status,0,c
   939  0009A6  360A               	rlcf	___lwmod@divisor^0,f,c
   940  0009A8  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
   941  0009AA  2A0C               	incf	___lwmod@counter^0,f,c
   942  0009AC                     l1430:
   943  0009AC  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
   944  0009AE  EFDB  F004         	goto	u311
   945  0009B2  EFDD  F004         	goto	u310
   946  0009B6                     u311:
   947  0009B6  EFD2  F004         	goto	l1428
   948  0009BA                     u310:
   949  0009BA                     l1432:
   950  0009BA  500A               	movf	___lwmod@divisor^0,w,c
   951  0009BC  5C08               	subwf	___lwmod@dividend^0,w,c
   952  0009BE  500B               	movf	(___lwmod@divisor+1)^0,w,c
   953  0009C0  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
   954  0009C2  A0D8               	btfss	status,0,c
   955  0009C4  EFE6  F004         	goto	u321
   956  0009C8  EFE8  F004         	goto	u320
   957  0009CC                     u321:
   958  0009CC  EFEC  F004         	goto	l1436
   959  0009D0                     u320:
   960  0009D0  500A               	movf	___lwmod@divisor^0,w,c
   961  0009D2  5E08               	subwf	___lwmod@dividend^0,f,c
   962  0009D4  500B               	movf	(___lwmod@divisor+1)^0,w,c
   963  0009D6  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
   964  0009D8                     l1436:
   965  0009D8  90D8               	bcf	status,0,c
   966  0009DA  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
   967  0009DC  320A               	rrcf	___lwmod@divisor^0,f,c
   968  0009DE  2E0C               	decfsz	___lwmod@counter^0,f,c
   969  0009E0  EFDD  F004         	goto	l1432
   970  0009E4                     l810:
   971  0009E4  C008  F008         	movff	___lwmod@dividend,?___lwmod
   972  0009E8  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   973  0009EC  0012               	return		;funcret
   974  0009EE                     __end_of___lwmod:
   975                           	callstack 0
   976                           
   977 ;; *************** function ___lwdiv *****************
   978 ;; Defined at:
   979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  dividend        2    0[COMRAM] unsigned int 
   982 ;;  divisor         2    2[COMRAM] unsigned int 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  quotient        2    4[COMRAM] unsigned int 
   985 ;;  counter         1    6[COMRAM] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  2    0[COMRAM] unsigned int 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         4       0       0       0       0       0       0
   996 ;;      Locals:         3       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0
   998 ;;      Totals:         7       0       0       0       0       0       0
   999 ;;Total ram usage:        7 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_sprintf
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text3
  1009  000916                     __ptext3:
  1010                           	callstack 0
  1011  000916                     ___lwdiv:
  1012                           	callstack 29
  1013  000916  0E00               	movlw	0
  1014  000918  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1015  00091A  0E00               	movlw	0
  1016  00091C  6E05               	movwf	___lwdiv@quotient^0,c
  1017  00091E  5003               	movf	___lwdiv@divisor^0,w,c
  1018  000920  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1019  000922  B4D8               	btfsc	status,2,c
  1020  000924  EF96  F004         	goto	u271
  1021  000928  EF98  F004         	goto	u270
  1022  00092C                     u271:
  1023  00092C  EFC0  F004         	goto	l800
  1024  000930                     u270:
  1025  000930  0E01               	movlw	1
  1026  000932  6E07               	movwf	___lwdiv@counter^0,c
  1027  000934  EFA0  F004         	goto	l1410
  1028  000938                     l1408:
  1029  000938  90D8               	bcf	status,0,c
  1030  00093A  3603               	rlcf	___lwdiv@divisor^0,f,c
  1031  00093C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1032  00093E  2A07               	incf	___lwdiv@counter^0,f,c
  1033  000940                     l1410:
  1034  000940  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1035  000942  EFA5  F004         	goto	u281
  1036  000946  EFA7  F004         	goto	u280
  1037  00094A                     u281:
  1038  00094A  EF9C  F004         	goto	l1408
  1039  00094E                     u280:
  1040  00094E                     l1412:
  1041  00094E  90D8               	bcf	status,0,c
  1042  000950  3605               	rlcf	___lwdiv@quotient^0,f,c
  1043  000952  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1044  000954  5003               	movf	___lwdiv@divisor^0,w,c
  1045  000956  5C01               	subwf	___lwdiv@dividend^0,w,c
  1046  000958  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1047  00095A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1048  00095C  A0D8               	btfss	status,0,c
  1049  00095E  EFB3  F004         	goto	u291
  1050  000962  EFB5  F004         	goto	u290
  1051  000966                     u291:
  1052  000966  EFBA  F004         	goto	l1420
  1053  00096A                     u290:
  1054  00096A  5003               	movf	___lwdiv@divisor^0,w,c
  1055  00096C  5E01               	subwf	___lwdiv@dividend^0,f,c
  1056  00096E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1057  000970  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1058  000972  8005               	bsf	___lwdiv@quotient^0,0,c
  1059  000974                     l1420:
  1060  000974  90D8               	bcf	status,0,c
  1061  000976  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1062  000978  3203               	rrcf	___lwdiv@divisor^0,f,c
  1063  00097A  2E07               	decfsz	___lwdiv@counter^0,f,c
  1064  00097C  EFA7  F004         	goto	l1412
  1065  000980                     l800:
  1066  000980  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1067  000984  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1068  000988  0012               	return		;funcret
  1069  00098A                     __end_of___lwdiv:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _rtcc_rd *****************
  1073 ;; Defined at:
  1074 ;;		line 57 in file "RTCC.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  rtcc_buf        1    0        unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      unsigned char 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1088 ;;      Params:         0       0       0       0       0       0       0
  1089 ;;      Locals:         1       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0
  1091 ;;      Totals:         1       0       0       0       0       0       0
  1092 ;;Total ram usage:        1 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    2
  1095 ;; This function calls:
  1096 ;;		_i2c_nack
  1097 ;;		_i2c_rd
  1098 ;;		_i2c_restart
  1099 ;;		_i2c_start
  1100 ;;		_i2c_stop
  1101 ;;		_i2c_wr
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text4
  1108  000ACE                     __ptext4:
  1109                           	callstack 0
  1110  000ACE                     _rtcc_rd:
  1111                           	callstack 28
  1112  000ACE                     
  1113                           ;RTCC.c: 59: unsigned char rtcc_buf;;RTCC.c: 60: i2c_start() ;
  1114  000ACE  ECD3  F005         	call	_i2c_start	;wreg free
  1115                           
  1116                           ;RTCC.c: 61: i2c_wr(0xDE) ;
  1117  000AD2  0EDE               	movlw	222
  1118  000AD4  ECBE  F005         	call	_i2c_wr
  1119                           
  1120                           ;RTCC.c: 62: i2c_wr(0x00) ;
  1121  000AD8  0E00               	movlw	0
  1122  000ADA  ECBE  F005         	call	_i2c_wr
  1123                           
  1124                           ;RTCC.c: 63: i2c_restart() ;
  1125  000ADE  ECD7  F005         	call	_i2c_restart	;wreg free
  1126                           
  1127                           ;RTCC.c: 64: i2c_wr(0xDF) ;
  1128  000AE2  0EDF               	movlw	223
  1129  000AE4  ECBE  F005         	call	_i2c_wr
  1130  000AE8  ECB7  F005         	call	_i2c_rd	;wreg free
  1131                           
  1132                           ;RTCC.c: 66: i2c_nack() ;
  1133  000AEC  ECCA  F005         	call	_i2c_nack	;wreg free
  1134                           
  1135                           ;RTCC.c: 67: i2c_stop() ;
  1136  000AF0  ECCF  F005         	call	_i2c_stop	;wreg free
  1137  000AF4  0012               	return		;funcret
  1138  000AF6                     __end_of_rtcc_rd:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _i2c_wr *****************
  1142 ;; Defined at:
  1143 ;;		line 116 in file "hw_I2C.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  i2c_data        1    wreg     unsigned char 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  i2c_data        1    2[COMRAM] unsigned char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1157 ;;      Params:         0       0       0       0       0       0       0
  1158 ;;      Locals:         1       0       0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0
  1160 ;;      Totals:         1       0       0       0       0       0       0
  1161 ;;Total ram usage:        1 bytes
  1162 ;; Hardware stack levels used:    1
  1163 ;; Hardware stack levels required when called:    1
  1164 ;; This function calls:
  1165 ;;		_poll_if_tim1
  1166 ;; This function is called by:
  1167 ;;		_rtcc_rd
  1168 ;;		_rtcc_wr
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text5
  1173  000B7C                     __ptext5:
  1174                           	callstack 0
  1175  000B7C                     _i2c_wr:
  1176                           	callstack 28
  1177                           
  1178                           ;incstack = 0
  1179                           ;i2c_wr@i2c_data stored from wreg
  1180  000B7C  6E03               	movwf	i2c_wr@i2c_data^0,c
  1181  000B7E  C003  FFC9         	movff	i2c_wr@i2c_data,4041	;volatile
  1182  000B82                     
  1183                           ;hw_I2C.c: 119: poll_if_tim1() ;
  1184  000B82  EC28  F005         	call	_poll_if_tim1	;wreg free
  1185  000B86  0012               	return		;funcret
  1186  000B88                     __end_of_i2c_wr:
  1187                           	callstack 0
  1188                           
  1189 ;; *************** function _i2c_stop *****************
  1190 ;; Defined at:
  1191 ;;		line 112 in file "hw_I2C.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1205 ;;      Params:         0       0       0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0
  1208 ;;      Totals:         0       0       0       0       0       0       0
  1209 ;;Total ram usage:        0 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    1
  1212 ;; This function calls:
  1213 ;;		_poll_if_tim1
  1214 ;; This function is called by:
  1215 ;;		_rtcc_rd
  1216 ;;		_rtcc_wr
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text6
  1221  000B9E                     __ptext6:
  1222                           	callstack 0
  1223  000B9E                     _i2c_stop:
  1224                           	callstack 28
  1225  000B9E  84C5               	bsf	4037,2,c	;volatile
  1226  000BA0                     
  1227                           ;hw_I2C.c: 114: poll_if_tim1() ; }
  1228  000BA0  EC28  F005         	call	_poll_if_tim1	;wreg free
  1229  000BA4  0012               	return		;funcret
  1230  000BA6                     __end_of_i2c_stop:
  1231                           	callstack 0
  1232                           
  1233 ;; *************** function _i2c_start *****************
  1234 ;; Defined at:
  1235 ;;		line 101 in file "hw_I2C.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1249 ;;      Params:         0       0       0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    1
  1256 ;; This function calls:
  1257 ;;		_poll_if_tim1
  1258 ;; This function is called by:
  1259 ;;		_rtcc_rd
  1260 ;;		_rtcc_wr
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text7
  1265  000BA6                     __ptext7:
  1266                           	callstack 0
  1267  000BA6                     _i2c_start:
  1268                           	callstack 28
  1269  000BA6                     
  1270                           ;hw_I2C.c: 103: SEN = 1 ;
  1271  000BA6  80C5               	bsf	4037,0,c	;volatile
  1272  000BA8                     
  1273                           ;hw_I2C.c: 104: poll_if_tim1() ;
  1274  000BA8  EC28  F005         	call	_poll_if_tim1	;wreg free
  1275  000BAC  0012               	return		;funcret
  1276  000BAE                     __end_of_i2c_start:
  1277                           	callstack 0
  1278                           
  1279 ;; *************** function _i2c_restart *****************
  1280 ;; Defined at:
  1281 ;;		line 107 in file "hw_I2C.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1295 ;;      Params:         0       0       0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0
  1298 ;;      Totals:         0       0       0       0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    1
  1302 ;; This function calls:
  1303 ;;		_poll_if_tim1
  1304 ;; This function is called by:
  1305 ;;		_rtcc_rd
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text8
  1310  000BAE                     __ptext8:
  1311                           	callstack 0
  1312  000BAE                     _i2c_restart:
  1313                           	callstack 28
  1314  000BAE  82C5               	bsf	4037,1,c	;volatile
  1315  000BB0                     
  1316                           ;hw_I2C.c: 109: poll_if_tim1() ;
  1317  000BB0  EC28  F005         	call	_poll_if_tim1	;wreg free
  1318  000BB4  0012               	return		;funcret
  1319  000BB6                     __end_of_i2c_restart:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _i2c_rd *****************
  1323 ;; Defined at:
  1324 ;;		line 121 in file "hw_I2C.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  rtcc_buf        1    2[COMRAM] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      unsigned char 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1338 ;;      Params:         0       0       0       0       0       0       0
  1339 ;;      Locals:         1       0       0       0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0
  1341 ;;      Totals:         1       0       0       0       0       0       0
  1342 ;;Total ram usage:        1 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    1
  1345 ;; This function calls:
  1346 ;;		_poll_if_tim1
  1347 ;; This function is called by:
  1348 ;;		_rtcc_rd
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text9
  1353  000B6E                     __ptext9:
  1354                           	callstack 0
  1355  000B6E                     _i2c_rd:
  1356                           	callstack 28
  1357  000B6E                     
  1358                           ;hw_I2C.c: 123: unsigned char rtcc_buf ;;hw_I2C.c: 124: RCEN = 1 ;
  1359  000B6E  86C5               	bsf	4037,3,c	;volatile
  1360  000B70                     
  1361                           ;hw_I2C.c: 125: poll_if_tim1() ;
  1362  000B70  EC28  F005         	call	_poll_if_tim1	;wreg free
  1363  000B74                     
  1364                           ;hw_I2C.c: 126: rtcc_buf = SSPBUF ;
  1365  000B74  CFC9 F003          	movff	4041,i2c_rd@rtcc_buf	;volatile
  1366  000B78                     
  1367                           ;hw_I2C.c: 127: return rtcc_buf;
  1368  000B78  5003               	movf	i2c_rd@rtcc_buf^0,w,c
  1369  000B7A  0012               	return		;funcret
  1370  000B7C                     __end_of_i2c_rd:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _i2c_nack *****************
  1374 ;; Defined at:
  1375 ;;		line 135 in file "hw_I2C.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1389 ;;      Params:         0       0       0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		_poll_if_tim1
  1398 ;; This function is called by:
  1399 ;;		_rtcc_rd
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text10
  1404  000B94                     __ptext10:
  1405                           	callstack 0
  1406  000B94                     _i2c_nack:
  1407                           	callstack 28
  1408  000B94  8AC5               	bsf	197,5,c	;volatile
  1409                           
  1410                           ;hw_I2C.c: 137: SSPCON2bits.ACKEN = 1 ;
  1411  000B96  88C5               	bsf	197,4,c	;volatile
  1412  000B98                     
  1413                           ;hw_I2C.c: 138: poll_if_tim1() ; }
  1414  000B98  EC28  F005         	call	_poll_if_tim1	;wreg free
  1415  000B9C  0012               	return		;funcret
  1416  000B9E                     __end_of_i2c_nack:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _poll_if_tim1 *****************
  1420 ;; Defined at:
  1421 ;;		line 86 in file "hw_I2C.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  err_flg         1    0        unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         0       0       0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0       0       0
  1437 ;;      Temps:          1       0       0       0       0       0       0
  1438 ;;      Totals:         2       0       0       0       0       0       0
  1439 ;;Total ram usage:        2 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_i2c_start
  1445 ;;		_i2c_restart
  1446 ;;		_i2c_stop
  1447 ;;		_i2c_wr
  1448 ;;		_i2c_rd
  1449 ;;		_i2c_nack
  1450 ;;		_i2c_ack
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text11
  1455  000A50                     __ptext11:
  1456                           	callstack 0
  1457  000A50                     _poll_if_tim1:
  1458                           	callstack 28
  1459  000A50                     
  1460                           ;hw_I2C.c: 88: TMR1H = ~(10000/256)&0xff ;
  1461  000A50  0ED8               	movlw	216
  1462  000A52  6ECF               	movwf	207,c	;volatile
  1463                           
  1464                           ;hw_I2C.c: 89: TMR1L = ~(10000%256)&0xff ;
  1465  000A54  0EEF               	movlw	239
  1466  000A56  6ECE               	movwf	206,c	;volatile
  1467  000A58                     
  1468                           ;hw_I2C.c: 90: T1CONbits.TMR1ON = 1 ;
  1469  000A58  80CD               	bsf	205,0,c	;volatile
  1470  000A5A                     l1070:
  1471  000A5A  0E00               	movlw	0
  1472  000A5C  B69E               	btfsc	158,3,c	;volatile
  1473  000A5E  0E01               	movlw	1
  1474  000A60  B09E               	btfsc	158,0,c	;volatile
  1475  000A62  0E01               	movlw	1
  1476  000A64  B0E8               	btfsc	wreg,0,c
  1477  000A66  EF37  F005         	goto	u11
  1478  000A6A  EF3B  F005         	goto	u10
  1479  000A6E                     u11:
  1480  000A6E  6A01               	clrf	??_poll_if_tim1^0,c
  1481  000A70  2A01               	incf	??_poll_if_tim1^0,f,c
  1482  000A72  EF3C  F005         	goto	u18
  1483  000A76                     u10:
  1484  000A76  6A01               	clrf	??_poll_if_tim1^0,c
  1485  000A78                     u18:
  1486  000A78  5001               	movf	??_poll_if_tim1^0,w,c
  1487  000A7A  B4D8               	btfsc	status,2,c
  1488  000A7C  EF42  F005         	goto	u21
  1489  000A80  EF44  F005         	goto	u20
  1490  000A84                     u21:
  1491  000A84  EF2D  F005         	goto	l1070
  1492  000A88                     u20:
  1493  000A88                     
  1494                           ;hw_I2C.c: 92: if (PIR1bits.TMR1IF) { err_flg = 0x01 ; }
  1495  000A88  A09E               	btfss	158,0,c	;volatile
  1496  000A8A  EF49  F005         	goto	u31
  1497  000A8E  EF4B  F005         	goto	u30
  1498  000A92                     u31:
  1499  000A92  EF4B  F005         	goto	l1074
  1500  000A96                     u30:
  1501  000A96                     l1074:
  1502                           
  1503                           ;hw_I2C.c: 93: PIR1bits.SSPIF = 0 ;
  1504  000A96  969E               	bcf	158,3,c	;volatile
  1505  000A98                     
  1506                           ;hw_I2C.c: 94: PIR1bits.TMR1IF =0 ;
  1507  000A98  909E               	bcf	158,0,c	;volatile
  1508  000A9A                     
  1509                           ;hw_I2C.c: 95: T1CONbits.TMR1ON ;
  1510  000A9A  50CD               	movf	205,w,c	;volatile
  1511  000A9C  0012               	return		;funcret
  1512  000A9E                     __end_of_poll_if_tim1:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _UART_send_string *****************
  1516 ;; Defined at:
  1517 ;;		line 54 in file "hw_uart.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  st_pt           2    1[COMRAM] PTR unsigned char 
  1520 ;;		 -> main@memory_string(10), main@_adc_str(20), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1532 ;;      Params:         2       0       0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0
  1535 ;;      Totals:         2       0       0       0       0       0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    1
  1539 ;; This function calls:
  1540 ;;		_UART_send_char
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text12
  1547  000A9E                     __ptext12:
  1548                           	callstack 0
  1549  000A9E                     _UART_send_string:
  1550                           	callstack 29
  1551  000A9E                     
  1552                           ;hw_uart.c: 56: while(*st_pt)
  1553  000A9E  EF5A  F005         	goto	l1516
  1554  000AA2                     l1512:
  1555                           
  1556                           ;hw_uart.c: 57: UART_send_char(*st_pt++);
  1557  000AA2  C002  FFD9         	movff	UART_send_string@st_pt,fsr2l
  1558  000AA6  C003  FFDA         	movff	UART_send_string@st_pt+1,fsr2h
  1559  000AAA  50DF               	movf	indf2,w,c
  1560  000AAC  EC97  F005         	call	_UART_send_char
  1561  000AB0  4A02               	infsnz	UART_send_string@st_pt^0,f,c
  1562  000AB2  2A03               	incf	(UART_send_string@st_pt+1)^0,f,c
  1563  000AB4                     l1516:
  1564  000AB4  C002  FFD9         	movff	UART_send_string@st_pt,fsr2l
  1565  000AB8  C003  FFDA         	movff	UART_send_string@st_pt+1,fsr2h
  1566  000ABC  50DF               	movf	indf2,w,c
  1567  000ABE  A4D8               	btfss	status,2,c
  1568  000AC0  EF64  F005         	goto	u411
  1569  000AC4  EF66  F005         	goto	u410
  1570  000AC8                     u411:
  1571  000AC8  EF51  F005         	goto	l1512
  1572  000ACC                     u410:
  1573  000ACC  0012               	return		;funcret
  1574  000ACE                     __end_of_UART_send_string:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _UART_send_char *****************
  1578 ;; Defined at:
  1579 ;;		line 27 in file "hw_uart.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  bt              1    wreg     unsigned char 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  bt              1    0[COMRAM] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1593 ;;      Params:         0       0       0       0       0       0       0
  1594 ;;      Locals:         1       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0
  1596 ;;      Totals:         1       0       0       0       0       0       0
  1597 ;;Total ram usage:        1 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_UART_send_string
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text13
  1607  000B2E                     __ptext13:
  1608                           	callstack 0
  1609  000B2E                     _UART_send_char:
  1610                           	callstack 29
  1611                           
  1612                           ;incstack = 0
  1613                           ;UART_send_char@bt stored from wreg
  1614  000B2E  6E01               	movwf	UART_send_char@bt^0,c
  1615  000B30                     l95:
  1616  000B30  A89E               	btfss	3998,4,c	;volatile
  1617  000B32  EF9D  F005         	goto	u41
  1618  000B36  EF9F  F005         	goto	u40
  1619  000B3A                     u41:
  1620  000B3A  EF98  F005         	goto	l95
  1621  000B3E                     u40:
  1622  000B3E                     
  1623                           ;hw_uart.c: 30: TXREG = bt;
  1624  000B3E  C001  FFAD         	movff	UART_send_char@bt,4013	;volatile
  1625  000B42  0012               	return		;funcret
  1626  000B44                     __end_of_UART_send_char:
  1627                           	callstack 0
  1628                           
  1629 ;; *************** function _UART_Init *****************
  1630 ;; Defined at:
  1631 ;;		line 10 in file "hw_uart.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  baud_rate       2    0[COMRAM] unsigned int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1645 ;;      Params:         2       0       0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0
  1648 ;;      Totals:         2       0       0       0       0       0       0
  1649 ;;Total ram usage:        2 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text14
  1659  000B5A                     __ptext14:
  1660                           	callstack 0
  1661  000B5A                     _UART_Init:
  1662                           	callstack 30
  1663  000B5A                     
  1664                           ;hw_uart.c: 13: TXSTAbits.TXEN = 1;
  1665  000B5A  8AAC               	bsf	172,5,c	;volatile
  1666                           
  1667                           ;hw_uart.c: 15: TXSTAbits.SYNC = 0;
  1668  000B5C  98AC               	bcf	172,4,c	;volatile
  1669                           
  1670                           ;hw_uart.c: 17: TXSTAbits.BRGH = 0;
  1671  000B5E  94AC               	bcf	172,2,c	;volatile
  1672                           
  1673                           ;hw_uart.c: 19: BAUDCONbits.BRG16 = 0;
  1674  000B60  96B8               	bcf	184,3,c	;volatile
  1675                           
  1676                           ;hw_uart.c: 21: RCSTAbits.SPEN = 1;
  1677  000B62  8EAB               	bsf	171,7,c	;volatile
  1678  000B64                     
  1679                           ;hw_uart.c: 23: SPBRGH = 0x00;
  1680  000B64  0E00               	movlw	0
  1681  000B66  6EB0               	movwf	176,c	;volatile
  1682                           
  1683                           ;hw_uart.c: 24: SPBRG = 0x0C;
  1684  000B68  0E0C               	movlw	12
  1685  000B6A  6EAF               	movwf	175,c	;volatile
  1686  000B6C  0012               	return		;funcret
  1687  000B6E                     __end_of_UART_Init:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _Read_ADC *****************
  1691 ;; Defined at:
  1692 ;;		line 43 in file "hw_adc.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  channel         1    wreg     unsigned char 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  channel         1    6[COMRAM] unsigned char 
  1697 ;;  result          2    4[COMRAM] unsigned int 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  2    0[COMRAM] unsigned int 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1707 ;;      Params:         2       0       0       0       0       0       0
  1708 ;;      Locals:         3       0       0       0       0       0       0
  1709 ;;      Temps:          2       0       0       0       0       0       0
  1710 ;;      Totals:         7       0       0       0       0       0       0
  1711 ;;Total ram usage:        7 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text15
  1721  0009EE                     __ptext15:
  1722                           	callstack 0
  1723  0009EE                     _Read_ADC:
  1724                           	callstack 30
  1725                           
  1726                           ;incstack = 0
  1727                           ;Read_ADC@channel stored from wreg
  1728  0009EE  6E07               	movwf	Read_ADC@channel^0,c
  1729  0009F0                     
  1730                           ;hw_adc.c: 47: if (channel == 0)
  1731  0009F0  5007               	movf	Read_ADC@channel^0,w,c
  1732  0009F2  A4D8               	btfss	status,2,c
  1733  0009F4  EFFE  F004         	goto	u331
  1734  0009F8  EF00  F005         	goto	u330
  1735  0009FC                     u331:
  1736  0009FC  EF04  F005         	goto	l1450
  1737  000A00                     u330:
  1738  000A00                     
  1739                           ;hw_adc.c: 48: {;hw_adc.c: 49: ADCON0bits.CHS = 0b0001;
  1740  000A00  50C2               	movf	194,w,c	;volatile
  1741  000A02  0BC3               	andlw	-61
  1742  000A04  0904               	iorlw	4
  1743  000A06  6EC2               	movwf	194,c	;volatile
  1744  000A08                     l1450:
  1745                           
  1746                           ;hw_adc.c: 51: };hw_adc.c: 52: if (channel == 1)
  1747  000A08  0407               	decf	Read_ADC@channel^0,w,c
  1748  000A0A  A4D8               	btfss	status,2,c
  1749  000A0C  EF0A  F005         	goto	u341
  1750  000A10  EF0C  F005         	goto	u340
  1751  000A14                     u341:
  1752  000A14  EF10  F005         	goto	l1454
  1753  000A18                     u340:
  1754  000A18                     
  1755                           ;hw_adc.c: 53: {;hw_adc.c: 55: ADCON0bits.CHS = 0b0010;
  1756  000A18  50C2               	movf	194,w,c	;volatile
  1757  000A1A  0BC3               	andlw	-61
  1758  000A1C  0908               	iorlw	8
  1759  000A1E  6EC2               	movwf	194,c	;volatile
  1760  000A20                     l1454:
  1761                           
  1762                           ;hw_adc.c: 57: };hw_adc.c: 59: ADCON0bits.GO = 1;
  1763  000A20  82C2               	bsf	194,1,c	;volatile
  1764  000A22                     l141:
  1765  000A22  B2C2               	btfsc	194,1,c	;volatile
  1766  000A24  EF16  F005         	goto	u351
  1767  000A28  EF18  F005         	goto	u350
  1768  000A2C                     u351:
  1769  000A2C  EF11  F005         	goto	l141
  1770  000A30                     u350:
  1771  000A30                     
  1772                           ;hw_adc.c: 61: result = (ADRESH << 8) | (ADRESL);
  1773  000A30  50C3               	movf	195,w,c	;volatile
  1774  000A32  CFC4 F003          	movff	4036,??_Read_ADC	;volatile
  1775  000A36  6A04               	clrf	(??_Read_ADC+1)^0,c
  1776  000A38  C003  F004         	movff	??_Read_ADC,??_Read_ADC+1
  1777  000A3C  6A03               	clrf	??_Read_ADC^0,c
  1778  000A3E  1003               	iorwf	??_Read_ADC^0,w,c
  1779  000A40  6E05               	movwf	Read_ADC@result^0,c
  1780  000A42  5004               	movf	(??_Read_ADC+1)^0,w,c
  1781  000A44  6E06               	movwf	(Read_ADC@result+1)^0,c
  1782  000A46                     
  1783                           ;hw_adc.c: 63: return result;
  1784  000A46  C005  F001         	movff	Read_ADC@result,?_Read_ADC
  1785  000A4A  C006  F002         	movff	Read_ADC@result+1,?_Read_ADC+1
  1786  000A4E  0012               	return		;funcret
  1787  000A50                     __end_of_Read_ADC:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _PORT_Initialize *****************
  1791 ;; Defined at:
  1792 ;;		line 94 in file "Test.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		None
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1806 ;;      Params:         0       0       0       0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0
  1809 ;;      Totals:         0       0       0       0       0       0       0
  1810 ;;Total ram usage:        0 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text16
  1820  000BB6                     __ptext16:
  1821                           	callstack 0
  1822  000BB6                     _PORT_Initialize:
  1823                           	callstack 30
  1824  000BB6                     
  1825                           ;Test.c: 96: TRISC6 = 1;
  1826  000BB6  8C94               	bsf	3988,6,c	;volatile
  1827                           
  1828                           ;Test.c: 97: TRISC7 = 1;
  1829  000BB8  8E94               	bsf	3988,7,c	;volatile
  1830  000BBA  0012               	return		;funcret
  1831  000BBC                     __end_of_PORT_Initialize:
  1832                           	callstack 0
  1833                           
  1834 ;; *************** function _InitI2C *****************
  1835 ;; Defined at:
  1836 ;;		line 19 in file "hw_I2C.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1850 ;;      Params:         0       0       0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text17
  1864  000B44                     __ptext17:
  1865                           	callstack 0
  1866  000B44                     _InitI2C:
  1867                           	callstack 30
  1868  000B44                     
  1869                           ;hw_I2C.c: 21: TRISC3 = 1;
  1870  000B44  8694               	bsf	3988,3,c	;volatile
  1871                           
  1872                           ;hw_I2C.c: 22: TRISC4 = 1;
  1873  000B46  8894               	bsf	3988,4,c	;volatile
  1874  000B48                     
  1875                           ;hw_I2C.c: 24: SSPADD = 0x13;
  1876  000B48  0E13               	movlw	19
  1877  000B4A  6EC8               	movwf	200,c	;volatile
  1878  000B4C                     
  1879                           ;hw_I2C.c: 25: SSPCON1bits.SSPEN = 1;
  1880  000B4C  8AC6               	bsf	198,5,c	;volatile
  1881                           
  1882                           ;hw_I2C.c: 26: SSPCON1bits.SSPM = 0b1000;
  1883  000B4E  50C6               	movf	198,w,c	;volatile
  1884  000B50  0BF0               	andlw	-16
  1885  000B52  0908               	iorlw	8
  1886  000B54  6EC6               	movwf	198,c	;volatile
  1887  000B56                     
  1888                           ;hw_I2C.c: 27: SSPIF = 0;
  1889  000B56  969E               	bcf	3998,3,c	;volatile
  1890  000B58  0012               	return		;funcret
  1891  000B5A                     __end_of_InitI2C:
  1892                           	callstack 0
  1893                           
  1894 ;; *************** function _CLK_intialize *****************
  1895 ;; Defined at:
  1896 ;;		line 82 in file "Test.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1910 ;;      Params:         0       0       0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; This function calls:
  1917 ;;		Nothing
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text18
  1924  000B88                     __ptext18:
  1925                           	callstack 0
  1926  000B88                     _CLK_intialize:
  1927                           	callstack 30
  1928  000B88                     
  1929                           ;Test.c: 88: OSCCONbits.IRCF = 0b111;
  1930  000B88  0E70               	movlw	112
  1931  000B8A  12D3               	iorwf	211,f,c	;volatile
  1932  000B8C                     
  1933                           ;Test.c: 90: OSCCONbits.IDLEN = 0b0;
  1934  000B8C  9ED3               	bcf	211,7,c	;volatile
  1935                           
  1936                           ;Test.c: 91: OSCCONbits.SCS = 0b11 ;
  1937  000B8E  0E03               	movlw	3
  1938  000B90  12D3               	iorwf	211,f,c	;volatile
  1939  000B92  0012               	return		;funcret
  1940  000B94                     __end_of_CLK_intialize:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _ADC_intialize *****************
  1944 ;; Defined at:
  1945 ;;		line 18 in file "hw_adc.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1959 ;;      Params:         0       0       0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text19
  1973  000AF6                     __ptext19:
  1974                           	callstack 0
  1975  000AF6                     _ADC_intialize:
  1976                           	callstack 30
  1977  000AF6                     
  1978                           ;hw_adc.c: 25: TRISA1 = 1 ;
  1979  000AF6  8292               	bsf	3986,1,c	;volatile
  1980                           
  1981                           ;hw_adc.c: 26: TRISA2 = 1 ;
  1982  000AF8  8492               	bsf	3986,2,c	;volatile
  1983  000AFA                     
  1984                           ;hw_adc.c: 32: ADCON1bits.PCFG = 0b1100;
  1985  000AFA  50C1               	movf	193,w,c	;volatile
  1986  000AFC  0BF0               	andlw	-16
  1987  000AFE  090C               	iorlw	12
  1988  000B00  6EC1               	movwf	193,c	;volatile
  1989  000B02                     
  1990                           ;hw_adc.c: 33: ADCON1bits.VCFG0 = 0;
  1991  000B02  98C1               	bcf	193,4,c	;volatile
  1992  000B04                     
  1993                           ;hw_adc.c: 34: ADCON1bits.VCFG1 = 0 ;
  1994  000B04  9AC1               	bcf	193,5,c	;volatile
  1995                           
  1996                           ;hw_adc.c: 37: ADCON2bits.ADCS = 0b110;
  1997  000B06  50C0               	movf	192,w,c	;volatile
  1998  000B08  0BF8               	andlw	-8
  1999  000B0A  0906               	iorlw	6
  2000  000B0C  6EC0               	movwf	192,c	;volatile
  2001                           
  2002                           ;hw_adc.c: 38: ADCON2bits.ACQT = 0b111;
  2003  000B0E  0E38               	movlw	56
  2004  000B10  12C0               	iorwf	192,f,c	;volatile
  2005  000B12                     
  2006                           ;hw_adc.c: 39: ADCON2bits.ADFM = 1;
  2007  000B12  8EC0               	bsf	192,7,c	;volatile
  2008  000B14                     
  2009                           ;hw_adc.c: 40: ADCON0bits.ADON = 1 ;
  2010  000B14  80C2               	bsf	194,0,c	;volatile
  2011  000B16  0012               	return		;funcret
  2012  000B18                     __end_of_ADC_intialize:
  2013                           	callstack 0
  2014                           
  2015                           	psect	rparam
  2016  0000                     
  2017                           	psect	idloc
  2018                           
  2019                           ;Config register IDLOC0 @ 0x200000
  2020                           ;	unspecified, using default values
  2021  200000                     	org	2097152
  2022  200000  FF                 	db	255
  2023                           
  2024                           ;Config register IDLOC1 @ 0x200001
  2025                           ;	unspecified, using default values
  2026  200001                     	org	2097153
  2027  200001  FF                 	db	255
  2028                           
  2029                           ;Config register IDLOC2 @ 0x200002
  2030                           ;	unspecified, using default values
  2031  200002                     	org	2097154
  2032  200002  FF                 	db	255
  2033                           
  2034                           ;Config register IDLOC3 @ 0x200003
  2035                           ;	unspecified, using default values
  2036  200003                     	org	2097155
  2037  200003  FF                 	db	255
  2038                           
  2039                           ;Config register IDLOC4 @ 0x200004
  2040                           ;	unspecified, using default values
  2041  200004                     	org	2097156
  2042  200004  FF                 	db	255
  2043                           
  2044                           ;Config register IDLOC5 @ 0x200005
  2045                           ;	unspecified, using default values
  2046  200005                     	org	2097157
  2047  200005  FF                 	db	255
  2048                           
  2049                           ;Config register IDLOC6 @ 0x200006
  2050                           ;	unspecified, using default values
  2051  200006                     	org	2097158
  2052  200006  FF                 	db	255
  2053                           
  2054                           ;Config register IDLOC7 @ 0x200007
  2055                           ;	unspecified, using default values
  2056  200007                     	org	2097159
  2057  200007  FF                 	db	255
  2058                           
  2059                           	psect	config
  2060                           
  2061                           ; Padding undefined space
  2062  300000                     	org	3145728
  2063  300000  FF                 	db	255
  2064                           
  2065                           ;Config register CONFIG1H @ 0x300001
  2066                           ;	Oscillator Selection bits
  2067                           ;	OSC = INTIO7, Internal oscillator block, CLKO function on RA6, port function on RA7
  2068                           ;	Fail-Safe Clock Monitor Enable bit
  2069                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2070                           ;	Internal/External Oscillator Switchover bit
  2071                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2072  300001                     	org	3145729
  2073  300001  09                 	db	9
  2074                           
  2075                           ;Config register CONFIG2L @ 0x300002
  2076                           ;	Power-up Timer Enable bit
  2077                           ;	PWRT = OFF, PWRT disabled
  2078                           ;	Brown-out Reset Enable bits
  2079                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2080                           ;	Brown Out Reset Voltage bits
  2081                           ;	BORV = 3, Minimum setting
  2082  300002                     	org	3145730
  2083  300002  1F                 	db	31
  2084                           
  2085                           ;Config register CONFIG2H @ 0x300003
  2086                           ;	Watchdog Timer Enable bit
  2087                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2088                           ;	Watchdog Timer Postscale Select bits
  2089                           ;	WDTPS = 32768, 1:32768
  2090  300003                     	org	3145731
  2091  300003  1E                 	db	30
  2092                           
  2093                           ; Padding undefined space
  2094  300004                     	org	3145732
  2095  300004  FF                 	db	255
  2096                           
  2097                           ;Config register CONFIG3H @ 0x300005
  2098                           ;	CCP2 MUX bit
  2099                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2100                           ;	PORTB A/D Enable bit
  2101                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2102                           ;	Low-Power Timer1 Oscillator Enable bit
  2103                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2104                           ;	MCLR Pin Enable bit
  2105                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2106  300005                     	org	3145733
  2107  300005  83                 	db	131
  2108                           
  2109                           ;Config register CONFIG4L @ 0x300006
  2110                           ;	Stack Full/Underflow Reset Enable bit
  2111                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2112                           ;	Single-Supply ICSP Enable bit
  2113                           ;	LVP = ON, Single-Supply ICSP enabled
  2114                           ;	Extended Instruction Set Enable bit
  2115                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2116                           ;	Background Debugger Enable bit
  2117                           ;	DEBUG = 0x1, unprogrammed default
  2118  300006                     	org	3145734
  2119  300006  85                 	db	133
  2120                           
  2121                           ; Padding undefined space
  2122  300007                     	org	3145735
  2123  300007  FF                 	db	255
  2124                           
  2125                           ;Config register CONFIG5L @ 0x300008
  2126                           ;	Code Protection bit
  2127                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2128                           ;	Code Protection bit
  2129                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2130                           ;	Code Protection bit
  2131                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2132                           ;	Code Protection bit
  2133                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2134  300008                     	org	3145736
  2135  300008  0F                 	db	15
  2136                           
  2137                           ;Config register CONFIG5H @ 0x300009
  2138                           ;	Boot Block Code Protection bit
  2139                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2140                           ;	Data EEPROM Code Protection bit
  2141                           ;	CPD = OFF, Data EEPROM not code-protected
  2142  300009                     	org	3145737
  2143  300009  C0                 	db	192
  2144                           
  2145                           ;Config register CONFIG6L @ 0x30000A
  2146                           ;	Write Protection bit
  2147                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2148                           ;	Write Protection bit
  2149                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2150                           ;	Write Protection bit
  2151                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2152                           ;	Write Protection bit
  2153                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2154  30000A                     	org	3145738
  2155  30000A  0F                 	db	15
  2156                           
  2157                           ;Config register CONFIG6H @ 0x30000B
  2158                           ;	Configuration Register Write Protection bit
  2159                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2160                           ;	Boot Block Write Protection bit
  2161                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2162                           ;	Data EEPROM Write Protection bit
  2163                           ;	WRTD = OFF, Data EEPROM not write-protected
  2164  30000B                     	org	3145739
  2165  30000B  E0                 	db	224
  2166                           
  2167                           ;Config register CONFIG7L @ 0x30000C
  2168                           ;	Table Read Protection bit
  2169                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2170                           ;	Table Read Protection bit
  2171                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2172                           ;	Table Read Protection bit
  2173                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2174                           ;	Table Read Protection bit
  2175                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2176  30000C                     	org	3145740
  2177  30000C  0F                 	db	15
  2178                           
  2179                           ;Config register CONFIG7H @ 0x30000D
  2180                           ;	Boot Block Table Read Protection bit
  2181                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2182  30000D                     	org	3145741
  2183  30000D  40                 	db	64
  2184                           tosu	equ	0xFFF
  2185                           tosh	equ	0xFFE
  2186                           tosl	equ	0xFFD
  2187                           stkptr	equ	0xFFC
  2188                           pclatu	equ	0xFFB
  2189                           pclath	equ	0xFFA
  2190                           pcl	equ	0xFF9
  2191                           tblptru	equ	0xFF8
  2192                           tblptrh	equ	0xFF7
  2193                           tblptrl	equ	0xFF6
  2194                           tablat	equ	0xFF5
  2195                           prodh	equ	0xFF4
  2196                           prodl	equ	0xFF3
  2197                           indf0	equ	0xFEF
  2198                           postinc0	equ	0xFEE
  2199                           postdec0	equ	0xFED
  2200                           preinc0	equ	0xFEC
  2201                           plusw0	equ	0xFEB
  2202                           fsr0h	equ	0xFEA
  2203                           fsr0l	equ	0xFE9
  2204                           wreg	equ	0xFE8
  2205                           indf1	equ	0xFE7
  2206                           postinc1	equ	0xFE6
  2207                           postdec1	equ	0xFE5
  2208                           preinc1	equ	0xFE4
  2209                           plusw1	equ	0xFE3
  2210                           fsr1h	equ	0xFE2
  2211                           fsr1l	equ	0xFE1
  2212                           bsr	equ	0xFE0
  2213                           indf2	equ	0xFDF
  2214                           postinc2	equ	0xFDE
  2215                           postdec2	equ	0xFDD
  2216                           preinc2	equ	0xFDC
  2217                           plusw2	equ	0xFDB
  2218                           fsr2h	equ	0xFDA
  2219                           fsr2l	equ	0xFD9
  2220                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     81      95
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_3(CODE[12]), STR_2(CODE[11]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@memory_string(COMRAM[10]), main@_adc_str(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 20
		 -> main@memory_string(COMRAM[10]), main@_adc_str(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _rtcc_rd->_i2c_rd
    _rtcc_rd->_i2c_wr
    _i2c_wr->_poll_if_tim1
    _i2c_stop->_poll_if_tim1
    _i2c_start->_poll_if_tim1
    _i2c_restart->_poll_if_tim1
    _i2c_rd->_poll_if_tim1
    _i2c_nack->_poll_if_tim1
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                92    92      0    2153
                                             25 COMRAM    56    56      0
                      _ADC_intialize
                      _CLK_intialize
                            _InitI2C
                    _PORT_Initialize
                           _Read_ADC
                          _UART_Init
                   _UART_send_string
                            _rtcc_rd
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    1468
                                             12 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _rtcc_rd                                              1     1      0      35
                                              3 COMRAM     1     1      0
                           _i2c_nack
                             _i2c_rd
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                             _i2c_wr
 ---------------------------------------------------------------------------------
 (2) _i2c_wr                                               1     1      0      15
                                              2 COMRAM     1     1      0
                       _poll_if_tim1
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                       _poll_if_tim1
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                       _poll_if_tim1
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
                       _poll_if_tim1
 ---------------------------------------------------------------------------------
 (2) _i2c_rd                                               1     1      0      15
                                              2 COMRAM     1     1      0
                       _poll_if_tim1
 ---------------------------------------------------------------------------------
 (2) _i2c_nack                                             0     0      0       0
                       _poll_if_tim1
 ---------------------------------------------------------------------------------
 (3) _poll_if_tim1                                         2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     0      2     288
                                              1 COMRAM     2     0      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             7     5      2      68
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _PORT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLK_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_intialize
   _CLK_intialize
   _InitI2C
   _PORT_Initialize
   _Read_ADC
   _UART_Init
   _UART_send_string
     _UART_send_char
   _rtcc_rd
     _i2c_nack
       _poll_if_tim1
     _i2c_rd
       _poll_if_tim1
     _i2c_restart
       _poll_if_tim1
     _i2c_start
       _poll_if_tim1
     _i2c_stop
       _poll_if_tim1
     _i2c_wr
       _poll_if_tim1
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     51      5F       1       74.8%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F      14        0.0%
DATA                 0      0      5F      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 02 11:33:58 2021

                        _i 005E                         l41 0B92                         l44 0BBA  
                       l92 0B6C                         l95 0B30                         l98 0B42  
                       u10 0A76                         u11 0A6E                         u20 0A88  
                       u21 0A84                         u30 0A96                         u31 0A92  
                       u40 0B3E                         u41 0B3A                         u18 0A78  
           ?_CLK_intialize 0001                        l111 0ACC                        l211 0A88  
                      l141 0A22                        l213 0A9C                        l222 0BA4  
                      l136 0B16                        l144 0A4E                        l216 0BAC  
                      l312 087A                        l225 0B86                        l234 0B9C  
                      l219 0BB4                        l228 0B7A                        l318 0914  
                      _ADC 0052                        l185 0B58                        l265 0AF4  
                      l800 0980                        l810 09E4                        l807 0988  
                      l817 09EC                        u300 099C                        u301 0998  
                      u310 09BA                        u311 09B6                        u320 09D0  
                      u400 0908                        u321 09CC                        u401 0904  
                      u330 0A00                        u410 0ACC                        u331 09FC  
                      u411 0AC8                        u340 0A18                        u341 0A14  
                      u350 0A30                        u270 0930                        u351 0A2C  
                      u271 092C                        u280 094E                        u360 07D0  
                      _PEN 007E2A                        u281 094A                        u361 07CC  
                      u290 096A                        u370 0862                        u291 0966  
                      u371 085E                        u507 07A2                        u427 065C  
                      u380 087A                        u381 0876                        u437 0672  
                      u390 08E6                        u391 08E2                        u447 068A  
                      u457 06A2                        u467 06BA                        _SEN 007E28  
                      u477 0708                        u487 0756                        u497 0794  
                      wreg 000FE8                       l1100 0B7E                       l1110 0B78  
                     l1102 0B82                       l1200 0B14                       l1104 0B6E  
                     l1202 0B44                       l1114 0B94                       l1106 0B70  
                     l1204 0B48                       l1116 0B98                       l1108 0B74  
                     l1206 0B4C                       l1070 0A5A                       l1208 0B56  
                     l1160 0BB6                       l1080 0B30                       l1072 0A96  
                     l1082 0B3E                       l1074 0A96                       l1066 0A50  
                     l1090 0BA8                       l1410 0940                       l1402 0916  
                     l1156 0B88                       l1076 0A98                       l1068 0A58  
                     l1092 0BAE                       l1420 0974                       l1412 094E  
                     l1404 091E                       l1500 08D0                       l1190 0AF6  
                     l1158 0B8C                       l1510 0A9E                       l1078 0A9A  
                     l1094 0BB0                       l1422 097A                       l1414 0954  
                     l1406 0930                       l1430 09AC                       l1502 08D4  
                     l1192 0AFA                       l1440 0B5A                       l1512 0AA2  
                     l1088 0BA6                       l1096 0B9E                       l1416 096A  
                     l1408 0938                       l1432 09BA                       l1424 098A  
                     l1504 08E6                       l1520 0636                       l1194 0B02  
                     l1450 0A08                       l1442 0B64                       l1514 0AB0  
                     l1098 0BA0                       l1418 0972                       l1434 09D0  
                     l1426 099C                       l1506 0908                       l1530 0668  
                     l1522 063E                       l1196 0B04                       l1452 0A18  
                     l1444 09F0                       l1516 0AB4                       l1284 0ACE  
                     l1436 09D8                       l1428 09A4                       l1540 06AE  
                     l1532 067E                       l1524 064A                       l1198 0B12  
                     l1454 0A20                       l1446 09F0                       l1438 09DE  
                     l1470 07E4                       l1462 07B2                       l1550 06F2  
                     l1542 06B0                       l1534 0680                       l1526 064E  
                     l1518 062E                       l1456 0A30                       l1448 0A00  
                     l1480 082C                       l1472 07EC                       l1464 07BE  
                     l1560 074C                       l1552 06FE                       l1544 06C6  
                     l1536 0696                       l1528 0652                       l1458 0A46  
                     l1482 0834                       l1466 07D0                       l1570 079C  
                     l1562 0764                       l1554 0716                       l1546 06C8  
                     l1538 0698                       l1492 0866                       l1476 07F4  
                     l1468 07DC                       l1564 077E                       l1556 0724  
                     l1548 06D6                       l1494 0868                       l1478 081C  
                     l1566 078A                       l1558 0740                       l1496 0882  
                     l1488 0838                       l1568 078E                       l1498 08C4  
                     STR_1 0622                       STR_2 0617                       STR_3 060B  
                     _IPEN 007E87                       _RCIF 007CF5                       _RCEN 007E2B  
                     _RSEN 007E29                       _TXIF 007CF4                       _main 062E  
             main@_adc_str 0030                       fsr2h 000FDA                       indf2 000FDF  
                     fsr2l 000FD9                       prodh 000FF4                       prodl 000FF3  
                     start 0000              ??_i2c_restart 0003               ___param_bank 000000  
          __end_of_InitI2C 0B5A  __size_of_UART_send_string 0030                      ?_main 0001  
                    _ACKEN 007E2C                      _ACKDT 007E2D                      _EEADR 000FA9  
                    _LATA4 007C4C                      _LATA5 007C4D                      _LATA6 007C4E  
          __end_of___lwdiv 098A            __end_of___lwmod 09EE                      _RCREG 000FAE  
                    _TMR1H 000FCF                      _TMR1L 000FCE                      _SPBRG 000FAF  
                    _SSPIF 007CF3                      _TXREG 000FAD         __size_of_UART_Init 0014  
          __end_of_dpowers 060B                      _value 0056               main@temp_adc 004E  
                    tablat 000FF5            __end_of_rtcc_rd 0AF6                      status 000FD8  
          __end_of_sprintf 0916          ??_PORT_Initialize 0001            __initialization 0B18  
             __end_of_main 07B2          main@memory_string 0044           __end_of_Read_ADC 0A50  
         __end_of_i2c_nack 0B9E           __end_of_i2c_stop 0BA6            ??_CLK_intialize 0001  
      __end_of_i2c_restart 0BB6                     ??_main 001A              __activetblptr 000002  
                   _ADRESH 000FC4                     _ADRESL 000FC3                     _EEDATA 000FA8  
                   _EECON1 000FA6                     _EECON2 000FA7                     _SPBRGH 000FB0  
                   _SSPADD 000FC8                     _TRISA1 007C91                     _TRISB0 007C98  
                   _TRISA2 007C92                     _TRISB1 007C99                     _TRISC3 007CA3  
                   _TRISC4 007CA4                     _TRISC6 007CA6                     _TRISC7 007CA7  
                   _SSPBUF 000FC9         __size_of_i2c_start 0008                  ??_InitI2C 0001  
                   _i2c_rd 0B6E                     _i2c_wr 0B7C              main@humid_adc 0050  
        __end_of_UART_Init 0B6E            Read_ADC@channel 0007                  ??___lwdiv 0005  
                ??___lwmod 000C                     clear_0 0B1E               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_rtcc_rd 0004                  ??_sprintf 0013                 __accesstop 0080  
  __end_of__initialization 0B24              ___rparam_used 000001             __pcstackCOMRAM 0001  
              _i2c_restart 0BAE           _UART_send_string 0A9E          __end_of_i2c_start 0BAE  
                ?_Read_ADC 0001                  ?_i2c_nack 0001     __size_of_ADC_intialize 0022  
                ?_i2c_stop 0001                    ?_i2c_rd 0001                    ?_i2c_wr 0001  
          _PORT_Initialize 0BB6    __size_of_UART_send_char 0016                    _SSPCON2 000FC5  
                  _SSPSTAT 000FC7                 ??_Read_ADC 0003                 ??_i2c_nack 0003  
               ??_i2c_stop 0003                    _InitI2C 0B44                    __Hparam 0000  
          __size_of_i2c_rd 000E                    __Lparam 0000            __size_of_i2c_wr 000C  
                  ___lwdiv 0916                    ___lwmod 098A               __psmallconst 0600  
                  __pcinit 0B18              _ADC_intialize 0AF6                    __ramtop 0600  
                  __ptext0 062E                    __ptext1 07B2                    __ptext2 098A  
                  __ptext3 0916                    __ptext4 0ACE                    __ptext5 0B7C  
                  __ptext6 0B9E                    __ptext7 0BA6                    __ptext8 0BAE  
                  __ptext9 0B6E                  _T1CONbits 000FCD                    _dpowers 0601  
            ?_poll_if_tim1 0001                    _rtcc_rd 0ACE                    _sprintf 07B2  
                  _voltage 005A       end_of_initialization 0B24              __Lmediumconst 0000  
                _RCSTAbits 000FAB                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE             ?_ADC_intialize 0001                  _UART_Init 0B5A  
  __end_of_PORT_Initialize 0BBC      __end_of_CLK_intialize 0B94             ??_poll_if_tim1 0001  
       UART_Init@baud_rate 0001   __end_of_UART_send_string 0ACE                  _TXSTAbits 000FAC  
               main@memory 001C             __end_of_i2c_rd 0B7C               ?_i2c_restart 0001  
           __end_of_i2c_wr 0B88                _BAUDCONbits 000FB8                 ?_UART_Init 0001  
      start_initialization 0B18             _UART_send_char 0B2E                  _i2c_start 0BA6  
        __size_of_Read_ADC 0062          __size_of_i2c_nack 000A          __size_of_i2c_stop 0008  
                 ??_i2c_rd 0003                   ??_i2c_wr 0003            ??_ADC_intialize 0001  
           Read_ADC@result 0005           ?_PORT_Initialize 0001     __end_of_UART_send_char 0B44  
              __pbssCOMRAM 0052                 ?_i2c_start 0001             i2c_rd@rtcc_buf 0003  
              sprintf@flag 0013                sprintf@prec 0018                   ?_InitI2C 0001  
     __end_of_poll_if_tim1 0A9E           ___lwdiv@dividend 0001                   ?___lwdiv 0001  
                 ?___lwmod 0008                ??_UART_Init 0003           UART_send_char@bt 0001  
              __smallconst 0600            ?_UART_send_char 0001                   ?_rtcc_rd 0001  
         ___lwdiv@quotient 0005                   ?_sprintf 000D                   _PIR1bits 000F9E  
                 _PIR2bits 000FA1       __size_of_i2c_restart 0008                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1                 _ADCON2bits 000FC0      UART_send_string@st_pt 0002  
           i2c_wr@i2c_data 0003                ??_i2c_start 0003          ?_UART_send_string 0002  
                 _Read_ADC 09EE                   _i2c_nack 0B94                   _i2c_stop 0B9E  
       ??_UART_send_string 0004                 _EECON1bits 000FA6           __size_of_InitI2C 0016  
                 __Hrparam 0000                   __Lrparam 0000           __size_of___lwdiv 0074  
         __size_of___lwmod 0064                 sprintf@val 0016            ___lwdiv@divisor 0003  
          ___lwdiv@counter 0007                   __ptext10 0B94                   __ptext11 0A50  
                 __ptext12 0A9E                   __ptext13 0B2E                   __ptext14 0B5A  
                 __ptext15 09EE                   __ptext16 0BB6                   __ptext17 0B44  
                 __ptext18 0B88                   __ptext19 0AF6           __size_of_rtcc_rd 0028  
    __size_of_poll_if_tim1 004E           __size_of_sprintf 0164              __size_of_main 0184  
   __size_of_CLK_intialize 000C               _poll_if_tim1 0A50                 _INTCONbits 000FF2  
                sprintf@ap 0014                  sprintf@sp 000D           ___lwmod@dividend 0008  
               _OSCCONbits 000FD3           ??_UART_send_char 0001      __end_of_ADC_intialize 0B18  
                 sprintf@c 0019                   sprintf@f 000F              _CLK_intialize 0B88  
          ___lwmod@divisor 000A            ___lwmod@counter 000C                _SSPCON1bits 000FC6  
              _SSPCON2bits 000FC5   __size_of_PORT_Initialize 0006  
