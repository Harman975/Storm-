

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 15:21:50 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F2520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	smallconst
    68  000600                     __psmallconst:
    69                           	callstack 0
    70  000600  00                 	db	0
    71  000601                     _dpowers:
    72                           	callstack 0
    73  000601  0001               	dw	1
    74  000603  000A               	dw	10
    75  000605  0064               	dw	100
    76  000607  03E8               	dw	1000
    77  000609  2710               	dw	10000
    78  00060B                     __end_of_dpowers:
    79                           	callstack 0
    80  0000                     _SSPBUF	set	4041
    81  0000                     _SSPCON2	set	4037
    82  0000                     _SSPCON1bits	set	4038
    83  0000                     _SSPSTAT	set	4039
    84  0000                     _SSPADD	set	4040
    85  0000                     _ADRESL	set	4035
    86  0000                     _ADRESH	set	4036
    87  0000                     _ADCON0bits	set	4034
    88  0000                     _ADCON2bits	set	4032
    89  0000                     _ADCON1bits	set	4033
    90  0000                     _RCREG	set	4014
    91  0000                     _TXREG	set	4013
    92  0000                     _SPBRG	set	4015
    93  0000                     _SPBRGH	set	4016
    94  0000                     _RCSTAbits	set	4011
    95  0000                     _BAUDCONbits	set	4024
    96  0000                     _TXSTAbits	set	4012
    97  0000                     _INTCONbits	set	4082
    98  0000                     _OSCCONbits	set	4051
    99  0000                     _ACKEN	set	32300
   100  0000                     _ACKDT	set	32301
   101  0000                     _RCEN	set	32299
   102  0000                     _PEN	set	32298
   103  0000                     _RSEN	set	32297
   104  0000                     _SEN	set	32296
   105  0000                     _SSPIF	set	31987
   106  0000                     _TRISC4	set	31908
   107  0000                     _TRISC3	set	31907
   108  0000                     _TRISA2	set	31890
   109  0000                     _TRISA1	set	31889
   110  0000                     _RCIF	set	31989
   111  0000                     _LATA6	set	31822
   112  0000                     _LATA5	set	31821
   113  0000                     _LATA4	set	31820
   114  0000                     _TXIF	set	31988
   115  0000                     _TRISB1	set	31897
   116  0000                     _TRISC7	set	31911
   117  0000                     _TRISC6	set	31910
   118  00060B                     STR_1:
   119  00060B  44                 	db	68	;'D'
   120  00060C  61                 	db	97	;'a'
   121  00060D  76                 	db	118	;'v'
   122  00060E  65                 	db	101	;'e'
   123  00060F  20                 	db	32
   124  000610  69                 	db	105	;'i'
   125  000611  73                 	db	115	;'s'
   126  000612  20                 	db	32
   127  000613  61                 	db	97	;'a'
   128  000614  20                 	db	32
   129  000615  6C                 	db	108	;'l'
   130  000616  65                 	db	101	;'e'
   131  000617  67                 	db	103	;'g'
   132  000618  65                 	db	101	;'e'
   133  000619  6E                 	db	110	;'n'
   134  00061A  64                 	db	100	;'d'
   135  00061B  21                 	db	33
   136  00061C  0A                 	db	10
   137  00061D  00                 	db	0
   138  00061E                     STR_3:
   139  00061E  48                 	db	72	;'H'
   140  00061F  55                 	db	85	;'U'
   141  000620  4D                 	db	77	;'M'
   142  000621  49                 	db	73	;'I'
   143  000622  44                 	db	68	;'D'
   144  000623  3A                 	db	58	;':'
   145  000624  20                 	db	32
   146  000625  25                 	db	37
   147  000626  75                 	db	117	;'u'
   148  000627  0A                 	db	10
   149  000628  00                 	db	0
   150  000629                     STR_2:
   151  000629  54                 	db	84	;'T'
   152  00062A  45                 	db	69	;'E'
   153  00062B  4D                 	db	77	;'M'
   154  00062C  50                 	db	80	;'P'
   155  00062D  3A                 	db	58	;':'
   156  00062E  20                 	db	32
   157  00062F  25                 	db	37
   158  000630  75                 	db	117	;'u'
   159  000631  0A                 	db	10
   160  000632  00                 	db	0
   161  000633  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166  000B40                     __pcinit:
   167                           	callstack 0
   168  000B40                     start_initialization:
   169                           	callstack 0
   170  000B40                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to COMRAM (14 bytes)
   174  000B40  EE00  F034         	lfsr	0,__pbssCOMRAM
   175  000B44  0E0E               	movlw	14
   176  000B46                     clear_0:
   177  000B46  6AEE               	clrf	postinc0,c
   178  000B48  06E8               	decf	wreg,f,c
   179  000B4A  E1FD               	bnz	clear_0
   180  000B4C                     end_of_initialization:
   181                           	callstack 0
   182  000B4C                     __end_of__initialization:
   183                           	callstack 0
   184  000B4C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185  000B4E  6EF8               	movwf	tblptru,c
   186  000B50  0100               	movlb	0
   187  000B52  EFCC  F003         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMRAM
   190  000034                     __pbssCOMRAM:
   191                           	callstack 0
   192  000034                     _ADC:
   193                           	callstack 0
   194  000034                     	ds	4
   195  000038                     _value:
   196                           	callstack 0
   197  000038                     	ds	4
   198  00003C                     _voltage:
   199                           	callstack 0
   200  00003C                     	ds	4
   201  000040                     _i:
   202                           	callstack 0
   203  000040                     	ds	2
   204                           
   205                           	psect	cstackCOMRAM
   206  000001                     __pcstackCOMRAM:
   207                           	callstack 0
   208  000001                     ??_I2C_Master_Wait:
   209  000001                     ?_Read_ADC:
   210                           	callstack 0
   211  000001                     ?___lwdiv:
   212                           	callstack 0
   213  000001                     UART_send_char@bt:
   214                           	callstack 0
   215  000001                     UART_Init@baud_rate:
   216                           	callstack 0
   217  000001                     ___lwdiv@dividend:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x0
   221  000001                     	ds	1
   222  000002                     UART_send_string@st_pt:
   223                           	callstack 0
   224  000002                     I2C_Master_Write@d:
   225                           	callstack 0
   226  000002                     I2C_Master_Read@a:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x1
   230  000002                     	ds	1
   231  000003                     ??_Read_ADC:
   232  000003                     ___lwdiv@divisor:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x2
   236  000003                     	ds	1
   237  000004                     
   238                           ; 1 bytes @ 0x3
   239  000004                     	ds	1
   240  000005                     Read_ADC@result:
   241                           	callstack 0
   242  000005                     ___lwdiv@quotient:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x4
   246  000005                     	ds	1
   247  000006                     
   248                           ; 1 bytes @ 0x5
   249  000006                     	ds	1
   250  000007                     Read_ADC@channel:
   251                           	callstack 0
   252  000007                     ___lwdiv@counter:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x6
   256  000007                     	ds	1
   257  000008                     ?___lwmod:
   258                           	callstack 0
   259  000008                     ___lwmod@dividend:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x7
   263  000008                     	ds	2
   264  00000A                     ___lwmod@divisor:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x9
   268  00000A                     	ds	2
   269  00000C                     ___lwmod@counter:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0xB
   273  00000C                     	ds	1
   274  00000D                     ?_sprintf:
   275                           	callstack 0
   276  00000D                     sprintf@sp:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0xC
   280  00000D                     	ds	2
   281  00000F                     sprintf@f:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0xE
   285  00000F                     	ds	4
   286  000013                     sprintf@flag:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x12
   290  000013                     	ds	1
   291  000014                     sprintf@ap:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x13
   295  000014                     	ds	2
   296  000016                     sprintf@val:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x15
   300  000016                     	ds	2
   301  000018                     sprintf@prec:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x17
   305  000018                     	ds	1
   306  000019                     sprintf@c:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x18
   310  000019                     	ds	1
   311  00001A                     ??_main:
   312                           
   313                           ; 1 bytes @ 0x19
   314  00001A                     	ds	2
   315  00001C                     main@_adc_str:
   316                           	callstack 0
   317                           
   318                           ; 20 bytes @ 0x1B
   319  00001C                     	ds	20
   320  000030                     main@temp_adc:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x2F
   324  000030                     	ds	2
   325  000032                     main@humid_adc:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x31
   329  000032                     	ds	2
   330                           
   331 ;;
   332 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   333 ;;
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 116 in file "Test.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  _adc_str       20   27[COMRAM] unsigned char [20]
   341 ;;  _adc_buf       20    0        unsigned char [20]
   342 ;;  time           10    0        unsigned char [10]
   343 ;;  humid_adc       2   49[COMRAM] unsigned int 
   344 ;;  temp_adc        2   47[COMRAM] unsigned int 
   345 ;;  i2c_val         1    0        unsigned char 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   355 ;;      Params:         0       0       0       0       0       0       0
   356 ;;      Locals:        24       0       0       0       0       0       0
   357 ;;      Temps:          2       0       0       0       0       0       0
   358 ;;      Totals:        26       0       0       0       0       0       0
   359 ;;Total ram usage:       26 bytes
   360 ;; Hardware stack levels required when called:    3
   361 ;; This function calls:
   362 ;;		_ADC_intialize
   363 ;;		_CLK_intialize
   364 ;;		_I2C_Master_Start
   365 ;;		_I2C_Master_Stop
   366 ;;		_I2C_Master_Write
   367 ;;		_InitI2C
   368 ;;		_PORT_Initialize
   369 ;;		_Read_ADC
   370 ;;		_UART_Init
   371 ;;		_UART_send_string
   372 ;;		_sprintf
   373 ;;		_test_func
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text0
   380  000798                     __ptext0:
   381                           	callstack 0
   382  000798                     _main:
   383                           	callstack 28
   384  000798                     
   385                           ;Test.c: 120: unsigned int humid_adc = 0;
   386  000798  0E00               	movlw	0
   387  00079A  6E33               	movwf	(main@humid_adc+1)^0,c
   388  00079C  0E00               	movlw	0
   389  00079E  6E32               	movwf	main@humid_adc^0,c
   390  0007A0                     
   391                           ;Test.c: 122: char _adc_str[20];;Test.c: 123: char _adc_buf[20];;Test.c: 125: CLK_intial
      +                          ize();
   392  0007A0  ECC0  F005         	call	_CLK_intialize	;wreg free
   393                           
   394                           ;Test.c: 126: PORT_Initialize();
   395  0007A4  ECD3  F005         	call	_PORT_Initialize	;wreg free
   396  0007A8                     
   397                           ;Test.c: 127: UART_Init(9600);
   398  0007A8  0E25               	movlw	37
   399  0007AA  6E02               	movwf	(UART_Init@baud_rate+1)^0,c
   400  0007AC  0E80               	movlw	128
   401  0007AE  6E01               	movwf	UART_Init@baud_rate^0,c
   402  0007B0  ECB6  F005         	call	_UART_Init	;wreg free
   403  0007B4                     
   404                           ;Test.c: 128: ADC_intialize();
   405  0007B4  EC82  F005         	call	_ADC_intialize	;wreg free
   406  0007B8                     
   407                           ;Test.c: 130: InitI2C();
   408  0007B8  EC93  F005         	call	_InitI2C	;wreg free
   409  0007BC                     l1357:
   410                           
   411                           ;Test.c: 137: {;Test.c: 141: _delay((unsigned long)((500)*(8000000/4000.0)));
   412  0007BC  0E06               	movlw	6
   413  0007BE  6E1B               	movwf	(??_main+1)^0,c
   414  0007C0  0E13               	movlw	19
   415  0007C2  6E1A               	movwf	??_main^0,c
   416  0007C4  0EAE               	movlw	174
   417  0007C6                     u447:
   418  0007C6  2EE8               	decfsz	wreg,f,c
   419  0007C8  D7FE               	bra	u447
   420  0007CA  2E1A               	decfsz	??_main^0,f,c
   421  0007CC  D7FC               	bra	u447
   422  0007CE  2E1B               	decfsz	(??_main+1)^0,f,c
   423  0007D0  D7FA               	bra	u447
   424  0007D2                     
   425                           ;Test.c: 142: TRISB1 = 0;
   426  0007D2  9293               	bcf	3987,1,c	;volatile
   427  0007D4                     
   428                           ;Test.c: 143: _delay((unsigned long)((500)*(8000000/4000.0)));
   429  0007D4  0E06               	movlw	6
   430  0007D6  6E1B               	movwf	(??_main+1)^0,c
   431  0007D8  0E13               	movlw	19
   432  0007DA  6E1A               	movwf	??_main^0,c
   433  0007DC  0EAE               	movlw	174
   434  0007DE                     u457:
   435  0007DE  2EE8               	decfsz	wreg,f,c
   436  0007E0  D7FE               	bra	u457
   437  0007E2  2E1A               	decfsz	??_main^0,f,c
   438  0007E4  D7FC               	bra	u457
   439  0007E6  2E1B               	decfsz	(??_main+1)^0,f,c
   440  0007E8  D7FA               	bra	u457
   441  0007EA                     
   442                           ;Test.c: 144: TRISB1 = 1;
   443  0007EA  8293               	bsf	3987,1,c	;volatile
   444  0007EC                     
   445                           ;Test.c: 145: UART_send_string ("Dave is a legend!\n");
   446  0007EC  0E0B               	movlw	low STR_1
   447  0007EE  6E02               	movwf	UART_send_string@st_pt^0,c
   448  0007F0  0E06               	movlw	high STR_1
   449  0007F2  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   450  0007F4  EC1A  F005         	call	_UART_send_string	;wreg free
   451  0007F8                     
   452                           ;Test.c: 148: temp_adc = Read_ADC (0);
   453  0007F8  0E00               	movlw	0
   454  0007FA  ECE9  F004         	call	_Read_ADC
   455  0007FE  C001  F030         	movff	?_Read_ADC,main@temp_adc
   456  000802  C002  F031         	movff	?_Read_ADC+1,main@temp_adc+1
   457  000806                     
   458                           ;Test.c: 150: sprintf(_adc_str,"TEMP: %u\n", temp_adc);
   459  000806  0E1C               	movlw	low main@_adc_str
   460  000808  6E0D               	movwf	sprintf@sp^0,c
   461  00080A  0E00               	movlw	high main@_adc_str
   462  00080C  6E0E               	movwf	(sprintf@sp+1)^0,c
   463  00080E  0E29               	movlw	low STR_2
   464  000810  6E0F               	movwf	sprintf@f^0,c
   465  000812  0E06               	movlw	high STR_2
   466  000814  6E10               	movwf	(sprintf@f+1)^0,c
   467  000816  C030  F011         	movff	main@temp_adc,?_sprintf+4
   468  00081A  C031  F012         	movff	main@temp_adc+1,?_sprintf+5
   469  00081E  EC1A  F003         	call	_sprintf	;wreg free
   470  000822                     
   471                           ;Test.c: 151: UART_send_string(_adc_str);
   472  000822  0E1C               	movlw	low main@_adc_str
   473  000824  6E02               	movwf	UART_send_string@st_pt^0,c
   474  000826  0E00               	movlw	high main@_adc_str
   475  000828  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   476  00082A  EC1A  F005         	call	_UART_send_string	;wreg free
   477  00082E                     
   478                           ;Test.c: 153: _delay((unsigned long)((100)*(8000000/4000.0)));
   479  00082E  0E02               	movlw	2
   480  000830  6E1B               	movwf	(??_main+1)^0,c
   481  000832  0E04               	movlw	4
   482  000834  6E1A               	movwf	??_main^0,c
   483  000836  0EBA               	movlw	186
   484  000838                     u467:
   485  000838  2EE8               	decfsz	wreg,f,c
   486  00083A  D7FE               	bra	u467
   487  00083C  2E1A               	decfsz	??_main^0,f,c
   488  00083E  D7FC               	bra	u467
   489  000840  2E1B               	decfsz	(??_main+1)^0,f,c
   490  000842  D7FA               	bra	u467
   491  000844  D000               	nop2	
   492  000846                     
   493                           ;Test.c: 155: humid_adc = Read_ADC (1);
   494  000846  0E01               	movlw	1
   495  000848  ECE9  F004         	call	_Read_ADC
   496  00084C  C001  F032         	movff	?_Read_ADC,main@humid_adc
   497  000850  C002  F033         	movff	?_Read_ADC+1,main@humid_adc+1
   498  000854                     
   499                           ;Test.c: 156: sprintf(_adc_str, "HUMID: %u\n", humid_adc);
   500  000854  0E1C               	movlw	low main@_adc_str
   501  000856  6E0D               	movwf	sprintf@sp^0,c
   502  000858  0E00               	movlw	high main@_adc_str
   503  00085A  6E0E               	movwf	(sprintf@sp+1)^0,c
   504  00085C  0E1E               	movlw	low STR_3
   505  00085E  6E0F               	movwf	sprintf@f^0,c
   506  000860  0E06               	movlw	high STR_3
   507  000862  6E10               	movwf	(sprintf@f+1)^0,c
   508  000864  C032  F011         	movff	main@humid_adc,?_sprintf+4
   509  000868  C033  F012         	movff	main@humid_adc+1,?_sprintf+5
   510  00086C  EC1A  F003         	call	_sprintf	;wreg free
   511  000870                     
   512                           ;Test.c: 157: UART_send_string(_adc_str);
   513  000870  0E1C               	movlw	low main@_adc_str
   514  000872  6E02               	movwf	UART_send_string@st_pt^0,c
   515  000874  0E00               	movlw	high main@_adc_str
   516  000876  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   517  000878  EC1A  F005         	call	_UART_send_string	;wreg free
   518  00087C                     
   519                           ;Test.c: 159: _delay((unsigned long)((100)*(8000000/4000.0)));
   520  00087C  0E02               	movlw	2
   521  00087E  6E1B               	movwf	(??_main+1)^0,c
   522  000880  0E04               	movlw	4
   523  000882  6E1A               	movwf	??_main^0,c
   524  000884  0EBA               	movlw	186
   525  000886                     u477:
   526  000886  2EE8               	decfsz	wreg,f,c
   527  000888  D7FE               	bra	u477
   528  00088A  2E1A               	decfsz	??_main^0,f,c
   529  00088C  D7FC               	bra	u477
   530  00088E  2E1B               	decfsz	(??_main+1)^0,f,c
   531  000890  D7FA               	bra	u477
   532  000892  D000               	nop2	
   533  000894                     
   534                           ;Test.c: 162: I2C_Master_Start();
   535  000894  ECCF  F005         	call	_I2C_Master_Start	;wreg free
   536  000898                     
   537                           ;Test.c: 163: I2C_Master_Write(0xDE);
   538  000898  0E00               	movlw	0
   539  00089A  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
   540  00089C  0EDE               	movlw	222
   541  00089E  6E02               	movwf	I2C_Master_Write@d^0,c
   542  0008A0  ECC6  F005         	call	_I2C_Master_Write	;wreg free
   543  0008A4                     
   544                           ;Test.c: 164: I2C_Master_Write(0x00);
   545  0008A4  0E00               	movlw	0
   546  0008A6  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
   547  0008A8  0E00               	movlw	0
   548  0008AA  6E02               	movwf	I2C_Master_Write@d^0,c
   549  0008AC  ECC6  F005         	call	_I2C_Master_Write	;wreg free
   550  0008B0                     
   551                           ;Test.c: 165: I2C_Master_Stop();
   552  0008B0  ECCB  F005         	call	_I2C_Master_Stop	;wreg free
   553  0008B4                     
   554                           ;Test.c: 166: _delay((unsigned long)((5)*(8000000/4000.0)));
   555  0008B4  0E0D               	movlw	13
   556  0008B6  6E1A               	movwf	??_main^0,c
   557  0008B8  0EFC               	movlw	252
   558  0008BA                     u487:
   559  0008BA  2EE8               	decfsz	wreg,f,c
   560  0008BC  D7FE               	bra	u487
   561  0008BE  2E1A               	decfsz	??_main^0,f,c
   562  0008C0  D7FC               	bra	u487
   563  0008C2                     
   564                           ;Test.c: 167: I2C_Master_Write(0xDF);
   565  0008C2  0E00               	movlw	0
   566  0008C4  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
   567  0008C6  0EDF               	movlw	223
   568  0008C8  6E02               	movwf	I2C_Master_Write@d^0,c
   569  0008CA  ECC6  F005         	call	_I2C_Master_Write	;wreg free
   570  0008CE                     
   571                           ;Test.c: 168: I2C_Master_Stop();
   572  0008CE  ECCB  F005         	call	_I2C_Master_Stop	;wreg free
   573  0008D2                     
   574                           ;Test.c: 169: _delay((unsigned long)((5)*(8000000/4000.0)));
   575  0008D2  0E0D               	movlw	13
   576  0008D4  6E1A               	movwf	??_main^0,c
   577  0008D6  0EFC               	movlw	252
   578  0008D8                     u497:
   579  0008D8  2EE8               	decfsz	wreg,f,c
   580  0008DA  D7FE               	bra	u497
   581  0008DC  2E1A               	decfsz	??_main^0,f,c
   582  0008DE  D7FC               	bra	u497
   583  0008E0                     
   584                           ;Test.c: 173: _delay((unsigned long)((5)*(8000000/4000.0)));
   585  0008E0  0E0D               	movlw	13
   586  0008E2  6E1A               	movwf	??_main^0,c
   587  0008E4  0EFC               	movlw	252
   588  0008E6                     u507:
   589  0008E6  2EE8               	decfsz	wreg,f,c
   590  0008E8  D7FE               	bra	u507
   591  0008EA  2E1A               	decfsz	??_main^0,f,c
   592  0008EC  D7FC               	bra	u507
   593  0008EE                     
   594                           ;Test.c: 180: test_func();
   595  0008EE  EC71  F005         	call	_test_func	;wreg free
   596  0008F2  EFDE  F003         	goto	l1357
   597  0008F6  EF00  F000         	goto	start
   598  0008FA                     __end_of_main:
   599                           	callstack 0
   600                           
   601 ;; *************** function _test_func *****************
   602 ;; Defined at:
   603 ;;		line 108 in file "Test.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   617 ;;      Params:         0       0       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0
   620 ;;      Totals:         0       0       0       0       0       0       0
   621 ;;Total ram usage:        0 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    2
   624 ;; This function calls:
   625 ;;		_I2C_Master_Read
   626 ;;		_I2C_Master_Start
   627 ;;		_I2C_Master_Stop
   628 ;;		_I2C_Master_Write
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text1
   635  000AE2                     __ptext1:
   636                           	callstack 0
   637  000AE2                     _test_func:
   638                           	callstack 28
   639  000AE2                     
   640                           ;Test.c: 110: I2C_Master_Start();
   641  000AE2  ECCF  F005         	call	_I2C_Master_Start	;wreg free
   642                           
   643                           ;Test.c: 111: I2C_Master_Write(0xDF);
   644  000AE6  0E00               	movlw	0
   645  000AE8  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
   646  000AEA  0EDF               	movlw	223
   647  000AEC  6E02               	movwf	I2C_Master_Write@d^0,c
   648  000AEE  ECC6  F005         	call	_I2C_Master_Write	;wreg free
   649                           
   650                           ;Test.c: 112: I2C_Master_Read(0);
   651  000AF2  0E00               	movlw	0
   652  000AF4  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
   653  000AF6  0E00               	movlw	0
   654  000AF8  6E02               	movwf	I2C_Master_Read@a^0,c
   655  000AFA  EC49  F005         	call	_I2C_Master_Read	;wreg free
   656                           
   657                           ;Test.c: 113: I2C_Master_Stop();
   658  000AFE  ECCB  F005         	call	_I2C_Master_Stop	;wreg free
   659  000B02  0012               	return		;funcret
   660  000B04                     __end_of_test_func:
   661                           	callstack 0
   662                           
   663 ;; *************** function _I2C_Master_Write *****************
   664 ;; Defined at:
   665 ;;		line 53 in file "hw_I2C.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  d               2    1[COMRAM] unsigned int 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   679 ;;      Params:         2       0       0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0       0       0
   682 ;;      Totals:         2       0       0       0       0       0       0
   683 ;;Total ram usage:        2 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    1
   686 ;; This function calls:
   687 ;;		_I2C_Master_Wait
   688 ;; This function is called by:
   689 ;;		_test_func
   690 ;;		_main
   691 ;;		_RTC_test_write
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text2
   696  000B8C                     __ptext2:
   697                           	callstack 0
   698  000B8C                     _I2C_Master_Write:
   699                           	callstack 28
   700  000B8C                     
   701                           ;hw_I2C.c: 55: I2C_Master_Wait();
   702  000B8C  EC5E  F005         	call	_I2C_Master_Wait	;wreg free
   703  000B90                     
   704                           ;hw_I2C.c: 56: SSPBUF = d;
   705  000B90  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
   706  000B94  0012               	return		;funcret
   707  000B96                     __end_of_I2C_Master_Write:
   708                           	callstack 0
   709                           
   710 ;; *************** function _I2C_Master_Stop *****************
   711 ;; Defined at:
   712 ;;		line 47 in file "hw_I2C.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   726 ;;      Params:         0       0       0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    1
   733 ;; This function calls:
   734 ;;		_I2C_Master_Wait
   735 ;; This function is called by:
   736 ;;		_test_func
   737 ;;		_main
   738 ;;		_RTC_test_write
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text3
   743  000B96                     __ptext3:
   744                           	callstack 0
   745  000B96                     _I2C_Master_Stop:
   746                           	callstack 28
   747  000B96                     
   748                           ;hw_I2C.c: 49: I2C_Master_Wait();
   749  000B96  EC5E  F005         	call	_I2C_Master_Wait	;wreg free
   750  000B9A                     
   751                           ;hw_I2C.c: 50: PEN = 1;
   752  000B9A  84C5               	bsf	4037,2,c	;volatile
   753  000B9C  0012               	return		;funcret
   754  000B9E                     __end_of_I2C_Master_Stop:
   755                           	callstack 0
   756                           
   757 ;; *************** function _I2C_Master_Start *****************
   758 ;; Defined at:
   759 ;;		line 35 in file "hw_I2C.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   773 ;;      Params:         0       0       0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    1
   780 ;; This function calls:
   781 ;;		_I2C_Master_Wait
   782 ;; This function is called by:
   783 ;;		_test_func
   784 ;;		_main
   785 ;;		_RTC_test_write
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text4
   790  000B9E                     __ptext4:
   791                           	callstack 0
   792  000B9E                     _I2C_Master_Start:
   793                           	callstack 28
   794  000B9E                     
   795                           ;hw_I2C.c: 37: I2C_Master_Wait();
   796  000B9E  EC5E  F005         	call	_I2C_Master_Wait	;wreg free
   797  000BA2                     
   798                           ;hw_I2C.c: 38: SEN = 1;
   799  000BA2  80C5               	bsf	4037,0,c	;volatile
   800  000BA4  0012               	return		;funcret
   801  000BA6                     __end_of_I2C_Master_Start:
   802                           	callstack 0
   803                           
   804 ;; *************** function _I2C_Master_Read *****************
   805 ;; Defined at:
   806 ;;		line 59 in file "hw_I2C.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  a               2    1[COMRAM] unsigned short 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  data            2    0        unsigned short 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  2    1[COMRAM] unsigned short 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   820 ;;      Params:         2       0       0       0       0       0       0
   821 ;;      Locals:         2       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0
   823 ;;      Totals:         4       0       0       0       0       0       0
   824 ;;Total ram usage:        4 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    1
   827 ;; This function calls:
   828 ;;		_I2C_Master_Wait
   829 ;; This function is called by:
   830 ;;		_test_func
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text5
   835  000A92                     __ptext5:
   836                           	callstack 0
   837  000A92                     _I2C_Master_Read:
   838                           	callstack 28
   839  000A92                     
   840                           ;hw_I2C.c: 61: unsigned short data;;hw_I2C.c: 62: I2C_Master_Wait();
   841  000A92  EC5E  F005         	call	_I2C_Master_Wait	;wreg free
   842  000A96                     
   843                           ;hw_I2C.c: 63: RCEN = 1;
   844  000A96  86C5               	bsf	4037,3,c	;volatile
   845                           
   846                           ;hw_I2C.c: 64: I2C_Master_Wait();
   847  000A98  EC5E  F005         	call	_I2C_Master_Wait	;wreg free
   848  000A9C  50C9               	movf	201,w,c	;volatile
   849                           
   850                           ;hw_I2C.c: 66: I2C_Master_Wait();
   851  000A9E  EC5E  F005         	call	_I2C_Master_Wait	;wreg free
   852  000AA2                     
   853                           ;hw_I2C.c: 67: ACKDT = (a)?0:1;
   854  000AA2  5002               	movf	I2C_Master_Read@a^0,w,c
   855  000AA4  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
   856  000AA6  B4D8               	btfsc	status,2,c
   857  000AA8  EF58  F005         	goto	u251
   858  000AAC  EF5B  F005         	goto	u250
   859  000AB0                     u251:
   860  000AB0  8AC5               	bsf	4037,5,c	;volatile
   861  000AB2  EF5C  F005         	goto	u265
   862  000AB6                     u250:
   863  000AB6  9AC5               	bcf	4037,5,c	;volatile
   864  000AB8                     u265:
   865  000AB8                     
   866                           ;hw_I2C.c: 68: ACKEN = 1;
   867  000AB8  88C5               	bsf	4037,4,c	;volatile
   868  000ABA  0012               	return		;funcret
   869  000ABC                     __end_of_I2C_Master_Read:
   870                           	callstack 0
   871                           
   872 ;; *************** function _I2C_Master_Wait *****************
   873 ;; Defined at:
   874 ;;		line 31 in file "hw_I2C.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   888 ;;      Params:         0       0       0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0
   890 ;;      Temps:          1       0       0       0       0       0       0
   891 ;;      Totals:         1       0       0       0       0       0       0
   892 ;;Total ram usage:        1 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_I2C_Master_Start
   898 ;;		_I2C_Master_Stop
   899 ;;		_I2C_Master_Write
   900 ;;		_I2C_Master_Read
   901 ;;		_I2C_Master_RepeatedStart
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text6
   906  000ABC                     __ptext6:
   907                           	callstack 0
   908  000ABC                     _I2C_Master_Wait:
   909                           	callstack 28
   910  000ABC                     l165:
   911  000ABC  B4C7               	btfsc	199,2,c	;volatile
   912  000ABE  EF63  F005         	goto	u11
   913  000AC2  EF65  F005         	goto	u10
   914  000AC6                     u11:
   915  000AC6  EF5E  F005         	goto	l165
   916  000ACA                     u10:
   917  000ACA  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
   918  000ACE  0E1F               	movlw	31
   919  000AD0  1601               	andwf	??_I2C_Master_Wait^0,f,c
   920  000AD2  A4D8               	btfss	status,2,c
   921  000AD4  EF6E  F005         	goto	u21
   922  000AD8  EF70  F005         	goto	u20
   923  000ADC                     u21:
   924  000ADC  EF5E  F005         	goto	l165
   925  000AE0                     u20:
   926  000AE0  0012               	return		;funcret
   927  000AE2                     __end_of_I2C_Master_Wait:
   928                           	callstack 0
   929                           
   930 ;; *************** function _sprintf *****************
   931 ;; Defined at:
   932 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  sp              2   12[COMRAM] PTR unsigned char 
   935 ;;		 -> main@_adc_str(20), 
   936 ;;  f               2   14[COMRAM] PTR const unsigned char 
   937 ;;		 -> STR_3(11), STR_2(10), 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  tmpval          4    0        struct .
   940 ;;  cp              3    0        PTR const unsigned char 
   941 ;;  val             2   21[COMRAM] unsigned int 
   942 ;;  ap              2   19[COMRAM] PTR void [1]
   943 ;;		 -> ?_sprintf(2), 
   944 ;;  len             2    0        unsigned int 
   945 ;;  c               1   24[COMRAM] unsigned char 
   946 ;;  prec            1   23[COMRAM] char 
   947 ;;  flag            1   18[COMRAM] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  2   12[COMRAM] int 
   950 ;; Registers used:
   951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   957 ;;      Params:         6       0       0       0       0       0       0
   958 ;;      Locals:         7       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0
   960 ;;      Totals:        13       0       0       0       0       0       0
   961 ;;Total ram usage:       13 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    1
   964 ;; This function calls:
   965 ;;		___lwdiv
   966 ;;		___lwmod
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text7
   973  000634                     __ptext7:
   974                           	callstack 0
   975  000634                     _sprintf:
   976                           	callstack 29
   977  000634                     
   978                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
   979  000634  0E11               	movlw	low (?_sprintf+4)
   980  000636  6E14               	movwf	sprintf@ap^0,c
   981  000638  0E00               	movlw	high (?_sprintf+4)
   982  00063A  6E15               	movwf	(sprintf@ap+1)^0,c
   983                           
   984                           ;doprnt.c: 553: while((c = *f++)) {
   985  00063C  EFB4  F003         	goto	l1341
   986  000640                     l1301:
   987                           
   988                           ;doprnt.c: 555: if(c != '%')
   989  000640  0E25               	movlw	37
   990  000642  1819               	xorwf	sprintf@c^0,w,c
   991  000644  B4D8               	btfsc	status,2,c
   992  000646  EF27  F003         	goto	u391
   993  00064A  EF29  F003         	goto	u390
   994  00064E                     u391:
   995  00064E  EF33  F003         	goto	l1307
   996  000652                     u390:
   997  000652                     
   998                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   999  000652  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1000  000656  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1001  00065A  C019  FFDF         	movff	sprintf@c,indf2
  1002  00065E  4A0D               	infsnz	sprintf@sp^0,f,c
  1003  000660  2A0E               	incf	(sprintf@sp+1)^0,f,c
  1004                           
  1005                           ;doprnt.c: 559: continue;
  1006  000662  EFB4  F003         	goto	l1341
  1007  000666                     l1307:
  1008                           
  1009                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1010  000666  0E00               	movlw	0
  1011  000668  6E13               	movwf	sprintf@flag^0,c
  1012                           
  1013                           ;doprnt.c: 661: switch(c = *f++) {
  1014  00066A  EF3B  F003         	goto	l1313
  1015  00066E                     l1309:
  1016                           
  1017                           ;doprnt.c: 844: flag |= 0xC0;
  1018  00066E  0EC0               	movlw	192
  1019  000670  1213               	iorwf	sprintf@flag^0,f,c
  1020                           
  1021                           ;doprnt.c: 845: break;
  1022  000672  EF4F  F003         	goto	l1315
  1023  000676                     l1313:
  1024  000676  C00F  FFF6         	movff	sprintf@f,tblptrl
  1025  00067A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1026  00067E  4A0F               	infsnz	sprintf@f^0,f,c
  1027  000680  2A10               	incf	(sprintf@f+1)^0,f,c
  1028  000682                     	if	0	;tblptru may be non-zero
  1029  000682                     	endif
  1030  000682                     	if	0	;tblptru may be non-zero
  1031  000682                     	endif
  1032  000682  0008               	tblrd		*
  1033  000684  CFF5 F019          	movff	tablat,sprintf@c
  1034  000688  5019               	movf	sprintf@c^0,w,c
  1035                           
  1036                           ; Switch size 1, requested type "simple"
  1037                           ; Number of cases is 2, Range of values is 0 to 117
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; simple_byte            7     4 (average)
  1041                           ;	Chosen strategy is simple_byte
  1042  00068A  0A00               	xorlw	0	; case 0
  1043  00068C  B4D8               	btfsc	status,2,c
  1044  00068E  EFC5  F003         	goto	l1343
  1045  000692  0A75               	xorlw	117	; case 117
  1046  000694  B4D8               	btfsc	status,2,c
  1047  000696  EF37  F003         	goto	l1309
  1048  00069A  EFB4  F003         	goto	l1341
  1049  00069E                     l1315:
  1050                           
  1051                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
  1052  00069E  C014  FFD9         	movff	sprintf@ap,fsr2l
  1053  0006A2  C015  FFDA         	movff	sprintf@ap+1,fsr2h
  1054  0006A6  CFDE F016          	movff	postinc2,sprintf@val
  1055  0006AA  CFDD F017          	movff	postdec2,sprintf@val+1
  1056  0006AE  0E02               	movlw	2
  1057  0006B0  2614               	addwf	sprintf@ap^0,f,c
  1058  0006B2  0E00               	movlw	0
  1059  0006B4  2215               	addwfc	(sprintf@ap+1)^0,f,c
  1060  0006B6                     
  1061                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  1062  0006B6  0E01               	movlw	1
  1063  0006B8  6E19               	movwf	sprintf@c^0,c
  1064  0006BA                     l1325:
  1065                           
  1066                           ;doprnt.c: 1332: if(val < dpowers[c])
  1067  0006BA  5019               	movf	sprintf@c^0,w,c
  1068  0006BC  0D02               	mullw	2
  1069  0006BE  0E01               	movlw	low _dpowers
  1070  0006C0  24F3               	addwf	243,w,c
  1071  0006C2  6EF6               	movwf	tblptrl,c
  1072  0006C4  0E06               	movlw	high _dpowers
  1073  0006C6  20F4               	addwfc	244,w,c
  1074  0006C8  6EF7               	movwf	tblptrh,c
  1075  0006CA                     	if	0	;There are less than 3 active tblptr bytes
  1076  0006CA                     	endif
  1077  0006CA  0009               	tblrd		*+
  1078  0006CC  50F5               	movf	tablat,w,c
  1079  0006CE  5C16               	subwf	sprintf@val^0,w,c
  1080  0006D0  0009               	tblrd		*+
  1081  0006D2  50F5               	movf	tablat,w,c
  1082  0006D4  5817               	subwfb	(sprintf@val+1)^0,w,c
  1083  0006D6  B0D8               	btfsc	status,0,c
  1084  0006D8  EF70  F003         	goto	u401
  1085  0006DC  EF72  F003         	goto	u400
  1086  0006E0                     u401:
  1087  0006E0  EF74  F003         	goto	l1329
  1088  0006E4                     u400:
  1089  0006E4  EF7E  F003         	goto	l211
  1090  0006E8                     l1329:
  1091  0006E8  2A19               	incf	sprintf@c^0,f,c
  1092  0006EA  0E05               	movlw	5
  1093  0006EC  1819               	xorwf	sprintf@c^0,w,c
  1094  0006EE  A4D8               	btfss	status,2,c
  1095  0006F0  EF7C  F003         	goto	u411
  1096  0006F4  EF7E  F003         	goto	u410
  1097  0006F8                     u411:
  1098  0006F8  EF5D  F003         	goto	l1325
  1099  0006FC                     u410:
  1100  0006FC                     l211:
  1101                           
  1102                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1103  0006FC  C019  F018         	movff	sprintf@c,sprintf@prec
  1104                           
  1105                           ;doprnt.c: 1500: while(prec--) {
  1106  000700  EFAB  F003         	goto	l1339
  1107  000704                     l1333:
  1108                           
  1109                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1110  000704  5018               	movf	sprintf@prec^0,w,c
  1111  000706  0D02               	mullw	2
  1112  000708  0E01               	movlw	low _dpowers
  1113  00070A  24F3               	addwf	243,w,c
  1114  00070C  6EF6               	movwf	tblptrl,c
  1115  00070E  0E06               	movlw	high _dpowers
  1116  000710  20F4               	addwfc	244,w,c
  1117  000712  6EF7               	movwf	tblptrh,c
  1118  000714                     	if	0	;There are less than 3 active tblptr bytes
  1119  000714                     	endif
  1120  000714  0009               	tblrd		*+
  1121  000716  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1122  00071A  000A               	tblrd		*-
  1123  00071C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1124  000720  C016  F001         	movff	sprintf@val,___lwdiv@dividend
  1125  000724  C017  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1126  000728  EC7D  F004         	call	___lwdiv	;wreg free
  1127  00072C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1128  000730  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1129  000734  0E00               	movlw	0
  1130  000736  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1131  000738  0E0A               	movlw	10
  1132  00073A  6E0A               	movwf	___lwmod@divisor^0,c
  1133  00073C  ECB7  F004         	call	___lwmod	;wreg free
  1134  000740  5008               	movf	?___lwmod^0,w,c
  1135  000742  0F30               	addlw	48
  1136  000744  6E19               	movwf	sprintf@c^0,c
  1137  000746                     
  1138                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1139  000746  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1140  00074A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1141  00074E  C019  FFDF         	movff	sprintf@c,indf2
  1142  000752  4A0D               	infsnz	sprintf@sp^0,f,c
  1143  000754  2A0E               	incf	(sprintf@sp+1)^0,f,c
  1144  000756                     l1339:
  1145  000756  0618               	decf	sprintf@prec^0,f,c
  1146  000758  2818               	incf	sprintf@prec^0,w,c
  1147  00075A  A4D8               	btfss	status,2,c
  1148  00075C  EFB2  F003         	goto	u421
  1149  000760  EFB4  F003         	goto	u420
  1150  000764                     u421:
  1151  000764  EF82  F003         	goto	l1333
  1152  000768                     u420:
  1153  000768                     l1341:
  1154  000768  C00F  FFF6         	movff	sprintf@f,tblptrl
  1155  00076C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1156  000770  4A0F               	infsnz	sprintf@f^0,f,c
  1157  000772  2A10               	incf	(sprintf@f+1)^0,f,c
  1158  000774                     	if	0	;tblptru may be non-zero
  1159  000774                     	endif
  1160  000774                     	if	0	;tblptru may be non-zero
  1161  000774                     	endif
  1162  000774  0008               	tblrd		*
  1163  000776  CFF5 F019          	movff	tablat,sprintf@c
  1164  00077A  5019               	movf	sprintf@c^0,w,c
  1165  00077C  A4D8               	btfss	status,2,c
  1166  00077E  EFC3  F003         	goto	u431
  1167  000782  EFC5  F003         	goto	u430
  1168  000786                     u431:
  1169  000786  EF20  F003         	goto	l1301
  1170  00078A                     u430:
  1171  00078A                     l1343:
  1172                           
  1173                           ;doprnt.c: 1564: *sp = 0;
  1174  00078A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1175  00078E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1176  000792  0E00               	movlw	0
  1177  000794  6EDF               	movwf	indf2,c
  1178  000796  0012               	return		;funcret
  1179  000798                     __end_of_sprintf:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function ___lwmod *****************
  1183 ;; Defined at:
  1184 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  dividend        2    7[COMRAM] unsigned int 
  1187 ;;  divisor         2    9[COMRAM] unsigned int 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  counter         1   11[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2    7[COMRAM] unsigned int 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1199 ;;      Params:         4       0       0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0
  1202 ;;      Totals:         5       0       0       0       0       0       0
  1203 ;;Total ram usage:        5 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; This function calls:
  1206 ;;		Nothing
  1207 ;; This function is called by:
  1208 ;;		_sprintf
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text8
  1213  00096E                     __ptext8:
  1214                           	callstack 0
  1215  00096E                     ___lwmod:
  1216                           	callstack 29
  1217  00096E  500A               	movf	___lwmod@divisor^0,w,c
  1218  000970  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1219  000972  B4D8               	btfsc	status,2,c
  1220  000974  EFBE  F004         	goto	u301
  1221  000978  EFC0  F004         	goto	u300
  1222  00097C                     u301:
  1223  00097C  EFE4  F004         	goto	l709
  1224  000980                     u300:
  1225  000980  0E01               	movlw	1
  1226  000982  6E0C               	movwf	___lwmod@counter^0,c
  1227  000984  EFC8  F004         	goto	l1257
  1228  000988                     l1255:
  1229  000988  90D8               	bcf	status,0,c
  1230  00098A  360A               	rlcf	___lwmod@divisor^0,f,c
  1231  00098C  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1232  00098E  2A0C               	incf	___lwmod@counter^0,f,c
  1233  000990                     l1257:
  1234  000990  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1235  000992  EFCD  F004         	goto	u311
  1236  000996  EFCF  F004         	goto	u310
  1237  00099A                     u311:
  1238  00099A  EFC4  F004         	goto	l1255
  1239  00099E                     u310:
  1240  00099E                     l1259:
  1241  00099E  500A               	movf	___lwmod@divisor^0,w,c
  1242  0009A0  5C08               	subwf	___lwmod@dividend^0,w,c
  1243  0009A2  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1244  0009A4  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1245  0009A6  A0D8               	btfss	status,0,c
  1246  0009A8  EFD8  F004         	goto	u321
  1247  0009AC  EFDA  F004         	goto	u320
  1248  0009B0                     u321:
  1249  0009B0  EFDE  F004         	goto	l1263
  1250  0009B4                     u320:
  1251  0009B4  500A               	movf	___lwmod@divisor^0,w,c
  1252  0009B6  5E08               	subwf	___lwmod@dividend^0,f,c
  1253  0009B8  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1254  0009BA  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1255  0009BC                     l1263:
  1256  0009BC  90D8               	bcf	status,0,c
  1257  0009BE  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1258  0009C0  320A               	rrcf	___lwmod@divisor^0,f,c
  1259  0009C2  2E0C               	decfsz	___lwmod@counter^0,f,c
  1260  0009C4  EFCF  F004         	goto	l1259
  1261  0009C8                     l709:
  1262  0009C8  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1263  0009CC  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1264  0009D0  0012               	return		;funcret
  1265  0009D2                     __end_of___lwmod:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function ___lwdiv *****************
  1269 ;; Defined at:
  1270 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  dividend        2    0[COMRAM] unsigned int 
  1273 ;;  divisor         2    2[COMRAM] unsigned int 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  quotient        2    4[COMRAM] unsigned int 
  1276 ;;  counter         1    6[COMRAM] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  2    0[COMRAM] unsigned int 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1286 ;;      Params:         4       0       0       0       0       0       0
  1287 ;;      Locals:         3       0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0
  1289 ;;      Totals:         7       0       0       0       0       0       0
  1290 ;;Total ram usage:        7 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_sprintf
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text9
  1300  0008FA                     __ptext9:
  1301                           	callstack 0
  1302  0008FA                     ___lwdiv:
  1303                           	callstack 29
  1304  0008FA  0E00               	movlw	0
  1305  0008FC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1306  0008FE  0E00               	movlw	0
  1307  000900  6E05               	movwf	___lwdiv@quotient^0,c
  1308  000902  5003               	movf	___lwdiv@divisor^0,w,c
  1309  000904  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1310  000906  B4D8               	btfsc	status,2,c
  1311  000908  EF88  F004         	goto	u271
  1312  00090C  EF8A  F004         	goto	u270
  1313  000910                     u271:
  1314  000910  EFB2  F004         	goto	l699
  1315  000914                     u270:
  1316  000914  0E01               	movlw	1
  1317  000916  6E07               	movwf	___lwdiv@counter^0,c
  1318  000918  EF92  F004         	goto	l1237
  1319  00091C                     l1235:
  1320  00091C  90D8               	bcf	status,0,c
  1321  00091E  3603               	rlcf	___lwdiv@divisor^0,f,c
  1322  000920  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1323  000922  2A07               	incf	___lwdiv@counter^0,f,c
  1324  000924                     l1237:
  1325  000924  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1326  000926  EF97  F004         	goto	u281
  1327  00092A  EF99  F004         	goto	u280
  1328  00092E                     u281:
  1329  00092E  EF8E  F004         	goto	l1235
  1330  000932                     u280:
  1331  000932                     l1239:
  1332  000932  90D8               	bcf	status,0,c
  1333  000934  3605               	rlcf	___lwdiv@quotient^0,f,c
  1334  000936  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1335  000938  5003               	movf	___lwdiv@divisor^0,w,c
  1336  00093A  5C01               	subwf	___lwdiv@dividend^0,w,c
  1337  00093C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1338  00093E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1339  000940  A0D8               	btfss	status,0,c
  1340  000942  EFA5  F004         	goto	u291
  1341  000946  EFA7  F004         	goto	u290
  1342  00094A                     u291:
  1343  00094A  EFAC  F004         	goto	l1247
  1344  00094E                     u290:
  1345  00094E  5003               	movf	___lwdiv@divisor^0,w,c
  1346  000950  5E01               	subwf	___lwdiv@dividend^0,f,c
  1347  000952  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1348  000954  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1349  000956  8005               	bsf	___lwdiv@quotient^0,0,c
  1350  000958                     l1247:
  1351  000958  90D8               	bcf	status,0,c
  1352  00095A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1353  00095C  3203               	rrcf	___lwdiv@divisor^0,f,c
  1354  00095E  2E07               	decfsz	___lwdiv@counter^0,f,c
  1355  000960  EF99  F004         	goto	l1239
  1356  000964                     l699:
  1357  000964  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1358  000968  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1359  00096C  0012               	return		;funcret
  1360  00096E                     __end_of___lwdiv:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _UART_send_string *****************
  1364 ;; Defined at:
  1365 ;;		line 54 in file "hw_uart.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  st_pt           2    1[COMRAM] PTR unsigned char 
  1368 ;;		 -> main@_adc_str(20), STR_1(19), 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1380 ;;      Params:         2       0       0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    1
  1387 ;; This function calls:
  1388 ;;		_UART_send_char
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text10
  1395  000A34                     __ptext10:
  1396                           	callstack 0
  1397  000A34                     _UART_send_string:
  1398                           	callstack 29
  1399  000A34                     
  1400                           ;hw_uart.c: 56: while(*st_pt)
  1401  000A34  EF30  F005         	goto	l1279
  1402  000A38                     l1275:
  1403                           
  1404                           ;hw_uart.c: 57: UART_send_char(*st_pt++);
  1405  000A38  C002  FFF6         	movff	UART_send_string@st_pt,tblptrl
  1406  000A3C  C003  FFF7         	movff	UART_send_string@st_pt+1,tblptrh
  1407  000A40  6AF8               	clrf	tblptru,c
  1408  000A42  0E05               	movlw	(high __ramtop+-1)
  1409  000A44  64F7               	cpfsgt	tblptrh,c
  1410  000A46  D003               	bra	u337
  1411  000A48  0008               	tblrd		*
  1412  000A4A  50F5               	movf	tablat,w,c
  1413  000A4C  D005               	bra	u330
  1414  000A4E                     u337:
  1415  000A4E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1416  000A52  CFF7 FFEA          	movff	tblptrh,fsr0h
  1417  000A56  50EF               	movf	indf0,w,c
  1418  000A58                     u330:
  1419  000A58  ECAB  F005         	call	_UART_send_char
  1420  000A5C  4A02               	infsnz	UART_send_string@st_pt^0,f,c
  1421  000A5E  2A03               	incf	(UART_send_string@st_pt+1)^0,f,c
  1422  000A60                     l1279:
  1423  000A60  C002  FFF6         	movff	UART_send_string@st_pt,tblptrl
  1424  000A64  C003  FFF7         	movff	UART_send_string@st_pt+1,tblptrh
  1425  000A68  6AF8               	clrf	tblptru,c
  1426  000A6A  0E05               	movlw	(high __ramtop+-1)
  1427  000A6C  64F7               	cpfsgt	tblptrh,c
  1428  000A6E  D003               	bra	u347
  1429  000A70  0008               	tblrd		*
  1430  000A72  50F5               	movf	tablat,w,c
  1431  000A74  D005               	bra	u340
  1432  000A76                     u347:
  1433  000A76  CFF6 FFE9          	movff	tblptrl,fsr0l
  1434  000A7A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1435  000A7E  50EF               	movf	indf0,w,c
  1436  000A80                     u340:
  1437  000A80  0900               	iorlw	0
  1438  000A82  A4D8               	btfss	status,2,c
  1439  000A84  EF46  F005         	goto	u351
  1440  000A88  EF48  F005         	goto	u350
  1441  000A8C                     u351:
  1442  000A8C  EF1C  F005         	goto	l1275
  1443  000A90                     u350:
  1444  000A90  0012               	return		;funcret
  1445  000A92                     __end_of_UART_send_string:
  1446                           	callstack 0
  1447                           
  1448 ;; *************** function _UART_send_char *****************
  1449 ;; Defined at:
  1450 ;;		line 27 in file "hw_uart.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  bt              1    wreg     unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  bt              1    0[COMRAM] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1464 ;;      Params:         0       0       0       0       0       0       0
  1465 ;;      Locals:         1       0       0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0
  1467 ;;      Totals:         1       0       0       0       0       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_UART_send_string
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text11
  1478  000B56                     __ptext11:
  1479                           	callstack 0
  1480  000B56                     _UART_send_char:
  1481                           	callstack 29
  1482                           
  1483                           ;incstack = 0
  1484                           ;UART_send_char@bt stored from wreg
  1485  000B56  6E01               	movwf	UART_send_char@bt^0,c
  1486  000B58                     l82:
  1487  000B58  A89E               	btfss	3998,4,c	;volatile
  1488  000B5A  EFB1  F005         	goto	u51
  1489  000B5E  EFB3  F005         	goto	u50
  1490  000B62                     u51:
  1491  000B62  EFAC  F005         	goto	l82
  1492  000B66                     u50:
  1493  000B66                     
  1494                           ;hw_uart.c: 30: TXREG = bt;
  1495  000B66  C001  FFAD         	movff	UART_send_char@bt,4013	;volatile
  1496  000B6A  0012               	return		;funcret
  1497  000B6C                     __end_of_UART_send_char:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _UART_Init *****************
  1501 ;; Defined at:
  1502 ;;		line 10 in file "hw_uart.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  baud_rate       2    0[COMRAM] unsigned int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1516 ;;      Params:         2       0       0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0
  1519 ;;      Totals:         2       0       0       0       0       0       0
  1520 ;;Total ram usage:        2 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text12
  1530  000B6C                     __ptext12:
  1531                           	callstack 0
  1532  000B6C                     _UART_Init:
  1533                           	callstack 30
  1534  000B6C                     
  1535                           ;hw_uart.c: 13: TXSTAbits.TXEN = 1;
  1536  000B6C  8AAC               	bsf	172,5,c	;volatile
  1537                           
  1538                           ;hw_uart.c: 15: TXSTAbits.SYNC = 0;
  1539  000B6E  98AC               	bcf	172,4,c	;volatile
  1540                           
  1541                           ;hw_uart.c: 17: TXSTAbits.BRGH = 0;
  1542  000B70  94AC               	bcf	172,2,c	;volatile
  1543                           
  1544                           ;hw_uart.c: 19: BAUDCONbits.BRG16 = 0;
  1545  000B72  96B8               	bcf	184,3,c	;volatile
  1546                           
  1547                           ;hw_uart.c: 21: RCSTAbits.SPEN = 1;
  1548  000B74  8EAB               	bsf	171,7,c	;volatile
  1549  000B76                     
  1550                           ;hw_uart.c: 23: SPBRGH = 0x00;
  1551  000B76  0E00               	movlw	0
  1552  000B78  6EB0               	movwf	176,c	;volatile
  1553                           
  1554                           ;hw_uart.c: 24: SPBRG = 0x0C;
  1555  000B7A  0E0C               	movlw	12
  1556  000B7C  6EAF               	movwf	175,c	;volatile
  1557  000B7E  0012               	return		;funcret
  1558  000B80                     __end_of_UART_Init:
  1559                           	callstack 0
  1560                           
  1561 ;; *************** function _Read_ADC *****************
  1562 ;; Defined at:
  1563 ;;		line 43 in file "hw_adc.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  channel         1    wreg     unsigned char 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  channel         1    6[COMRAM] unsigned char 
  1568 ;;  result          2    4[COMRAM] unsigned int 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  2    0[COMRAM] unsigned int 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1578 ;;      Params:         2       0       0       0       0       0       0
  1579 ;;      Locals:         3       0       0       0       0       0       0
  1580 ;;      Temps:          2       0       0       0       0       0       0
  1581 ;;      Totals:         7       0       0       0       0       0       0
  1582 ;;Total ram usage:        7 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text13
  1592  0009D2                     __ptext13:
  1593                           	callstack 0
  1594  0009D2                     _Read_ADC:
  1595                           	callstack 30
  1596                           
  1597                           ;incstack = 0
  1598                           ;Read_ADC@channel stored from wreg
  1599  0009D2  6E07               	movwf	Read_ADC@channel^0,c
  1600  0009D4                     
  1601                           ;hw_adc.c: 47: if (channel == 0)
  1602  0009D4  5007               	movf	Read_ADC@channel^0,w,c
  1603  0009D6  A4D8               	btfss	status,2,c
  1604  0009D8  EFF0  F004         	goto	u361
  1605  0009DC  EFF2  F004         	goto	u360
  1606  0009E0                     u361:
  1607  0009E0  EFF6  F004         	goto	l1287
  1608  0009E4                     u360:
  1609  0009E4                     
  1610                           ;hw_adc.c: 48: {;hw_adc.c: 49: ADCON0bits.CHS = 0b0001;
  1611  0009E4  50C2               	movf	194,w,c	;volatile
  1612  0009E6  0BC3               	andlw	-61
  1613  0009E8  0904               	iorlw	4
  1614  0009EA  6EC2               	movwf	194,c	;volatile
  1615  0009EC                     l1287:
  1616                           
  1617                           ;hw_adc.c: 51: };hw_adc.c: 52: if (channel == 1)
  1618  0009EC  0407               	decf	Read_ADC@channel^0,w,c
  1619  0009EE  A4D8               	btfss	status,2,c
  1620  0009F0  EFFC  F004         	goto	u371
  1621  0009F4  EFFE  F004         	goto	u370
  1622  0009F8                     u371:
  1623  0009F8  EF02  F005         	goto	l1291
  1624  0009FC                     u370:
  1625  0009FC                     
  1626                           ;hw_adc.c: 53: {;hw_adc.c: 55: ADCON0bits.CHS = 0b0010;
  1627  0009FC  50C2               	movf	194,w,c	;volatile
  1628  0009FE  0BC3               	andlw	-61
  1629  000A00  0908               	iorlw	8
  1630  000A02  6EC2               	movwf	194,c	;volatile
  1631  000A04                     l1291:
  1632                           
  1633                           ;hw_adc.c: 57: };hw_adc.c: 59: ADCON0bits.GO = 1;
  1634  000A04  82C2               	bsf	194,1,c	;volatile
  1635  000A06                     l128:
  1636  000A06  B2C2               	btfsc	194,1,c	;volatile
  1637  000A08  EF08  F005         	goto	u381
  1638  000A0C  EF0A  F005         	goto	u380
  1639  000A10                     u381:
  1640  000A10  EF03  F005         	goto	l128
  1641  000A14                     u380:
  1642  000A14                     
  1643                           ;hw_adc.c: 61: result = (ADRESH << 8) | (ADRESL);
  1644  000A14  50C3               	movf	195,w,c	;volatile
  1645  000A16  CFC4 F003          	movff	4036,??_Read_ADC	;volatile
  1646  000A1A  6A04               	clrf	(??_Read_ADC+1)^0,c
  1647  000A1C  C003  F004         	movff	??_Read_ADC,??_Read_ADC+1
  1648  000A20  6A03               	clrf	??_Read_ADC^0,c
  1649  000A22  1003               	iorwf	??_Read_ADC^0,w,c
  1650  000A24  6E05               	movwf	Read_ADC@result^0,c
  1651  000A26  5004               	movf	(??_Read_ADC+1)^0,w,c
  1652  000A28  6E06               	movwf	(Read_ADC@result+1)^0,c
  1653  000A2A                     
  1654                           ;hw_adc.c: 63: return result;
  1655  000A2A  C005  F001         	movff	Read_ADC@result,?_Read_ADC
  1656  000A2E  C006  F002         	movff	Read_ADC@result+1,?_Read_ADC+1
  1657  000A32  0012               	return		;funcret
  1658  000A34                     __end_of_Read_ADC:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _PORT_Initialize *****************
  1662 ;; Defined at:
  1663 ;;		line 93 in file "Test.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		None
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         0       0       0       0       0       0       0
  1678 ;;      Locals:         0       0       0       0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0
  1680 ;;      Totals:         0       0       0       0       0       0       0
  1681 ;;Total ram usage:        0 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text14
  1691  000BA6                     __ptext14:
  1692                           	callstack 0
  1693  000BA6                     _PORT_Initialize:
  1694                           	callstack 30
  1695  000BA6                     
  1696                           ;Test.c: 95: TRISC6 = 1;
  1697  000BA6  8C94               	bsf	3988,6,c	;volatile
  1698                           
  1699                           ;Test.c: 96: TRISC7 = 1;
  1700  000BA8  8E94               	bsf	3988,7,c	;volatile
  1701  000BAA  0012               	return		;funcret
  1702  000BAC                     __end_of_PORT_Initialize:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _InitI2C *****************
  1706 ;; Defined at:
  1707 ;;		line 19 in file "hw_I2C.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1721 ;;      Params:         0       0       0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0
  1724 ;;      Totals:         0       0       0       0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text15
  1735  000B26                     __ptext15:
  1736                           	callstack 0
  1737  000B26                     _InitI2C:
  1738                           	callstack 30
  1739  000B26                     
  1740                           ;hw_I2C.c: 21: TRISC3 = 1;
  1741  000B26  8694               	bsf	3988,3,c	;volatile
  1742                           
  1743                           ;hw_I2C.c: 22: TRISC4 = 1;
  1744  000B28  8894               	bsf	3988,4,c	;volatile
  1745  000B2A                     
  1746                           ;hw_I2C.c: 24: SSPADD = 0x13;
  1747  000B2A  0E13               	movlw	19
  1748  000B2C  6EC8               	movwf	200,c	;volatile
  1749                           
  1750                           ;hw_I2C.c: 25: SSPSTAT = 0;
  1751  000B2E  0E00               	movlw	0
  1752  000B30  6EC7               	movwf	199,c	;volatile
  1753  000B32                     
  1754                           ;hw_I2C.c: 26: SSPCON1bits.SSPEN = 1;
  1755  000B32  8AC6               	bsf	198,5,c	;volatile
  1756                           
  1757                           ;hw_I2C.c: 27: SSPCON1bits.SSPM = 0b1000;
  1758  000B34  50C6               	movf	198,w,c	;volatile
  1759  000B36  0BF0               	andlw	-16
  1760  000B38  0908               	iorlw	8
  1761  000B3A  6EC6               	movwf	198,c	;volatile
  1762  000B3C                     
  1763                           ;hw_I2C.c: 28: SSPIF = 0;
  1764  000B3C  969E               	bcf	3998,3,c	;volatile
  1765  000B3E  0012               	return		;funcret
  1766  000B40                     __end_of_InitI2C:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _CLK_intialize *****************
  1770 ;; Defined at:
  1771 ;;		line 81 in file "Test.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1785 ;;      Params:         0       0       0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text16
  1799  000B80                     __ptext16:
  1800                           	callstack 0
  1801  000B80                     _CLK_intialize:
  1802                           	callstack 30
  1803  000B80                     
  1804                           ;Test.c: 87: OSCCONbits.IRCF = 0b111;
  1805  000B80  0E70               	movlw	112
  1806  000B82  12D3               	iorwf	211,f,c	;volatile
  1807  000B84                     
  1808                           ;Test.c: 89: OSCCONbits.IDLEN = 0b0;
  1809  000B84  9ED3               	bcf	211,7,c	;volatile
  1810                           
  1811                           ;Test.c: 90: OSCCONbits.SCS = 0b11 ;
  1812  000B86  0E03               	movlw	3
  1813  000B88  12D3               	iorwf	211,f,c	;volatile
  1814  000B8A  0012               	return		;funcret
  1815  000B8C                     __end_of_CLK_intialize:
  1816                           	callstack 0
  1817                           
  1818 ;; *************** function _ADC_intialize *****************
  1819 ;; Defined at:
  1820 ;;		line 18 in file "hw_adc.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         0       0       0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text17
  1848  000B04                     __ptext17:
  1849                           	callstack 0
  1850  000B04                     _ADC_intialize:
  1851                           	callstack 30
  1852  000B04                     
  1853                           ;hw_adc.c: 25: TRISA1 = 1 ;
  1854  000B04  8292               	bsf	3986,1,c	;volatile
  1855                           
  1856                           ;hw_adc.c: 26: TRISA2 = 1 ;
  1857  000B06  8492               	bsf	3986,2,c	;volatile
  1858  000B08                     
  1859                           ;hw_adc.c: 32: ADCON1bits.PCFG = 0b1100;
  1860  000B08  50C1               	movf	193,w,c	;volatile
  1861  000B0A  0BF0               	andlw	-16
  1862  000B0C  090C               	iorlw	12
  1863  000B0E  6EC1               	movwf	193,c	;volatile
  1864  000B10                     
  1865                           ;hw_adc.c: 33: ADCON1bits.VCFG0 = 0;
  1866  000B10  98C1               	bcf	193,4,c	;volatile
  1867  000B12                     
  1868                           ;hw_adc.c: 34: ADCON1bits.VCFG1 = 0 ;
  1869  000B12  9AC1               	bcf	193,5,c	;volatile
  1870                           
  1871                           ;hw_adc.c: 37: ADCON2bits.ADCS = 0b110;
  1872  000B14  50C0               	movf	192,w,c	;volatile
  1873  000B16  0BF8               	andlw	-8
  1874  000B18  0906               	iorlw	6
  1875  000B1A  6EC0               	movwf	192,c	;volatile
  1876                           
  1877                           ;hw_adc.c: 38: ADCON2bits.ACQT = 0b111;
  1878  000B1C  0E38               	movlw	56
  1879  000B1E  12C0               	iorwf	192,f,c	;volatile
  1880  000B20                     
  1881                           ;hw_adc.c: 39: ADCON2bits.ADFM = 1;
  1882  000B20  8EC0               	bsf	192,7,c	;volatile
  1883  000B22                     
  1884                           ;hw_adc.c: 40: ADCON0bits.ADON = 1 ;
  1885  000B22  80C2               	bsf	194,0,c	;volatile
  1886  000B24  0012               	return		;funcret
  1887  000B26                     __end_of_ADC_intialize:
  1888                           	callstack 0
  1889                           
  1890                           	psect	rparam
  1891  0000                     
  1892                           	psect	idloc
  1893                           
  1894                           ;Config register IDLOC0 @ 0x200000
  1895                           ;	unspecified, using default values
  1896  200000                     	org	2097152
  1897  200000  FF                 	db	255
  1898                           
  1899                           ;Config register IDLOC1 @ 0x200001
  1900                           ;	unspecified, using default values
  1901  200001                     	org	2097153
  1902  200001  FF                 	db	255
  1903                           
  1904                           ;Config register IDLOC2 @ 0x200002
  1905                           ;	unspecified, using default values
  1906  200002                     	org	2097154
  1907  200002  FF                 	db	255
  1908                           
  1909                           ;Config register IDLOC3 @ 0x200003
  1910                           ;	unspecified, using default values
  1911  200003                     	org	2097155
  1912  200003  FF                 	db	255
  1913                           
  1914                           ;Config register IDLOC4 @ 0x200004
  1915                           ;	unspecified, using default values
  1916  200004                     	org	2097156
  1917  200004  FF                 	db	255
  1918                           
  1919                           ;Config register IDLOC5 @ 0x200005
  1920                           ;	unspecified, using default values
  1921  200005                     	org	2097157
  1922  200005  FF                 	db	255
  1923                           
  1924                           ;Config register IDLOC6 @ 0x200006
  1925                           ;	unspecified, using default values
  1926  200006                     	org	2097158
  1927  200006  FF                 	db	255
  1928                           
  1929                           ;Config register IDLOC7 @ 0x200007
  1930                           ;	unspecified, using default values
  1931  200007                     	org	2097159
  1932  200007  FF                 	db	255
  1933                           
  1934                           	psect	config
  1935                           
  1936                           ; Padding undefined space
  1937  300000                     	org	3145728
  1938  300000  FF                 	db	255
  1939                           
  1940                           ;Config register CONFIG1H @ 0x300001
  1941                           ;	Oscillator Selection bits
  1942                           ;	OSC = INTIO7, Internal oscillator block, CLKO function on RA6, port function on RA7
  1943                           ;	Fail-Safe Clock Monitor Enable bit
  1944                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1945                           ;	Internal/External Oscillator Switchover bit
  1946                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1947  300001                     	org	3145729
  1948  300001  09                 	db	9
  1949                           
  1950                           ;Config register CONFIG2L @ 0x300002
  1951                           ;	Power-up Timer Enable bit
  1952                           ;	PWRT = OFF, PWRT disabled
  1953                           ;	Brown-out Reset Enable bits
  1954                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1955                           ;	Brown Out Reset Voltage bits
  1956                           ;	BORV = 3, Minimum setting
  1957  300002                     	org	3145730
  1958  300002  1F                 	db	31
  1959                           
  1960                           ;Config register CONFIG2H @ 0x300003
  1961                           ;	Watchdog Timer Enable bit
  1962                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1963                           ;	Watchdog Timer Postscale Select bits
  1964                           ;	WDTPS = 32768, 1:32768
  1965  300003                     	org	3145731
  1966  300003  1E                 	db	30
  1967                           
  1968                           ; Padding undefined space
  1969  300004                     	org	3145732
  1970  300004  FF                 	db	255
  1971                           
  1972                           ;Config register CONFIG3H @ 0x300005
  1973                           ;	CCP2 MUX bit
  1974                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1975                           ;	PORTB A/D Enable bit
  1976                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1977                           ;	Low-Power Timer1 Oscillator Enable bit
  1978                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1979                           ;	MCLR Pin Enable bit
  1980                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1981  300005                     	org	3145733
  1982  300005  83                 	db	131
  1983                           
  1984                           ;Config register CONFIG4L @ 0x300006
  1985                           ;	Stack Full/Underflow Reset Enable bit
  1986                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1987                           ;	Single-Supply ICSP Enable bit
  1988                           ;	LVP = ON, Single-Supply ICSP enabled
  1989                           ;	Extended Instruction Set Enable bit
  1990                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1991                           ;	Background Debugger Enable bit
  1992                           ;	DEBUG = 0x1, unprogrammed default
  1993  300006                     	org	3145734
  1994  300006  85                 	db	133
  1995                           
  1996                           ; Padding undefined space
  1997  300007                     	org	3145735
  1998  300007  FF                 	db	255
  1999                           
  2000                           ;Config register CONFIG5L @ 0x300008
  2001                           ;	Code Protection bit
  2002                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2003                           ;	Code Protection bit
  2004                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2005                           ;	Code Protection bit
  2006                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2007                           ;	Code Protection bit
  2008                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2009  300008                     	org	3145736
  2010  300008  0F                 	db	15
  2011                           
  2012                           ;Config register CONFIG5H @ 0x300009
  2013                           ;	Boot Block Code Protection bit
  2014                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2015                           ;	Data EEPROM Code Protection bit
  2016                           ;	CPD = OFF, Data EEPROM not code-protected
  2017  300009                     	org	3145737
  2018  300009  C0                 	db	192
  2019                           
  2020                           ;Config register CONFIG6L @ 0x30000A
  2021                           ;	Write Protection bit
  2022                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2023                           ;	Write Protection bit
  2024                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2025                           ;	Write Protection bit
  2026                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2027                           ;	Write Protection bit
  2028                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2029  30000A                     	org	3145738
  2030  30000A  0F                 	db	15
  2031                           
  2032                           ;Config register CONFIG6H @ 0x30000B
  2033                           ;	Configuration Register Write Protection bit
  2034                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2035                           ;	Boot Block Write Protection bit
  2036                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2037                           ;	Data EEPROM Write Protection bit
  2038                           ;	WRTD = OFF, Data EEPROM not write-protected
  2039  30000B                     	org	3145739
  2040  30000B  E0                 	db	224
  2041                           
  2042                           ;Config register CONFIG7L @ 0x30000C
  2043                           ;	Table Read Protection bit
  2044                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2045                           ;	Table Read Protection bit
  2046                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2047                           ;	Table Read Protection bit
  2048                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2049                           ;	Table Read Protection bit
  2050                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2051  30000C                     	org	3145740
  2052  30000C  0F                 	db	15
  2053                           
  2054                           ;Config register CONFIG7H @ 0x30000D
  2055                           ;	Boot Block Table Read Protection bit
  2056                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2057  30000D                     	org	3145741
  2058  30000D  40                 	db	64
  2059                           tosu	equ	0xFFF
  2060                           tosh	equ	0xFFE
  2061                           tosl	equ	0xFFD
  2062                           stkptr	equ	0xFFC
  2063                           pclatu	equ	0xFFB
  2064                           pclath	equ	0xFFA
  2065                           pcl	equ	0xFF9
  2066                           tblptru	equ	0xFF8
  2067                           tblptrh	equ	0xFF7
  2068                           tblptrl	equ	0xFF6
  2069                           tablat	equ	0xFF5
  2070                           prodh	equ	0xFF4
  2071                           prodl	equ	0xFF3
  2072                           indf0	equ	0xFEF
  2073                           postinc0	equ	0xFEE
  2074                           postdec0	equ	0xFED
  2075                           preinc0	equ	0xFEC
  2076                           plusw0	equ	0xFEB
  2077                           fsr0h	equ	0xFEA
  2078                           fsr0l	equ	0xFE9
  2079                           wreg	equ	0xFE8
  2080                           indf1	equ	0xFE7
  2081                           postinc1	equ	0xFE6
  2082                           postdec1	equ	0xFE5
  2083                           preinc1	equ	0xFE4
  2084                           plusw1	equ	0xFE3
  2085                           fsr1h	equ	0xFE2
  2086                           fsr1l	equ	0xFE1
  2087                           bsr	equ	0xFE0
  2088                           indf2	equ	0xFDF
  2089                           postinc2	equ	0xFDE
  2090                           postdec2	equ	0xFDD
  2091                           preinc2	equ	0xFDC
  2092                           plusw2	equ	0xFDB
  2093                           fsr2h	equ	0xFDA
  2094                           fsr2l	equ	0xFD9
  2095                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51      65
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(COMRAM[20]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _test_func->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0    2953
                                             25 COMRAM    26    26      0
                      _ADC_intialize
                      _CLK_intialize
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _InitI2C
                    _PORT_Initialize
                           _Read_ADC
                          _UART_Init
                   _UART_send_string
                            _sprintf
                          _test_func
 ---------------------------------------------------------------------------------
 (1) _test_func                                            0     0      0     583
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     478
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2     105
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    1316
                                             12 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     0      2     288
                                              1 COMRAM     2     0      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             7     5      2      68
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _PORT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLK_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_intialize
   _CLK_intialize
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _InitI2C
   _PORT_Initialize
   _Read_ADC
   _UART_Init
   _UART_send_string
     _UART_send_char
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _test_func
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      41       1       51.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      15        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 15:21:50 2021

                        _i 0040                         l35 0B8A                         l44 0B02  
                       l38 0BAA                         l82 0B58                         l85 0B6A  
                       l79 0B7E                         l98 0A90                         u10 0ACA  
                       u11 0AC6                         u20 0AE0                         u21 0ADC  
                       u50 0B66                         u51 0B62             ?_CLK_intialize 0001  
                      l123 0B24                        l131 0A32                        l211 06FC  
                      l128 0A06                        l217 0796                        l162 0B3E  
                      l171 0BA4                        l180 0B94                        l165 0ABC  
                      l183 0ABA                        _ADC 0034                        l168 0AE0  
                      l177 0B9C                        l706 096C                        l716 09D0  
                      l709 09C8                        l699 0964                        l971 0BA2  
                      l965 0ABC                        l967 0ACA                        l991 0B9A  
                      l993 0B58                        l969 0B9E                        l995 0B66  
                      l989 0B96                        u300 0980                        u301 097C  
                      u310 099E                        u311 099A                        u320 09B4  
                      u400 06E4                        u321 09B0                        u401 06E0  
                      u330 0A58                        u410 06FC                        u250 0AB6  
                      u411 06F8                        u251 0AB0                        u340 0A80  
                      u420 0768                        u421 0764                        u350 0A90  
                      u270 0914                        u430 078A                        u351 0A8C  
                      u271 0910                        u431 0786                        u360 09E4  
                      u280 0932                        _PEN 007E2A                        u361 09E0  
                      u337 0A4E                        u281 092E                        u265 0AB8  
                      u370 09FC                        u290 094E                        u371 09F8  
                      u347 0A76                        u291 094A                        u507 08E6  
                      u380 0A14                        u381 0A10                        u390 0652  
                      u391 064E                        u447 07C6                        u457 07DE  
                      u467 0838                        _SEN 007E28                        u477 0886  
                      u487 08BA                        u497 08D8                        wreg 000FE8  
                     l1051 0B10                       l1035 0B80                       l1053 0B12  
                     l1037 0B84                       l1061 0B2A                       l1301 0640  
                     l1221 0A9C                       l1213 0B8C                       l1055 0B20  
                     l1047 0B04                       l1063 0B32                       l1039 0BA6  
                     l1231 0902                       l1303 0652                       l1223 0AA2  
                     l1215 0B90                       l1057 0B22                       l1049 0B08  
                     l1065 0B3C                       l1241 0938                       l1233 0914  
                     l1313 0676                       l1305 065E                       l1225 0AB8  
                     l1217 0A92                       l1401 08EE                       l1059 0B26  
                     l1243 094E                       l1235 091C                       l1251 096E  
                     l1331 06EA                       l1315 069E                       l1307 0666  
                     l1219 0A96                       l1245 0956                       l1237 0924  
                     l1229 08FA                       l1261 09B4                       l1253 0980  
                     l1333 0704                       l1325 06BA                       l1317 06AE  
                     l1309 066E                       l1341 0768                       l1271 0B76  
                     l1247 0958                       l1239 0932                       l1263 09BC  
                     l1255 0988                       l1335 0746                       l1319 06B6  
                     l1343 078A                       l1351 07A8                       l1281 09D4  
                     l1273 0A34                       l1249 095E                       l1265 09C2  
                     l1257 0990                       l1337 0752                       l1329 06E8  
                     l1361 07D4                       l1353 07B4                       l1291 0A04  
                     l1283 09D4                       l1275 0A38                       l1259 099E  
                     l1339 0756                       l1267 0AE2                       l1371 0822  
                     l1363 07EA                       l1355 07B8                       l1347 0798  
                     l1293 0A14                       l1285 09E4                       l1269 0B6C  
                     l1277 0A5C                       l1381 087C                       l1373 082E  
                     l1365 07EC                       l1357 07BC                       l1349 07A0  
                     l1295 0A2A                       l1287 09EC                       l1279 0A60  
                     l1391 08B4                       l1383 0894                       l1375 0846  
                     l1367 07F8                       l1359 07D2                       l1289 09FC  
                     l1393 08C2                       l1385 0898                       l1377 0854  
                     l1369 0806                       l1299 0634                       l1395 08CE  
                     l1387 08A4                       l1379 0870                       l1397 08D2  
                     l1389 08B0                       l1399 08E0                       STR_1 060B  
                     STR_2 0629                       STR_3 061E                       _RCIF 007CF5  
                     _RCEN 007E2B                       _RSEN 007E29                       _TXIF 007CF4  
                     _main 0798               main@_adc_str 001C                       fsr0h 000FEA  
                     indf0 000FEF                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr2l 000FD9                       prodh 000FF4  
                     prodl 000FF3                       start 0000               ___param_bank 000000  
          __end_of_InitI2C 0B40  __size_of_UART_send_string 005E           ?_I2C_Master_Read 0002  
         ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001                      ?_main 0001  
                    _ACKEN 007E2C                      _ACKDT 007E2D                      _LATA4 007C4C  
                    _LATA5 007C4D                      _LATA6 007C4E            __end_of___lwdiv 096E  
          __end_of___lwmod 09D2                      _RCREG 000FAE                      _SPBRG 000FAF  
                    _SSPIF 007CF3                      _TXREG 000FAD         __size_of_UART_Init 0014  
          __end_of_dpowers 060B                      _value 0038               main@temp_adc 0030  
                    tablat 000FF5                      status 000FD8            __end_of_sprintf 0798  
        ??_PORT_Initialize 0001            __initialization 0B40               __end_of_main 08FA  
         __end_of_Read_ADC 0A34            ??_CLK_intialize 0001                     ??_main 001A  
            __activetblptr 000002          ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0002  
       ??_I2C_Master_Start 0002         ??_I2C_Master_Write 0004                     _ADRESH 000FC4  
                   _ADRESL 000FC3                     _SPBRGH 000FB0                     _SSPADD 000FC8  
                   _TRISA1 007C91                     _TRISA2 007C92                     _TRISB1 007C99  
                   _TRISC3 007CA3                     _TRISC4 007CA4                     _TRISC6 007CA6  
                   _TRISC7 007CA7                     _SSPBUF 000FC9                  ??_InitI2C 0001  
            main@humid_adc 0032          __end_of_UART_Init 0B80            Read_ADC@channel 0007  
                ??___lwdiv 0005                  ??___lwmod 000C                     clear_0 0B46  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_sprintf 0013                 __accesstop 0080  
  __end_of__initialization 0B4C              ___rparam_used 000001             __pcstackCOMRAM 0001  
         _UART_send_string 0A34                  ?_Read_ADC 0001     __size_of_ADC_intialize 0022  
       __size_of_test_func 0022            _PORT_Initialize 0BA6    __size_of_UART_send_char 0016  
                  _SSPCON2 000FC5                    _SSPSTAT 000FC7                 ??_Read_ADC 0003  
                  _InitI2C 0B26                    __Hparam 0000                    __Lparam 0000  
                  ___lwdiv 08FA                    ___lwmod 096E               __psmallconst 0600  
                  __pcinit 0B40              _ADC_intialize 0B04                    __ramtop 0600  
                  __ptext0 0798                    __ptext1 0AE2                    __ptext2 0B8C  
                  __ptext3 0B96                    __ptext4 0B9E                    __ptext5 0A92  
                  __ptext6 0ABC                    __ptext7 0634                    __ptext8 096E  
                  __ptext9 08FA                    _dpowers 0601   __size_of_I2C_Master_Read 002A  
 __size_of_I2C_Master_Wait 0026   __size_of_I2C_Master_Stop 0008                    _sprintf 0634  
                  _voltage 003C       end_of_initialization 0B4C              __Lmediumconst 0000  
__size_of_I2C_Master_Start 0008  __size_of_I2C_Master_Write 000A          __end_of_test_func 0B04  
                _RCSTAbits 000FAB           I2C_Master_Read@a 0002                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE             ?_ADC_intialize 0001  
                _UART_Init 0B6C    __end_of_PORT_Initialize 0BAC      __end_of_CLK_intialize 0B8C  
       UART_Init@baud_rate 0001   __end_of_UART_send_string 0A92                  _TXSTAbits 000FAC  
              _BAUDCONbits 000FB8                 ?_UART_Init 0001        start_initialization 0B40  
           _UART_send_char 0B56          ??_I2C_Master_Read 0004          ??_I2C_Master_Wait 0001  
        ??_I2C_Master_Stop 0002          __size_of_Read_ADC 0062            ??_ADC_intialize 0001  
           Read_ADC@result 0005           ?_PORT_Initialize 0001     __end_of_UART_send_char 0B6C  
              __pbssCOMRAM 0034                sprintf@flag 0013                sprintf@prec 0018  
                 ?_InitI2C 0001           _I2C_Master_Start 0B9E           _I2C_Master_Write 0B8C  
         ___lwdiv@dividend 0001                   ?___lwdiv 0001                   ?___lwmod 0008  
              ??_UART_Init 0003           UART_send_char@bt 0001                __smallconst 0600  
          ?_UART_send_char 0001           ___lwdiv@quotient 0005                   ?_sprintf 000D  
                _test_func 0AE2                 _ADCON0bits 000FC2                 _ADCON1bits 000FC1  
               _ADCON2bits 000FC0      UART_send_string@st_pt 0002          ?_UART_send_string 0002  
                 _Read_ADC 09D2         ??_UART_send_string 0004           __size_of_InitI2C 001A  
                 __Hrparam 0000                   __Lrparam 0000                 ?_test_func 0001  
         __size_of___lwdiv 0074           __size_of___lwmod 0064                 sprintf@val 0016  
          _I2C_Master_Read 0A92            _I2C_Master_Wait 0ABC            _I2C_Master_Stop 0B96  
          ___lwdiv@divisor 0003            ___lwdiv@counter 0007                   __ptext10 0A34  
                 __ptext11 0B56                   __ptext12 0B6C                   __ptext13 09D2  
                 __ptext14 0BA6                   __ptext15 0B26                   __ptext16 0B80  
                 __ptext17 0B04           __size_of_sprintf 0164              __size_of_main 0162  
   __size_of_CLK_intialize 000C   __end_of_I2C_Master_Start 0BA6   __end_of_I2C_Master_Write 0B96  
               _INTCONbits 000FF2                  sprintf@ap 0014                  sprintf@sp 000D  
         ___lwmod@dividend 0008                 _OSCCONbits 000FD3           ??_UART_send_char 0001  
              ??_test_func 0006    __end_of_I2C_Master_Read 0ABC      __end_of_ADC_intialize 0B26  
  __end_of_I2C_Master_Wait 0AE2    __end_of_I2C_Master_Stop 0B9E                   sprintf@c 0019  
                 sprintf@f 000F              _CLK_intialize 0B80          I2C_Master_Write@d 0002  
          ___lwmod@divisor 000A            ___lwmod@counter 000C                _SSPCON1bits 000FC6  
 __size_of_PORT_Initialize 0006  
