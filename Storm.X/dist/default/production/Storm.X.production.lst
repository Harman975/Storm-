

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 14:39:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F2520 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataBANK0
    91  003324                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for stoa@F1154
    95  003324  28                 	db	40
    96  003325  6E                 	db	110
    97  003326  75                 	db	117
    98  003327  6C                 	db	108
    99  003328  6C                 	db	108
   100  003329  29                 	db	41
   101  00332A  00                 	db	0
   102  0000                     _ADCON2bits	set	4032
   103  0000                     _ADCON1bits	set	4033
   104  0000                     _TRISA	set	3986
   105  0000                     _PIR1bits	set	3998
   106  0000                     _ADRESL	set	4035
   107  0000                     _ADRESH	set	4036
   108  0000                     _ADCON0bits	set	4034
   109  0000                     _RCREG	set	4014
   110  0000                     _TXREG	set	4013
   111  0000                     _SPBRG	set	4015
   112  0000                     _SPBRGH	set	4016
   113  0000                     _RCSTAbits	set	4011
   114  0000                     _BAUDCONbits	set	4024
   115  0000                     _TXSTAbits	set	4012
   116  0000                     _INTCONbits	set	4082
   117  0000                     _OSCCONbits	set	4051
   118  0000                     _RCIF	set	31989
   119  0000                     _LATA6	set	31822
   120  0000                     _LATA5	set	31821
   121  0000                     _LATA4	set	31820
   122  0000                     _TXIF	set	31988
   123  0000                     _TRISB1	set	31897
   124  0000                     _TRISC7	set	31911
   125  0000                     _TRISC6	set	31910
   126                           
   127                           	psect	smallconst
   128  000600                     __psmallconst:
   129                           	callstack 0
   130  000600  00                 	db	0
   131  000601                     STR_1:
   132  000601  44                 	db	68	;'D'
   133  000602  61                 	db	97	;'a'
   134  000603  76                 	db	118	;'v'
   135  000604  65                 	db	101	;'e'
   136  000605  20                 	db	32
   137  000606  69                 	db	105	;'i'
   138  000607  73                 	db	115	;'s'
   139  000608  20                 	db	32
   140  000609  61                 	db	97	;'a'
   141  00060A  20                 	db	32
   142  00060B  6C                 	db	108	;'l'
   143  00060C  65                 	db	101	;'e'
   144  00060D  67                 	db	103	;'g'
   145  00060E  65                 	db	101	;'e'
   146  00060F  6E                 	db	110	;'n'
   147  000610  64                 	db	100	;'d'
   148  000611  21                 	db	33
   149  000612  0A                 	db	10
   150  000613  00                 	db	0
   151  000614                     STR_2:
   152  000614  41                 	db	65	;'A'
   153  000615  44                 	db	68	;'D'
   154  000616  43                 	db	67	;'C'
   155  000617  3A                 	db	58	;':'
   156  000618  20                 	db	32
   157  000619  25                 	db	37
   158  00061A  75                 	db	117	;'u'
   159  00061B  0A                 	db	10
   160  00061C  00                 	db	0
   161  00061D                     STR_79:
   162  00061D  68                 	db	104	;'h'
   163  00061E  68                 	db	104	;'h'
   164  00061F  58                 	db	88	;'X'
   165  000620  00                 	db	0
   166  000621                     STR_3:
   167  000621  68                 	db	104	;'h'
   168  000622  68                 	db	104	;'h'
   169  000623  64                 	db	100	;'d'
   170  000624  00                 	db	0
   171  000625                     STR_7:
   172  000625  68                 	db	104	;'h'
   173  000626  68                 	db	104	;'h'
   174  000627  69                 	db	105	;'i'
   175  000628  00                 	db	0
   176  000629                     STR_45:
   177  000629  68                 	db	104	;'h'
   178  00062A  68                 	db	104	;'h'
   179  00062B  6E                 	db	110	;'n'
   180  00062C  00                 	db	0
   181  00062D                     STR_30:
   182  00062D  68                 	db	104	;'h'
   183  00062E  68                 	db	104	;'h'
   184  00062F  6F                 	db	111	;'o'
   185  000630  00                 	db	0
   186  000631                     STR_60:
   187  000631  68                 	db	104	;'h'
   188  000632  68                 	db	104	;'h'
   189  000633  75                 	db	117	;'u'
   190  000634  00                 	db	0
   191  000635                     STR_75:
   192  000635  68                 	db	104	;'h'
   193  000636  68                 	db	104	;'h'
   194  000637  78                 	db	120	;'x'
   195  000638  00                 	db	0
   196  000639                     STR_97:
   197  000639  7A                 	db	122	;'z'
   198  00063A  58                 	db	88	;'X'
   199  00063B  00                 	db	0
   200  00063C                     STR_21:
   201  00063C  7A                 	db	122	;'z'
   202  00063D  64                 	db	100	;'d'
   203  00063E  00                 	db	0
   204  00063F                     STR_25:
   205  00063F  7A                 	db	122	;'z'
   206  000640  69                 	db	105	;'i'
   207  000641  00                 	db	0
   208  000642                     STR_55:
   209  000642  7A                 	db	122	;'z'
   210  000643  6E                 	db	110	;'n'
   211  000644  00                 	db	0
   212  000645                     STR_40:
   213  000645  7A                 	db	122	;'z'
   214  000646  6F                 	db	111	;'o'
   215  000647  00                 	db	0
   216  000648                     STR_70:
   217  000648  7A                 	db	122	;'z'
   218  000649  75                 	db	117	;'u'
   219  00064A  00                 	db	0
   220  00064B                     STR_93:
   221  00064B  7A                 	db	122	;'z'
   222  00064C  78                 	db	120	;'x'
   223  00064D  00                 	db	0
   224  00064E  00                 	db	0	; dummy byte at the end
   225  0000                     
   226                           ; #config settings
   227                           
   228                           	psect	cinit
   229  0030A2                     __pcinit:
   230                           	callstack 0
   231  0030A2                     start_initialization:
   232                           	callstack 0
   233  0030A2                     __initialization:
   234                           	callstack 0
   235                           
   236                           ; Initialize objects allocated to BANK0 (7 bytes)
   237                           ; load TBLPTR registers with __pidataBANK0
   238  0030A2  0E24               	movlw	low __pidataBANK0
   239  0030A4  6EF6               	movwf	tblptrl,c
   240  0030A6  0E33               	movlw	high __pidataBANK0
   241  0030A8  6EF7               	movwf	tblptrh,c
   242  0030AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   243  0030AC  6EF8               	movwf	tblptru,c
   244  0030AE  EE00  F0E4         	lfsr	0,__pdataBANK0
   245  0030B2  EE10 F007          	lfsr	1,7
   246  0030B6                     copy_data0:
   247  0030B6  0009               	tblrd		*+
   248  0030B8  CFF5 FFEE          	movff	tablat,postinc0
   249  0030BC  50E5               	movf	postdec1,w,c
   250  0030BE  50E1               	movf	fsr1l,w,c
   251  0030C0  E1FA               	bnz	copy_data0
   252                           
   253                           ; Clear objects allocated to BANK1 (36 bytes)
   254  0030C2  EE01  F000         	lfsr	0,__pbssBANK1
   255  0030C6  0E24               	movlw	36
   256  0030C8                     clear_0:
   257  0030C8  6AEE               	clrf	postinc0,c
   258  0030CA  06E8               	decf	wreg,f,c
   259  0030CC  E1FD               	bnz	clear_0
   260                           
   261                           ; Clear objects allocated to BANK0 (56 bytes)
   262  0030CE  EE00  F080         	lfsr	0,__pbssBANK0
   263  0030D2  0E38               	movlw	56
   264  0030D4                     clear_1:
   265  0030D4  6AEE               	clrf	postinc0,c
   266  0030D6  06E8               	decf	wreg,f,c
   267  0030D8  E1FD               	bnz	clear_1
   268  0030DA                     end_of_initialization:
   269                           	callstack 0
   270  0030DA                     __end_of__initialization:
   271                           	callstack 0
   272  0030DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   273  0030DC  6EF8               	movwf	tblptru,c
   274  0030DE  0100               	movlb	0
   275  0030E0  EF28  F017         	goto	_main	;jump to C main() function
   276                           
   277                           	psect	bssBANK0
   278  000080                     __pbssBANK0:
   279                           	callstack 0
   280  000080                     _ADC:
   281                           	callstack 0
   282  000080                     	ds	4
   283  000084                     _value:
   284                           	callstack 0
   285  000084                     	ds	4
   286  000088                     _voltage:
   287                           	callstack 0
   288  000088                     	ds	4
   289  00008C                     _nout:
   290                           	callstack 0
   291  00008C                     	ds	2
   292  00008E                     _width:
   293                           	callstack 0
   294  00008E                     	ds	2
   295  000090                     _prec:
   296                           	callstack 0
   297  000090                     	ds	2
   298  000092                     _flags:
   299                           	callstack 0
   300  000092                     	ds	2
   301  000094                     _errno:
   302                           	callstack 0
   303  000094                     	ds	2
   304  000096                     _i:
   305                           	callstack 0
   306  000096                     	ds	2
   307  000098                     _dbuf:
   308                           	callstack 0
   309  000098                     	ds	32
   310                           
   311                           	psect	dataBANK0
   312  0000E4                     __pdataBANK0:
   313                           	callstack 0
   314  0000E4                     stoa@F1154:
   315                           	callstack 0
   316  0000E4                     	ds	7
   317                           
   318                           	psect	bssBANK1
   319  000100                     __pbssBANK1:
   320                           	callstack 0
   321  000100                     _buffer:
   322                           	callstack 0
   323  000100                     	ds	36
   324                           
   325                           	psect	cstackBANK0
   326  0000B8                     __pcstackBANK0:
   327                           	callstack 0
   328  0000B8                     _vsnprintf$1041:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x0
   332  0000B8                     	ds	2
   333  0000BA                     vsnprintf@cnt:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x2
   337  0000BA                     	ds	2
   338  0000BC                     vsnprintf@f:
   339                           	callstack 0
   340                           
   341                           ; 6 bytes @ 0x4
   342  0000BC                     	ds	6
   343  0000C2                     ?_snprintf:
   344                           	callstack 0
   345  0000C2                     snprintf@s:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xA
   349  0000C2                     	ds	2
   350  0000C4                     snprintf@n:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xC
   354  0000C4                     	ds	2
   355  0000C6                     snprintf@fmt:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xE
   359  0000C6                     	ds	6
   360  0000CC                     snprintf@ap:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x14
   364  0000CC                     	ds	2
   365  0000CE                     main@_adc_str:
   366                           	callstack 0
   367                           
   368                           ; 20 bytes @ 0x16
   369  0000CE                     	ds	20
   370  0000E2                     main@adc:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x2A
   374  0000E2                     	ds	2
   375                           
   376                           	psect	cstackCOMRAM
   377  000001                     __pcstackCOMRAM:
   378                           	callstack 0
   379  000001                     ?_Read_ADC:
   380                           	callstack 0
   381  000001                     ?_strlen:
   382                           	callstack 0
   383  000001                     ?_isupper:
   384                           	callstack 0
   385  000001                     ?_isalpha:
   386                           	callstack 0
   387  000001                     ?_isdigit:
   388                           	callstack 0
   389  000001                     ?_strncmp:
   390                           	callstack 0
   391  000001                     ?_isspace:
   392                           	callstack 0
   393  000001                     ?_islower:
   394                           	callstack 0
   395  000001                     ?___wmul:
   396                           	callstack 0
   397  000001                     ?___aodiv:
   398                           	callstack 0
   399  000001                     ?___aomod:
   400                           	callstack 0
   401  000001                     ?___lodiv:
   402                           	callstack 0
   403  000001                     ?___lomod:
   404                           	callstack 0
   405  000001                     UART_send_char@bt:
   406                           	callstack 0
   407  000001                     ___wmul@multiplier:
   408                           	callstack 0
   409  000001                     isalpha@c:
   410                           	callstack 0
   411  000001                     isdigit@c:
   412                           	callstack 0
   413  000001                     isspace@c:
   414                           	callstack 0
   415  000001                     isupper@c:
   416                           	callstack 0
   417  000001                     fputc@c:
   418                           	callstack 0
   419  000001                     strlen@s:
   420                           	callstack 0
   421  000001                     strncmp@_l:
   422                           	callstack 0
   423  000001                     islower@c:
   424                           	callstack 0
   425  000001                     UART_Init@baud_rate:
   426                           	callstack 0
   427  000001                     ___aodiv@dividend:
   428                           	callstack 0
   429  000001                     ___aomod@dividend:
   430                           	callstack 0
   431  000001                     ___lodiv@dividend:
   432                           	callstack 0
   433  000001                     ___lomod@dividend:
   434                           	callstack 0
   435                           
   436                           ; 8 bytes @ 0x0
   437  000001                     	ds	1
   438  000002                     UART_send_string@st_pt:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x1
   442  000002                     	ds	1
   443  000003                     ??_Read_ADC:
   444  000003                     ??_isupper:
   445  000003                     ??_isalpha:
   446  000003                     ??_isdigit:
   447  000003                     ??_isspace:
   448  000003                     ??_islower:
   449  000003                     ___wmul@multiplicand:
   450                           	callstack 0
   451  000003                     fputc@fp:
   452                           	callstack 0
   453  000003                     strlen@a:
   454                           	callstack 0
   455  000003                     strncmp@_r:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x2
   459  000003                     	ds	1
   460  000004                     
   461                           ; 1 bytes @ 0x3
   462  000004                     	ds	1
   463  000005                     ??_fputc:
   464  000005                     Read_ADC@_voltage:
   465                           	callstack 0
   466  000005                     ___wmul@product:
   467                           	callstack 0
   468  000005                     strncmp@n:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x4
   472  000005                     	ds	2
   473  000007                     ??_strncmp:
   474  000007                     ?_toupper:
   475                           	callstack 0
   476  000007                     _isspace$1331:
   477                           	callstack 0
   478  000007                     toupper@c:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x6
   482  000007                     	ds	1
   483  000008                     ?_atoi:
   484                           	callstack 0
   485  000008                     atoi@s:
   486                           	callstack 0
   487  000008                     strncmp@l:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x7
   491  000008                     	ds	1
   492  000009                     ??_toupper:
   493  000009                     ___aodiv@divisor:
   494                           	callstack 0
   495  000009                     ___aomod@divisor:
   496                           	callstack 0
   497  000009                     ___lodiv@divisor:
   498                           	callstack 0
   499  000009                     ___lomod@divisor:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x8
   503  000009                     	ds	1
   504  00000A                     ??_atoi:
   505  00000A                     ?_ctoa:
   506                           	callstack 0
   507  00000A                     ?_stoa:
   508                           	callstack 0
   509  00000A                     ctoa@fp:
   510                           	callstack 0
   511  00000A                     stoa@fp:
   512                           	callstack 0
   513  00000A                     fputs@s:
   514                           	callstack 0
   515  00000A                     strncmp@r:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x9
   519  00000A                     	ds	2
   520  00000C                     ctoa@c:
   521                           	callstack 0
   522  00000C                     stoa@s:
   523                           	callstack 0
   524  00000C                     fputs@fp:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0xB
   528  00000C                     	ds	1
   529  00000D                     ??_ctoa:
   530  00000D                     _toupper$1391:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xC
   534  00000D                     	ds	1
   535  00000E                     ??_stoa:
   536  00000E                     fputs@c:
   537                           	callstack 0
   538  00000E                     ctoa@l:
   539                           	callstack 0
   540  00000E                     atoi@neg:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0xD
   544  00000E                     	ds	1
   545  00000F                     fputs@i:
   546                           	callstack 0
   547  00000F                     stoa@nuls:
   548                           	callstack 0
   549                           
   550                           ; 7 bytes @ 0xE
   551  00000F                     	ds	1
   552  000010                     ctoa@w:
   553                           	callstack 0
   554  000010                     _atoi$1303:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0xF
   558  000010                     	ds	1
   559  000011                     ?_pad:
   560                           	callstack 0
   561  000011                     ___aodiv@counter:
   562                           	callstack 0
   563  000011                     ___aomod@counter:
   564                           	callstack 0
   565  000011                     ___lomod@counter:
   566                           	callstack 0
   567  000011                     pad@fp:
   568                           	callstack 0
   569  000011                     ___lodiv@quotient:
   570                           	callstack 0
   571                           
   572                           ; 8 bytes @ 0x10
   573  000011                     	ds	1
   574  000012                     ___aodiv@sign:
   575                           	callstack 0
   576  000012                     ___aomod@sign:
   577                           	callstack 0
   578  000012                     _atoi$1305:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x11
   582  000012                     	ds	1
   583  000013                     ?_abs:
   584                           	callstack 0
   585  000013                     pad@buf:
   586                           	callstack 0
   587  000013                     abs@a:
   588                           	callstack 0
   589  000013                     ___aodiv@quotient:
   590                           	callstack 0
   591                           
   592                           ; 8 bytes @ 0x12
   593  000013                     	ds	1
   594  000014                     _atoi$1304:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x13
   598  000014                     	ds	1
   599  000015                     ??_abs:
   600  000015                     pad@p:
   601                           	callstack 0
   602  000015                     atoi@n:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x14
   606  000015                     	ds	1
   607  000016                     stoa@i:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x15
   611  000016                     	ds	1
   612  000017                     ??_pad:
   613                           
   614                           ; 1 bytes @ 0x16
   615  000017                     	ds	1
   616  000018                     pad@i:
   617                           	callstack 0
   618  000018                     stoa@w:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x17
   622  000018                     	ds	1
   623  000019                     ___lodiv@counter:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x18
   627  000019                     	ds	1
   628  00001A                     pad@w:
   629                           	callstack 0
   630  00001A                     stoa@cp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x19
   634  00001A                     	ds	2
   635  00001C                     ?_dtoa:
   636                           	callstack 0
   637  00001C                     ?_otoa:
   638                           	callstack 0
   639  00001C                     ?_utoa:
   640                           	callstack 0
   641  00001C                     ?_xtoa:
   642                           	callstack 0
   643  00001C                     dtoa@fp:
   644                           	callstack 0
   645  00001C                     otoa@fp:
   646                           	callstack 0
   647  00001C                     stoa@p:
   648                           	callstack 0
   649  00001C                     utoa@fp:
   650                           	callstack 0
   651  00001C                     xtoa@fp:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1B
   655  00001C                     	ds	2
   656  00001E                     stoa@l:
   657                           	callstack 0
   658  00001E                     dtoa@d:
   659                           	callstack 0
   660  00001E                     otoa@d:
   661                           	callstack 0
   662  00001E                     utoa@d:
   663                           	callstack 0
   664  00001E                     xtoa@d:
   665                           	callstack 0
   666                           
   667                           ; 8 bytes @ 0x1D
   668  00001E                     	ds	8
   669  000026                     ??_dtoa:
   670  000026                     ??_otoa:
   671  000026                     ??_utoa:
   672  000026                     xtoa@x:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x25
   676  000026                     	ds	1
   677  000027                     ??_xtoa:
   678                           
   679                           ; 1 bytes @ 0x26
   680  000027                     	ds	7
   681  00002E                     _dtoa$1126:
   682                           	callstack 0
   683  00002E                     otoa@p:
   684                           	callstack 0
   685  00002E                     utoa@p:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x2D
   689  00002E                     	ds	1
   690  00002F                     _xtoa$1163:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x2E
   694  00002F                     	ds	1
   695  000030                     dtoa@p:
   696                           	callstack 0
   697  000030                     otoa@t:
   698                           	callstack 0
   699  000030                     utoa@w:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x2F
   703  000030                     	ds	1
   704  000031                     _xtoa$1164:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x30
   708  000031                     	ds	1
   709  000032                     dtoa@w:
   710                           	callstack 0
   711  000032                     otoa@w:
   712                           	callstack 0
   713  000032                     utoa@n:
   714                           	callstack 0
   715                           
   716                           ; 8 bytes @ 0x31
   717  000032                     	ds	1
   718  000033                     xtoa@p:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x32
   722  000033                     	ds	1
   723  000034                     dtoa@s:
   724                           	callstack 0
   725  000034                     otoa@n:
   726                           	callstack 0
   727                           
   728                           ; 8 bytes @ 0x33
   729  000034                     	ds	1
   730  000035                     xtoa@w:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x34
   734  000035                     	ds	1
   735  000036                     dtoa@n:
   736                           	callstack 0
   737                           
   738                           ; 8 bytes @ 0x35
   739  000036                     	ds	1
   740  000037                     xtoa@n:
   741                           	callstack 0
   742                           
   743                           ; 8 bytes @ 0x36
   744  000037                     	ds	3
   745  00003A                     utoa@i:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x39
   749  00003A                     	ds	2
   750  00003C                     otoa@i:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x3B
   754  00003C                     	ds	2
   755  00003E                     dtoa@i:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x3D
   759  00003E                     	ds	1
   760  00003F                     xtoa@i:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x3E
   764  00003F                     	ds	2
   765  000041                     xtoa@c:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x40
   769  000041                     	ds	2
   770  000043                     ?_vfpfcnvrt:
   771                           	callstack 0
   772  000043                     vfpfcnvrt@fp:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x42
   776  000043                     	ds	2
   777  000045                     vfpfcnvrt@fmt:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x44
   781  000045                     	ds	2
   782  000047                     vfpfcnvrt@ap:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x46
   786  000047                     	ds	2
   787  000049                     ??_vfpfcnvrt:
   788                           
   789                           ; 1 bytes @ 0x48
   790  000049                     	ds	4
   791  00004D                     vfpfcnvrt@cp:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x4C
   795  00004D                     	ds	2
   796  00004F                     vfpfcnvrt@done:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x4E
   800  00004F                     	ds	2
   801  000051                     _vfpfcnvrt$1178:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x50
   805  000051                     	ds	2
   806  000053                     _vfpfcnvrt$1179:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x52
   810  000053                     	ds	2
   811  000055                     vfpfcnvrt@ll:
   812                           	callstack 0
   813                           
   814                           ; 8 bytes @ 0x54
   815  000055                     	ds	8
   816  00005D                     vfpfcnvrt@vp:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x5C
   820  00005D                     	ds	2
   821  00005F                     vfpfcnvrt@c:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x5E
   825  00005F                     	ds	1
   826  000060                     vfpfcnvrt@llu:
   827                           	callstack 0
   828                           
   829                           ; 8 bytes @ 0x5F
   830  000060                     	ds	8
   831  000068                     ?_vfprintf:
   832                           	callstack 0
   833  000068                     vfprintf@fp:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x67
   837  000068                     	ds	2
   838  00006A                     vfprintf@fmt:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x69
   842  00006A                     	ds	2
   843  00006C                     vfprintf@ap:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x6B
   847  00006C                     	ds	2
   848  00006E                     vfprintf@cfmt:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x6D
   852  00006E                     	ds	2
   853  000070                     ?_vsnprintf:
   854                           	callstack 0
   855  000070                     vsnprintf@s:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x6F
   859  000070                     	ds	2
   860  000072                     vsnprintf@n:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x71
   864  000072                     	ds	2
   865  000074                     vsnprintf@fmt:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x73
   869  000074                     	ds	2
   870  000076                     vsnprintf@ap:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x75
   874  000076                     	ds	2
   875  000078                     ??_vsnprintf:
   876                           
   877                           ; 1 bytes @ 0x77
   878  000078                     	ds	5
   879  00007D                     ??_main:
   880                           
   881                           ; 1 bytes @ 0x7C
   882  00007D                     	ds	2
   883                           
   884 ;;
   885 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   886 ;;
   887 ;; *************** function _main *****************
   888 ;; Defined at:
   889 ;;		line 105 in file "Test.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  _adc_str       20   22[BANK0 ] unsigned char [20]
   894 ;;  adc             2   42[BANK0 ] unsigned int 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   904 ;;      Params:         0       0       0       0       0       0       0
   905 ;;      Locals:         0      22       0       0       0       0       0
   906 ;;      Temps:          2       0       0       0       0       0       0
   907 ;;      Totals:         2      22       0       0       0       0       0
   908 ;;Total ram usage:       24 bytes
   909 ;; Hardware stack levels required when called:    9
   910 ;; This function calls:
   911 ;;		_ADC_intialize
   912 ;;		_CLK_intialize
   913 ;;		_PORT_Initialize
   914 ;;		_Read_ADC
   915 ;;		_UART_Init
   916 ;;		_UART_send_string
   917 ;;		_snprintf
   918 ;; This function is called by:
   919 ;;		Startup code after reset
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text0
   924  002E50                     __ptext0:
   925                           	callstack 0
   926  002E50                     _main:
   927                           	callstack 22
   928  002E50                     
   929                           ;Test.c: 108:     char _adc_str[20];;Test.c: 110:    CLK_intialize();
   930  002E50  EC8C  F019         	call	_CLK_intialize	;wreg free
   931                           
   932                           ;Test.c: 111:    PORT_Initialize();
   933  002E54  EC96  F019         	call	_PORT_Initialize	;wreg free
   934  002E58                     
   935                           ;Test.c: 112:    UART_Init(9600);
   936  002E58  0E80               	movlw	128
   937  002E5A  6E01               	movwf	UART_Init@baud_rate^0,c
   938  002E5C  0E25               	movlw	37
   939  002E5E  6E02               	movwf	(UART_Init@baud_rate+1)^0,c
   940  002E60  0E00               	movlw	0
   941  002E62  6E03               	movwf	(UART_Init@baud_rate+2)^0,c
   942  002E64  EC82  F019         	call	_UART_Init	;wreg free
   943  002E68                     
   944                           ;Test.c: 113:    ADC_intialize();
   945  002E68  EC67  F019         	call	_ADC_intialize	;wreg free
   946  002E6C                     l3214:
   947                           
   948                           ;Test.c: 116:     {;Test.c: 118:             UART_send_string("Dave is a legend!\n");
   949  002E6C  0E01               	movlw	low STR_1
   950  002E6E  6E02               	movwf	UART_send_string@st_pt^0,c
   951  002E70  0E06               	movlw	high STR_1
   952  002E72  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   953  002E74  ECD7  F017         	call	_UART_send_string	;wreg free
   954  002E78                     
   955                           ;Test.c: 120:             _delay((unsigned long)((500)*(8000000/4000.0)));
   956  002E78  0E06               	movlw	6
   957  002E7A  6E7E               	movwf	(??_main+1)^0,c
   958  002E7C  0E13               	movlw	19
   959  002E7E  6E7D               	movwf	??_main^0,c
   960  002E80  0EAE               	movlw	174
   961  002E82                     u3537:
   962  002E82  2EE8               	decfsz	wreg,f,c
   963  002E84  D7FE               	bra	u3537
   964  002E86  2E7D               	decfsz	??_main^0,f,c
   965  002E88  D7FC               	bra	u3537
   966  002E8A  2E7E               	decfsz	(??_main+1)^0,f,c
   967  002E8C  D7FA               	bra	u3537
   968  002E8E                     
   969                           ;Test.c: 121:             TRISB1 = 0;
   970  002E8E  9293               	bcf	3987,1,c	;volatile
   971  002E90                     
   972                           ;Test.c: 122:            _delay((unsigned long)((500)*(8000000/4000.0)));
   973  002E90  0E06               	movlw	6
   974  002E92  6E7E               	movwf	(??_main+1)^0,c
   975  002E94  0E13               	movlw	19
   976  002E96  6E7D               	movwf	??_main^0,c
   977  002E98  0EAE               	movlw	174
   978  002E9A                     u3547:
   979  002E9A  2EE8               	decfsz	wreg,f,c
   980  002E9C  D7FE               	bra	u3547
   981  002E9E  2E7D               	decfsz	??_main^0,f,c
   982  002EA0  D7FC               	bra	u3547
   983  002EA2  2E7E               	decfsz	(??_main+1)^0,f,c
   984  002EA4  D7FA               	bra	u3547
   985  002EA6                     
   986                           ;Test.c: 123:             TRISB1 = 1;
   987  002EA6  8293               	bsf	3987,1,c	;volatile
   988  002EA8                     
   989                           ;Test.c: 125:             adc = Read_ADC ();
   990  002EA8  ECB0  F018         	call	_Read_ADC	;wreg free
   991  002EAC  C001  F0E2         	movff	?_Read_ADC,main@adc
   992  002EB0  C002  F0E3         	movff	?_Read_ADC+1,main@adc+1
   993  002EB4                     
   994                           ;Test.c: 128:             snprintf(_adc_str, 20, "ADC: %u\n", adc);
   995  002EB4  0ECE               	movlw	low main@_adc_str
   996  002EB6  0100               	movlb	0	; () banked
   997  002EB8  6FC2               	movwf	snprintf@s& (0+255),b
   998  002EBA  0E00               	movlw	high main@_adc_str
   999  002EBC  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1000  002EBE  0E00               	movlw	0
  1001  002EC0  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1002  002EC2  0E14               	movlw	20
  1003  002EC4  6FC4               	movwf	snprintf@n& (0+255),b
  1004  002EC6  0E14               	movlw	low STR_2
  1005  002EC8  6FC6               	movwf	snprintf@fmt& (0+255),b
  1006  002ECA  0E06               	movlw	high STR_2
  1007  002ECC  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1008  002ECE  C0E2  F0C8         	movff	main@adc,?_snprintf+6
  1009  002ED2  C0E3  F0C9         	movff	main@adc+1,?_snprintf+7
  1010  002ED6  EC3C  F019         	call	_snprintf	;wreg free
  1011  002EDA                     
  1012                           ;Test.c: 131:             UART_send_string(_adc_str);
  1013  002EDA  0ECE               	movlw	low main@_adc_str
  1014  002EDC  6E02               	movwf	UART_send_string@st_pt^0,c
  1015  002EDE  0E00               	movlw	high main@_adc_str
  1016  002EE0  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
  1017  002EE2  ECD7  F017         	call	_UART_send_string	;wreg free
  1018  002EE6  EF36  F017         	goto	l3214
  1019  002EEA  EF00  F000         	goto	start
  1020  002EEE                     __end_of_main:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _snprintf *****************
  1024 ;; Defined at:
  1025 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\snprintf.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  s               2   10[BANK0 ] PTR unsigned char 
  1028 ;;		 -> main@_adc_str(20), 
  1029 ;;  n               2   12[BANK0 ] unsigned int 
  1030 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  1031 ;;		 -> STR_2(9), 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  ap              2   20[BANK0 ] PTR void [1]
  1034 ;;		 -> ?_snprintf(2), 
  1035 ;;  ret             2    0        int 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2   10[BANK0 ] int 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1045 ;;      Params:         0       8       0       0       0       0       0
  1046 ;;      Locals:         0       4       0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0
  1048 ;;      Totals:         0      12       0       0       0       0       0
  1049 ;;Total ram usage:       12 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    8
  1052 ;; This function calls:
  1053 ;;		_vsnprintf
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text1
  1060  003278                     __ptext1:
  1061                           	callstack 0
  1062  003278                     _snprintf:
  1063                           	callstack 22
  1064  003278  0EC8               	movlw	low (?_snprintf+6)
  1065  00327A  0100               	movlb	0	; () banked
  1066  00327C  6FCC               	movwf	snprintf@ap& (0+255),b
  1067  00327E  0E00               	movlw	high (?_snprintf+6)
  1068  003280  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  1069  003282                     
  1070                           ; BSR set to: 0
  1071  003282  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  1072  003286  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  1073  00328A  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  1074  00328E  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  1075  003292  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  1076  003296  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  1077  00329A  0ECC               	movlw	low snprintf@ap
  1078  00329C  6E76               	movwf	vsnprintf@ap^0,c
  1079  00329E  0E00               	movlw	high snprintf@ap
  1080  0032A0  6E77               	movwf	(vsnprintf@ap+1)^0,c
  1081  0032A2  EC17  F014         	call	_vsnprintf	;wreg free
  1082  0032A6  0012               	return		;funcret
  1083  0032A8                     __end_of_snprintf:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _vsnprintf *****************
  1087 ;; Defined at:
  1088 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_vsnprintf.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  s               2  111[COMRAM] PTR unsigned char 
  1091 ;;		 -> main@_adc_str(20), 
  1092 ;;  n               2  113[COMRAM] unsigned int 
  1093 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1094 ;;		 -> STR_2(9), 
  1095 ;;  ap              2  117[COMRAM] PTR PTR void 
  1096 ;;		 -> snprintf@ap(2), 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1099 ;;  cnt             2    2[BANK0 ] int 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2  111[COMRAM] int 
  1102 ;; Registers used:
  1103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1109 ;;      Params:         8       0       0       0       0       0       0
  1110 ;;      Locals:         0      10       0       0       0       0       0
  1111 ;;      Temps:          5       0       0       0       0       0       0
  1112 ;;      Totals:        13      10       0       0       0       0       0
  1113 ;;Total ram usage:       23 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    7
  1116 ;; This function calls:
  1117 ;;		_vfprintf
  1118 ;; This function is called by:
  1119 ;;		_snprintf
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text2
  1124  00282E                     __ptext2:
  1125                           	callstack 0
  1126  00282E                     _vsnprintf:
  1127                           	callstack 22
  1128  00282E  0E80               	movlw	128
  1129  002830  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  1130  002832  A0D8               	btfss	status,0,c
  1131  002834  EF1E  F014         	goto	u3441
  1132  002838  EF20  F014         	goto	u3440
  1133  00283C                     u3441:
  1134  00283C  EF29  F014         	goto	l3134
  1135  002840                     u3440:
  1136  002840  0E00               	movlw	0
  1137  002842  0100               	movlb	0	; () banked
  1138  002844  6F95               	movwf	(_errno+1)& (0+255),b
  1139  002846  0E4B               	movlw	75
  1140  002848  6F94               	movwf	_errno& (0+255),b
  1141  00284A                     
  1142                           ; BSR set to: 0
  1143  00284A  6870               	setf	?_vsnprintf^0,c
  1144  00284C  6871               	setf	(?_vsnprintf+1)^0,c
  1145  00284E  EFA4  F014         	goto	l810
  1146  002852                     l3134:
  1147  002852  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  1148  002856  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  1149  00285A  5073               	movf	(vsnprintf@n+1)^0,w,c
  1150  00285C  E109               	bnz	u3450
  1151  00285E  0E02               	movlw	2
  1152  002860  5C72               	subwf	vsnprintf@n^0,w,c
  1153  002862  A0D8               	btfss	status,0,c
  1154  002864  EF36  F014         	goto	u3451
  1155  002868  EF38  F014         	goto	u3450
  1156  00286C                     u3451:
  1157  00286C  EF45  F014         	goto	l3140
  1158  002870                     u3450:
  1159  002870  0EFF               	movlw	255
  1160  002872  2472               	addwf	vsnprintf@n^0,w,c
  1161  002874  0100               	movlb	0	; () banked
  1162  002876  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  1163  002878  0EFF               	movlw	255
  1164  00287A  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  1165  00287C  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  1166  00287E                     
  1167                           ; BSR set to: 0
  1168  00287E  0E00               	movlw	0
  1169  002880  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  1170  002882  0E00               	movlw	0
  1171  002884  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  1172  002886  EF4E  F014         	goto	l3142
  1173  00288A                     l3140:
  1174  00288A  0E00               	movlw	0
  1175  00288C  0100               	movlb	0	; () banked
  1176  00288E  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  1177  002890  0E01               	movlw	1
  1178  002892  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  1179  002894  0E00               	movlw	0
  1180  002896  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  1181  002898  0E01               	movlw	1
  1182  00289A  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  1183  00289C                     l3142:
  1184                           
  1185                           ; BSR set to: 0
  1186  00289C  0EBC               	movlw	low vsnprintf@f
  1187  00289E  6E68               	movwf	vfprintf@fp^0,c
  1188  0028A0  0E00               	movlw	high vsnprintf@f
  1189  0028A2  6E69               	movwf	(vfprintf@fp+1)^0,c
  1190  0028A4  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  1191  0028A8  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  1192  0028AC  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  1193  0028B0  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  1194  0028B4  EC77  F017         	call	_vfprintf	;wreg free
  1195  0028B8  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  1196  0028BC  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  1197  0028C0  5072               	movf	vsnprintf@n^0,w,c
  1198  0028C2  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  1199  0028C4  B4D8               	btfsc	status,2,c
  1200  0028C6  EF67  F014         	goto	u3461
  1201  0028CA  EF69  F014         	goto	u3460
  1202  0028CE                     u3461:
  1203  0028CE  EFA0  F014         	goto	l3154
  1204  0028D2                     u3460:
  1205  0028D2  0100               	movlb	0	; () banked
  1206  0028D4  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  1207  0028D6  EF6F  F014         	goto	u3471
  1208  0028DA  EF71  F014         	goto	u3470
  1209  0028DE                     u3471:
  1210  0028DE  EFA0  F014         	goto	l3154
  1211  0028E2                     u3470:
  1212  0028E2                     
  1213                           ; BSR set to: 0
  1214  0028E2  0EFF               	movlw	255
  1215  0028E4  6E78               	movwf	??_vsnprintf^0,c
  1216  0028E6  0EFF               	movlw	255
  1217  0028E8  6E79               	movwf	(??_vsnprintf+1)^0,c
  1218  0028EA  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  1219  0028EE  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  1220  0028F2  5078               	movf	??_vsnprintf^0,w,c
  1221  0028F4  267A               	addwf	(??_vsnprintf+2)^0,f,c
  1222  0028F6  5079               	movf	(??_vsnprintf+1)^0,w,c
  1223  0028F8  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  1224  0028FA  507A               	movf	(??_vsnprintf+2)^0,w,c
  1225  0028FC  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  1226  0028FE  51BB               	movf	(vsnprintf@cnt+1)& (0+255),w,b
  1227  002900  0A80               	xorlw	128
  1228  002902  6E7C               	movwf	(??_vsnprintf+4)^0,c
  1229  002904  507B               	movf	(??_vsnprintf+3)^0,w,c
  1230  002906  0A80               	xorlw	128
  1231  002908  587C               	subwfb	(??_vsnprintf+4)^0,w,c
  1232  00290A  A0D8               	btfss	status,0,c
  1233  00290C  EF8A  F014         	goto	u3481
  1234  002910  EF8C  F014         	goto	u3480
  1235  002914                     u3481:
  1236  002914  EF94  F014         	goto	l815
  1237  002918                     u3480:
  1238  002918                     
  1239                           ; BSR set to: 0
  1240  002918  0EFF               	movlw	255
  1241  00291A  2472               	addwf	vsnprintf@n^0,w,c
  1242  00291C  6FB8               	movwf	_vsnprintf$1041& (0+255),b
  1243  00291E  0EFF               	movlw	255
  1244  002920  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  1245  002922  6FB9               	movwf	(_vsnprintf$1041+1)& (0+255),b
  1246  002924  EF98  F014         	goto	l3152
  1247  002928                     l815:
  1248                           
  1249                           ; BSR set to: 0
  1250  002928  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1041
  1251  00292C  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1041+1
  1252  002930                     l3152:
  1253                           
  1254                           ; BSR set to: 0
  1255  002930  51B8               	movf	_vsnprintf$1041& (0+255),w,b
  1256  002932  2470               	addwf	vsnprintf@s^0,w,c
  1257  002934  6ED9               	movwf	fsr2l,c
  1258  002936  51B9               	movf	(_vsnprintf$1041+1)& (0+255),w,b
  1259  002938  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  1260  00293A  6EDA               	movwf	fsr2h,c
  1261  00293C  0E00               	movlw	0
  1262  00293E  6EDF               	movwf	indf2,c
  1263  002940                     l3154:
  1264  002940  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  1265  002944  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  1266  002948                     l810:
  1267  002948  0012               	return		;funcret
  1268  00294A                     __end_of_vsnprintf:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function _vfprintf *****************
  1272 ;; Defined at:
  1273 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  1276 ;;		 -> vsnprintf@f(6), 
  1277 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  1278 ;;		 -> STR_2(9), 
  1279 ;;  ap              2  107[COMRAM] PTR PTR void 
  1280 ;;		 -> snprintf@ap(2), 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  1283 ;;		 -> STR_2(9), 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  2  103[COMRAM] int 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1293 ;;      Params:         6       0       0       0       0       0       0
  1294 ;;      Locals:         2       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0
  1296 ;;      Totals:         8       0       0       0       0       0       0
  1297 ;;Total ram usage:        8 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    6
  1300 ;; This function calls:
  1301 ;;		_vfpfcnvrt
  1302 ;; This function is called by:
  1303 ;;		_vsnprintf
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text3
  1308  002EEE                     __ptext3:
  1309                           	callstack 0
  1310  002EEE                     _vfprintf:
  1311                           	callstack 22
  1312  002EEE                     
  1313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1314  002EEE  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  1315  002EF2  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1316  002EF6                     
  1317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1318  002EF6  0E00               	movlw	0
  1319  002EF8  0100               	movlb	0	; () banked
  1320  002EFA  6F8D               	movwf	(_nout+1)& (0+255),b
  1321  002EFC  0E00               	movlw	0
  1322  002EFE  6F8C               	movwf	_nout& (0+255),b
  1323                           
  1324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1325  002F00  EF95  F017         	goto	l3120
  1326  002F04                     l3118:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1330  002F04  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1331  002F08  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1332  002F0C  0E6E               	movlw	low vfprintf@cfmt
  1333  002F0E  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1334  002F10  0E00               	movlw	high vfprintf@cfmt
  1335  002F12  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1336  002F14  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1337  002F18  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1338  002F1C  EC28  F003         	call	_vfpfcnvrt	;wreg free
  1339  002F20  5043               	movf	?_vfpfcnvrt^0,w,c
  1340  002F22  0100               	movlb	0	; () banked
  1341  002F24  278C               	addwf	_nout& (0+255),f,b
  1342  002F26  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1343  002F28  238D               	addwfc	(_nout+1)& (0+255),f,b
  1344  002F2A                     l3120:
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1348  002F2A  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1349  002F2E  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1350  002F32                     	if	0	;tblptru may be non-zero
  1351  002F32                     	endif
  1352  002F32                     	if	0	;tblptru may be non-zero
  1353  002F32                     	endif
  1354  002F32  0008               	tblrd		*
  1355  002F34  50F5               	movf	tablat,w,c
  1356  002F36  0900               	iorlw	0
  1357  002F38  A4D8               	btfss	status,2,c
  1358  002F3A  EFA1  F017         	goto	u3421
  1359  002F3E  EFA3  F017         	goto	u3420
  1360  002F42                     u3421:
  1361  002F42  EF82  F017         	goto	l3118
  1362  002F46                     u3420:
  1363  002F46                     
  1364                           ; BSR set to: 0
  1365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1366  002F46  C08C  F068         	movff	_nout,?_vfprintf
  1367  002F4A  C08D  F069         	movff	_nout+1,?_vfprintf+1
  1368  002F4E                     
  1369                           ; BSR set to: 0
  1370  002F4E  0012               	return		;funcret
  1371  002F50                     __end_of_vfprintf:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _vfpfcnvrt *****************
  1375 ;; Defined at:
  1376 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1379 ;;		 -> vsnprintf@f(6), 
  1380 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1381 ;;		 -> vfprintf@cfmt(2), 
  1382 ;;  ap              2   70[COMRAM] PTR PTR void 
  1383 ;;		 -> snprintf@ap(2), 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  llu             8   95[COMRAM] unsigned long long 
  1386 ;;  ll              8   84[COMRAM] long long 
  1387 ;;  f               4    0        long long 
  1388 ;;  ct              3    0        unsigned char [3]
  1389 ;;  vp              2   92[COMRAM] PTR void 
  1390 ;;		 -> ?_snprintf(2), 
  1391 ;;  done            2   78[COMRAM] int 
  1392 ;;  cp              2   76[COMRAM] PTR unsigned char 
  1393 ;;		 -> ?_snprintf(2), 
  1394 ;;  i               2    0        int 
  1395 ;;  c               1   94[COMRAM] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  2   66[COMRAM] int 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1405 ;;      Params:         6       0       0       0       0       0       0
  1406 ;;      Locals:        27       0       0       0       0       0       0
  1407 ;;      Temps:          4       0       0       0       0       0       0
  1408 ;;      Totals:        37       0       0       0       0       0       0
  1409 ;;Total ram usage:       37 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    5
  1412 ;; This function calls:
  1413 ;;		_atoi
  1414 ;;		_ctoa
  1415 ;;		_dtoa
  1416 ;;		_fputc
  1417 ;;		_isdigit
  1418 ;;		_otoa
  1419 ;;		_stoa
  1420 ;;		_strncmp
  1421 ;;		_utoa
  1422 ;;		_xtoa
  1423 ;; This function is called by:
  1424 ;;		_vfprintf
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text4
  1429  000650                     __ptext4:
  1430                           	callstack 0
  1431  000650                     _vfpfcnvrt:
  1432                           	callstack 22
  1433  000650                     
  1434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1435  000650  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1436  000654  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1437  000658  CFDE FFF6          	movff	postinc2,tblptrl
  1438  00065C  CFDD FFF7          	movff	postdec2,tblptrh
  1439  000660                     	if	0	;tblptru may be non-zero
  1440  000660                     	endif
  1441  000660                     	if	0	;tblptru may be non-zero
  1442  000660                     	endif
  1443  000660  0008               	tblrd		*
  1444  000662  50F5               	movf	tablat,w,c
  1445  000664  0A25               	xorlw	37
  1446  000666  A4D8               	btfss	status,2,c
  1447  000668  EF38  F003         	goto	u2971
  1448  00066C  EF3A  F003         	goto	u2970
  1449  000670                     u2971:
  1450  000670  EF25  F00C         	goto	l3100
  1451  000674                     u2970:
  1452  000674                     
  1453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1454  000674  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1455  000678  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1456  00067C  2ADE               	incf	postinc2,f,c
  1457  00067E  0E00               	movlw	0
  1458  000680  22DD               	addwfc	postdec2,f,c
  1459  000682                     
  1460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1461  000682  0E00               	movlw	0
  1462  000684  0100               	movlb	0	; () banked
  1463  000686  6F8F               	movwf	(_width+1)& (0+255),b
  1464  000688  0E00               	movlw	0
  1465  00068A  6F8E               	movwf	_width& (0+255),b
  1466  00068C  C08E  F092         	movff	_width,_flags
  1467  000690  C08F  F093         	movff	_width+1,_flags+1
  1468  000694                     
  1469                           ; BSR set to: 0
  1470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1471  000694  6990               	setf	_prec& (0+255),b
  1472  000696  6991               	setf	(_prec+1)& (0+255),b
  1473  000698                     
  1474                           ; BSR set to: 0
  1475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1476  000698  0E00               	movlw	0
  1477  00069A  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1478  00069C  0E00               	movlw	0
  1479  00069E  6E4F               	movwf	vfpfcnvrt@done^0,c
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1482  0006A0  EF9D  F003         	goto	l2818
  1483  0006A4                     l2792:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1486  0006A4  0100               	movlb	0	; () banked
  1487  0006A6  8192               	bsf	_flags& (0+255),0,b
  1488  0006A8                     l2794:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1492  0006A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1493  0006AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1494  0006B0  2ADE               	incf	postinc2,f,c
  1495  0006B2  0E00               	movlw	0
  1496  0006B4  22DD               	addwfc	postdec2,f,c
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1499  0006B6  EF9D  F003         	goto	l2818
  1500  0006BA                     l2796:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1503  0006BA  0100               	movlb	0	; () banked
  1504  0006BC  8392               	bsf	_flags& (0+255),1,b
  1505  0006BE  EF54  F003         	goto	l2794
  1506  0006C2                     l2800:
  1507                           
  1508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1509  0006C2  0100               	movlb	0	; () banked
  1510  0006C4  8592               	bsf	_flags& (0+255),2,b
  1511  0006C6  EF54  F003         	goto	l2794
  1512  0006CA                     l2804:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1515  0006CA  0100               	movlb	0	; () banked
  1516  0006CC  8792               	bsf	_flags& (0+255),3,b
  1517  0006CE  EF54  F003         	goto	l2794
  1518  0006D2                     l2808:
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1521  0006D2  0100               	movlb	0	; () banked
  1522  0006D4  8992               	bsf	_flags& (0+255),4,b
  1523  0006D6  EF54  F003         	goto	l2794
  1524  0006DA                     l2812:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1527  0006DA  0E00               	movlw	0
  1528  0006DC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1529  0006DE  0E01               	movlw	1
  1530  0006E0  6E4F               	movwf	vfpfcnvrt@done^0,c
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1533  0006E2  EF9D  F003         	goto	l2818
  1534  0006E6                     l2816:
  1535  0006E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1536  0006EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1537  0006EE  CFDE FFF6          	movff	postinc2,tblptrl
  1538  0006F2  CFDD FFF7          	movff	postdec2,tblptrh
  1539  0006F6                     	if	0	;tblptru may be non-zero
  1540  0006F6                     	endif
  1541  0006F6                     	if	0	;tblptru may be non-zero
  1542  0006F6                     	endif
  1543  0006F6  0008               	tblrd		*
  1544  0006F8  50F5               	movf	tablat,w,c
  1545  0006FA  6E49               	movwf	??_vfpfcnvrt^0,c
  1546  0006FC  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1547                           
  1548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1549                           ; Switch size 1, requested type "simple"
  1550                           ; Number of cases is 1, Range of values is 0 to 0
  1551                           ; switch strategies available:
  1552                           ; Name         Instructions Cycles
  1553                           ; simple_byte            4     3 (average)
  1554                           ;	Chosen strategy is simple_byte
  1555  0006FE  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1556  000700  0A00               	xorlw	0	; case 0
  1557  000702  B4D8               	btfsc	status,2,c
  1558  000704  EF86  F003         	goto	l3280
  1559  000708  EF6D  F003         	goto	l2812
  1560  00070C                     l3280:
  1561                           
  1562                           ; Switch size 1, requested type "simple"
  1563                           ; Number of cases is 5, Range of values is 32 to 48
  1564                           ; switch strategies available:
  1565                           ; Name         Instructions Cycles
  1566                           ; simple_byte           16     9 (average)
  1567                           ;	Chosen strategy is simple_byte
  1568  00070C  5049               	movf	??_vfpfcnvrt^0,w,c
  1569  00070E  0A20               	xorlw	32	; case 32
  1570  000710  B4D8               	btfsc	status,2,c
  1571  000712  EF65  F003         	goto	l2804
  1572  000716  0A03               	xorlw	3	; case 35
  1573  000718  B4D8               	btfsc	status,2,c
  1574  00071A  EF69  F003         	goto	l2808
  1575  00071E  0A08               	xorlw	8	; case 43
  1576  000720  B4D8               	btfsc	status,2,c
  1577  000722  EF61  F003         	goto	l2800
  1578  000726  0A06               	xorlw	6	; case 45
  1579  000728  B4D8               	btfsc	status,2,c
  1580  00072A  EF52  F003         	goto	l2792
  1581  00072E  0A1D               	xorlw	29	; case 48
  1582  000730  B4D8               	btfsc	status,2,c
  1583  000732  EF5D  F003         	goto	l2796
  1584  000736  EF6D  F003         	goto	l2812
  1585  00073A                     l2818:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1588  00073A  504F               	movf	vfpfcnvrt@done^0,w,c
  1589  00073C  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1590  00073E  B4D8               	btfsc	status,2,c
  1591  000740  EFA4  F003         	goto	u2981
  1592  000744  EFA6  F003         	goto	u2980
  1593  000748                     u2981:
  1594  000748  EF73  F003         	goto	l2816
  1595  00074C                     u2980:
  1596  00074C                     
  1597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1598  00074C  0100               	movlb	0	; () banked
  1599  00074E  A192               	btfss	_flags& (0+255),0,b
  1600  000750  EFAC  F003         	goto	u2991
  1601  000754  EFAE  F003         	goto	u2990
  1602  000758                     u2991:
  1603  000758  EFAF  F003         	goto	l2822
  1604  00075C                     u2990:
  1605  00075C                     
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1608  00075C  9392               	bcf	_flags& (0+255),1,b
  1609  00075E                     l2822:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1613  00075E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1614  000762  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1615  000766  CFDE FFF6          	movff	postinc2,tblptrl
  1616  00076A  CFDD FFF7          	movff	postdec2,tblptrh
  1617  00076E                     	if	0	;tblptru may be non-zero
  1618  00076E                     	endif
  1619  00076E                     	if	0	;tblptru may be non-zero
  1620  00076E                     	endif
  1621  00076E  0008               	tblrd		*
  1622  000770  50F5               	movf	tablat,w,c
  1623  000772  0A2A               	xorlw	42
  1624  000774  A4D8               	btfss	status,2,c
  1625  000776  EFBF  F003         	goto	u3001
  1626  00077A  EFC1  F003         	goto	u3000
  1627  00077E                     u3001:
  1628  00077E  EFEA  F003         	goto	l2830
  1629  000782                     u3000:
  1630  000782                     
  1631                           ; BSR set to: 0
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1633  000782  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1634  000786  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1635  00078A  2ADE               	incf	postinc2,f,c
  1636  00078C  0E00               	movlw	0
  1637  00078E  22DD               	addwfc	postdec2,f,c
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1640  000790  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1641  000794  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1642  000798  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1643  00079C  0E02               	movlw	2
  1644  00079E  26DE               	addwf	postinc2,f,c
  1645  0007A0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1646  0007A4  0E00               	movlw	0
  1647  0007A6  22DD               	addwfc	postdec2,f,c
  1648  0007A8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1649  0007AC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1650  0007B0  CFDE F08E          	movff	postinc2,_width
  1651  0007B4  CFDD F08F          	movff	postdec2,_width+1
  1652  0007B8                     
  1653                           ; BSR set to: 0
  1654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1655  0007B8  BF8F               	btfsc	(_width+1)& (0+255),7,b
  1656  0007BA  EFE3  F003         	goto	u3010
  1657  0007BE  EFE1  F003         	goto	u3011
  1658  0007C2                     u3011:
  1659  0007C2  EF2D  F004         	goto	l2840
  1660  0007C6                     u3010:
  1661  0007C6                     
  1662                           ; BSR set to: 0
  1663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1664  0007C6  8192               	bsf	_flags& (0+255),0,b
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1667  0007C8  6D8E               	negf	_width& (0+255),b
  1668  0007CA  1F8F               	comf	(_width+1)& (0+255),f,b
  1669  0007CC  B0D8               	btfsc	status,0,c
  1670  0007CE  2B8F               	incf	(_width+1)& (0+255),f,b
  1671  0007D0  EF2D  F004         	goto	l2840
  1672  0007D4                     l2830:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1676  0007D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1677  0007D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1678  0007DC  CFDE F008          	movff	postinc2,atoi@s
  1679  0007E0  CFDD F009          	movff	postdec2,atoi@s+1
  1680  0007E4  EC16  F011         	call	_atoi	;wreg free
  1681  0007E8  C008  F08E         	movff	?_atoi,_width
  1682  0007EC  C009  F08F         	movff	?_atoi+1,_width+1
  1683                           
  1684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1685  0007F0  EF01  F004         	goto	l2834
  1686  0007F4                     l2832:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1689  0007F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1690  0007F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1691  0007FC  2ADE               	incf	postinc2,f,c
  1692  0007FE  0E00               	movlw	0
  1693  000800  22DD               	addwfc	postdec2,f,c
  1694  000802                     l2834:
  1695  000802  0ED0               	movlw	208
  1696  000804  6E49               	movwf	??_vfpfcnvrt^0,c
  1697  000806  0EFF               	movlw	255
  1698  000808  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1699  00080A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1700  00080E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1701  000812  CFDE FFF6          	movff	postinc2,tblptrl
  1702  000816  CFDD FFF7          	movff	postdec2,tblptrh
  1703  00081A                     	if	0	;tblptru may be non-zero
  1704  00081A                     	endif
  1705  00081A                     	if	0	;tblptru may be non-zero
  1706  00081A                     	endif
  1707  00081A  0008               	tblrd		*
  1708  00081C  50F5               	movf	tablat,w,c
  1709  00081E  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1710  000820  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1711  000822  5049               	movf	??_vfpfcnvrt^0,w,c
  1712  000824  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1713  000826  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1714  000828  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1715  00082A  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1716  00082C  E10A               	bnz	u3020
  1717  00082E  0E0A               	movlw	10
  1718  000830  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1719  000832  A0D8               	btfss	status,0,c
  1720  000834  EF1E  F004         	goto	u3021
  1721  000838  EF21  F004         	goto	u3020
  1722  00083C                     u3021:
  1723  00083C  0E01               	movlw	1
  1724  00083E  EF22  F004         	goto	u3030
  1725  000842                     u3020:
  1726  000842  0E00               	movlw	0
  1727  000844                     u3030:
  1728  000844  6E51               	movwf	_vfpfcnvrt$1178^0,c
  1729  000846  6A52               	clrf	(_vfpfcnvrt$1178+1)^0,c
  1730  000848  5051               	movf	_vfpfcnvrt$1178^0,w,c
  1731  00084A  1052               	iorwf	(_vfpfcnvrt$1178+1)^0,w,c
  1732  00084C  A4D8               	btfss	status,2,c
  1733  00084E  EF2B  F004         	goto	u3041
  1734  000852  EF2D  F004         	goto	u3040
  1735  000856                     u3041:
  1736  000856  EFFA  F003         	goto	l2832
  1737  00085A                     u3040:
  1738  00085A                     l2840:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1741  00085A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1742  00085E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1743  000862  CFDE FFF6          	movff	postinc2,tblptrl
  1744  000866  CFDD FFF7          	movff	postdec2,tblptrh
  1745  00086A                     	if	0	;tblptru may be non-zero
  1746  00086A                     	endif
  1747  00086A                     	if	0	;tblptru may be non-zero
  1748  00086A                     	endif
  1749  00086A  0008               	tblrd		*
  1750  00086C  50F5               	movf	tablat,w,c
  1751  00086E  0A2E               	xorlw	46
  1752  000870  A4D8               	btfss	status,2,c
  1753  000872  EF3D  F004         	goto	u3051
  1754  000876  EF3F  F004         	goto	u3050
  1755  00087A                     u3051:
  1756  00087A  EFBD  F004         	goto	l2860
  1757  00087E                     u3050:
  1758  00087E                     
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1760  00087E  0E00               	movlw	0
  1761  000880  0100               	movlb	0	; () banked
  1762  000882  6F91               	movwf	(_prec+1)& (0+255),b
  1763  000884  0E00               	movlw	0
  1764  000886  6F90               	movwf	_prec& (0+255),b
  1765  000888                     
  1766                           ; BSR set to: 0
  1767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1768  000888  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1769  00088C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1770  000890  2ADE               	incf	postinc2,f,c
  1771  000892  0E00               	movlw	0
  1772  000894  22DD               	addwfc	postdec2,f,c
  1773  000896                     
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1776  000896  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777  00089A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778  00089E  CFDE FFF6          	movff	postinc2,tblptrl
  1779  0008A2  CFDD FFF7          	movff	postdec2,tblptrh
  1780  0008A6                     	if	0	;tblptru may be non-zero
  1781  0008A6                     	endif
  1782  0008A6                     	if	0	;tblptru may be non-zero
  1783  0008A6                     	endif
  1784  0008A6  0008               	tblrd		*
  1785  0008A8  50F5               	movf	tablat,w,c
  1786  0008AA  0A2A               	xorlw	42
  1787  0008AC  A4D8               	btfss	status,2,c
  1788  0008AE  EF5B  F004         	goto	u3061
  1789  0008B2  EF5D  F004         	goto	u3060
  1790  0008B6                     u3061:
  1791  0008B6  EF7A  F004         	goto	l2850
  1792  0008BA                     u3060:
  1793  0008BA                     
  1794                           ; BSR set to: 0
  1795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1796  0008BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1797  0008BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1798  0008C2  2ADE               	incf	postinc2,f,c
  1799  0008C4  0E00               	movlw	0
  1800  0008C6  22DD               	addwfc	postdec2,f,c
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1803  0008C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1804  0008CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1805  0008D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1806  0008D4  0E02               	movlw	2
  1807  0008D6  26DE               	addwf	postinc2,f,c
  1808  0008D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1809  0008DC  0E00               	movlw	0
  1810  0008DE  22DD               	addwfc	postdec2,f,c
  1811  0008E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1812  0008E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1813  0008E8  CFDE F090          	movff	postinc2,_prec
  1814  0008EC  CFDD F091          	movff	postdec2,_prec+1
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1817  0008F0  EFBD  F004         	goto	l2860
  1818  0008F4                     l2850:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1822  0008F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1823  0008F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1824  0008FC  CFDE F008          	movff	postinc2,atoi@s
  1825  000900  CFDD F009          	movff	postdec2,atoi@s+1
  1826  000904  EC16  F011         	call	_atoi	;wreg free
  1827  000908  C008  F090         	movff	?_atoi,_prec
  1828  00090C  C009  F091         	movff	?_atoi+1,_prec+1
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1831  000910  EF91  F004         	goto	l2854
  1832  000914                     l2852:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1835  000914  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1836  000918  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1837  00091C  2ADE               	incf	postinc2,f,c
  1838  00091E  0E00               	movlw	0
  1839  000920  22DD               	addwfc	postdec2,f,c
  1840  000922                     l2854:
  1841  000922  0ED0               	movlw	208
  1842  000924  6E49               	movwf	??_vfpfcnvrt^0,c
  1843  000926  0EFF               	movlw	255
  1844  000928  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1845  00092A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1846  00092E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1847  000932  CFDE FFF6          	movff	postinc2,tblptrl
  1848  000936  CFDD FFF7          	movff	postdec2,tblptrh
  1849  00093A                     	if	0	;tblptru may be non-zero
  1850  00093A                     	endif
  1851  00093A                     	if	0	;tblptru may be non-zero
  1852  00093A                     	endif
  1853  00093A  0008               	tblrd		*
  1854  00093C  50F5               	movf	tablat,w,c
  1855  00093E  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1856  000940  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1857  000942  5049               	movf	??_vfpfcnvrt^0,w,c
  1858  000944  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1859  000946  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1860  000948  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1861  00094A  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1862  00094C  E10A               	bnz	u3070
  1863  00094E  0E0A               	movlw	10
  1864  000950  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1865  000952  A0D8               	btfss	status,0,c
  1866  000954  EFAE  F004         	goto	u3071
  1867  000958  EFB1  F004         	goto	u3070
  1868  00095C                     u3071:
  1869  00095C  0E01               	movlw	1
  1870  00095E  EFB2  F004         	goto	u3080
  1871  000962                     u3070:
  1872  000962  0E00               	movlw	0
  1873  000964                     u3080:
  1874  000964  6E53               	movwf	_vfpfcnvrt$1179^0,c
  1875  000966  6A54               	clrf	(_vfpfcnvrt$1179+1)^0,c
  1876  000968  5053               	movf	_vfpfcnvrt$1179^0,w,c
  1877  00096A  1054               	iorwf	(_vfpfcnvrt$1179+1)^0,w,c
  1878  00096C  A4D8               	btfss	status,2,c
  1879  00096E  EFBB  F004         	goto	u3091
  1880  000972  EFBD  F004         	goto	u3090
  1881  000976                     u3091:
  1882  000976  EF8A  F004         	goto	l2852
  1883  00097A                     u3090:
  1884  00097A                     l2860:
  1885                           
  1886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1887  00097A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1888  00097E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1889  000982  CFDE FFF6          	movff	postinc2,tblptrl
  1890  000986  CFDD FFF7          	movff	postdec2,tblptrh
  1891  00098A                     	if	0	;tblptru may be non-zero
  1892  00098A                     	endif
  1893  00098A                     	if	0	;tblptru may be non-zero
  1894  00098A                     	endif
  1895  00098A  0008               	tblrd		*
  1896  00098C  50F5               	movf	tablat,w,c
  1897  00098E  0A63               	xorlw	99
  1898  000990  A4D8               	btfss	status,2,c
  1899  000992  EFCD  F004         	goto	u3101
  1900  000996  EFCF  F004         	goto	u3100
  1901  00099A                     u3101:
  1902  00099A  EFF6  F004         	goto	l2868
  1903  00099E                     u3100:
  1904  00099E                     
  1905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1906  00099E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1907  0009A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1908  0009A6  2ADE               	incf	postinc2,f,c
  1909  0009A8  0E00               	movlw	0
  1910  0009AA  22DD               	addwfc	postdec2,f,c
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1913  0009AC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1914  0009B0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1915  0009B4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1916  0009B8  0E02               	movlw	2
  1917  0009BA  26DE               	addwf	postinc2,f,c
  1918  0009BC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1919  0009C0  0E00               	movlw	0
  1920  0009C2  22DD               	addwfc	postdec2,f,c
  1921  0009C4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1922  0009C8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1923  0009CC  50DF               	movf	indf2,w,c
  1924  0009CE  6E5F               	movwf	vfpfcnvrt@c^0,c
  1925  0009D0                     
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1927  0009D0  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  1928  0009D4  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1929  0009D8  C05F  F00C         	movff	vfpfcnvrt@c,ctoa@c
  1930  0009DC  EC8C  F015         	call	_ctoa	;wreg free
  1931  0009E0  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  1932  0009E4  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1933  0009E8  EF40  F00C         	goto	l1024
  1934  0009EC                     l2868:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 824:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  1937  0009EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1938  0009F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1939  0009F4  CFDE F001          	movff	postinc2,strncmp@_l
  1940  0009F8  CFDD F002          	movff	postdec2,strncmp@_l+1
  1941  0009FC  0E21               	movlw	low STR_3
  1942  0009FE  6E03               	movwf	strncmp@_r^0,c
  1943  000A00  0E06               	movlw	high STR_3
  1944  000A02  6E04               	movwf	(strncmp@_r+1)^0,c
  1945  000A04  0E00               	movlw	0
  1946  000A06  6E06               	movwf	(strncmp@n+1)^0,c
  1947  000A08  0E03               	movlw	3
  1948  000A0A  6E05               	movwf	strncmp@n^0,c
  1949  000A0C  EC1D  F015         	call	_strncmp	;wreg free
  1950  000A10  5001               	movf	?_strncmp^0,w,c
  1951  000A12  1002               	iorwf	(?_strncmp+1)^0,w,c
  1952  000A14  B4D8               	btfsc	status,2,c
  1953  000A16  EF0F  F005         	goto	u3111
  1954  000A1A  EF11  F005         	goto	u3110
  1955  000A1E                     u3111:
  1956  000A1E  EF2C  F005         	goto	l2872
  1957  000A22                     u3110:
  1958  000A22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1959  000A26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1960  000A2A  CFDE F001          	movff	postinc2,strncmp@_l
  1961  000A2E  CFDD F002          	movff	postdec2,strncmp@_l+1
  1962  000A32  0E25               	movlw	low STR_7
  1963  000A34  6E03               	movwf	strncmp@_r^0,c
  1964  000A36  0E06               	movlw	high STR_7
  1965  000A38  6E04               	movwf	(strncmp@_r+1)^0,c
  1966  000A3A  0E00               	movlw	0
  1967  000A3C  6E06               	movwf	(strncmp@n+1)^0,c
  1968  000A3E  0E03               	movlw	3
  1969  000A40  6E05               	movwf	strncmp@n^0,c
  1970  000A42  EC1D  F015         	call	_strncmp	;wreg free
  1971  000A46  5001               	movf	?_strncmp^0,w,c
  1972  000A48  1002               	iorwf	(?_strncmp+1)^0,w,c
  1973  000A4A  A4D8               	btfss	status,2,c
  1974  000A4C  EF2A  F005         	goto	u3121
  1975  000A50  EF2C  F005         	goto	u3120
  1976  000A54                     u3121:
  1977  000A54  EF6C  F005         	goto	l2878
  1978  000A58                     u3120:
  1979  000A58                     l2872:
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 825: ;C:\Program 
      +                          Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 827:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  1982  000A58  0E03               	movlw	3
  1983  000A5A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1984  000A5E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1985  000A62  26DE               	addwf	postinc2,f,c
  1986  000A64  0E00               	movlw	0
  1987  000A66  22DD               	addwfc	postdec2,f,c
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1990  000A68  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1991  000A6C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1992  000A70  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1993  000A74  0E02               	movlw	2
  1994  000A76  26DE               	addwf	postinc2,f,c
  1995  000A78  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1996  000A7C  0E00               	movlw	0
  1997  000A7E  22DD               	addwfc	postdec2,f,c
  1998  000A80  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1999  000A84  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2000  000A88  50DF               	movf	indf2,w,c
  2001  000A8A  6E55               	movwf	vfpfcnvrt@ll^0,c
  2002  000A8C  0E00               	movlw	0
  2003  000A8E  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  2004  000A90  0EFF               	movlw	-1
  2005  000A92  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  2006  000A94  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2007  000A96  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2008  000A98  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2009  000A9A  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2010  000A9C  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2011  000A9E  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2012  000AA0                     l2874:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2015  000AA0  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2016  000AA4  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2017  000AA8  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2018  000AAC  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2019  000AB0  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2020  000AB4  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2021  000AB8  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2022  000ABC  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2023  000AC0  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2024  000AC4  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2025  000AC8  EC41  F00C         	call	_dtoa	;wreg free
  2026  000ACC  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2027  000AD0  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2028  000AD4  EF40  F00C         	goto	l1024
  2029  000AD8                     l2878:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 836:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  2032  000AD8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2033  000ADC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2034  000AE0  CFDE F001          	movff	postinc2,strncmp@_l
  2035  000AE4  CFDD F002          	movff	postdec2,strncmp@_l+1
  2036  000AE8  0E22               	movlw	low (STR_3+1)
  2037  000AEA  6E03               	movwf	strncmp@_r^0,c
  2038  000AEC  0E06               	movlw	high (STR_3+1)
  2039  000AEE  6E04               	movwf	(strncmp@_r+1)^0,c
  2040  000AF0  0E00               	movlw	0
  2041  000AF2  6E06               	movwf	(strncmp@n+1)^0,c
  2042  000AF4  0E02               	movlw	2
  2043  000AF6  6E05               	movwf	strncmp@n^0,c
  2044  000AF8  EC1D  F015         	call	_strncmp	;wreg free
  2045  000AFC  5001               	movf	?_strncmp^0,w,c
  2046  000AFE  1002               	iorwf	(?_strncmp+1)^0,w,c
  2047  000B00  B4D8               	btfsc	status,2,c
  2048  000B02  EF85  F005         	goto	u3131
  2049  000B06  EF87  F005         	goto	u3130
  2050  000B0A                     u3131:
  2051  000B0A  EFA2  F005         	goto	l2882
  2052  000B0E                     u3130:
  2053  000B0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2054  000B12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2055  000B16  CFDE F001          	movff	postinc2,strncmp@_l
  2056  000B1A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2057  000B1E  0E26               	movlw	low (STR_7+1)
  2058  000B20  6E03               	movwf	strncmp@_r^0,c
  2059  000B22  0E06               	movlw	high (STR_7+1)
  2060  000B24  6E04               	movwf	(strncmp@_r+1)^0,c
  2061  000B26  0E00               	movlw	0
  2062  000B28  6E06               	movwf	(strncmp@n+1)^0,c
  2063  000B2A  0E02               	movlw	2
  2064  000B2C  6E05               	movwf	strncmp@n^0,c
  2065  000B2E  EC1D  F015         	call	_strncmp	;wreg free
  2066  000B32  5001               	movf	?_strncmp^0,w,c
  2067  000B34  1002               	iorwf	(?_strncmp+1)^0,w,c
  2068  000B36  A4D8               	btfss	status,2,c
  2069  000B38  EFA0  F005         	goto	u3141
  2070  000B3C  EFA2  F005         	goto	u3140
  2071  000B40                     u3141:
  2072  000B40  EFC9  F005         	goto	l2888
  2073  000B44                     u3140:
  2074  000B44                     l2882:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 837: ;C:\Program 
      +                          Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 839:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  2077  000B44  0E02               	movlw	2
  2078  000B46  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2079  000B4A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2080  000B4E  26DE               	addwf	postinc2,f,c
  2081  000B50  0E00               	movlw	0
  2082  000B52  22DD               	addwfc	postdec2,f,c
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 840:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2085  000B54  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2086  000B58  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2087  000B5C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2088  000B60  0E02               	movlw	2
  2089  000B62  26DE               	addwf	postinc2,f,c
  2090  000B64  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2091  000B68  0E00               	movlw	0
  2092  000B6A  22DD               	addwfc	postdec2,f,c
  2093  000B6C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2094  000B70  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2095  000B74  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  2096  000B78  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  2097  000B7C  0E00               	movlw	0
  2098  000B7E  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2099  000B80  0EFF               	movlw	-1
  2100  000B82  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2101  000B84  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2102  000B86  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2103  000B88  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2104  000B8A  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2105  000B8C  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2106  000B8E  EF50  F005         	goto	l2874
  2107  000B92                     l2888:
  2108                           
  2109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2110  000B92  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2111  000B96  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2112  000B9A  CFDE FFF6          	movff	postinc2,tblptrl
  2113  000B9E  CFDD FFF7          	movff	postdec2,tblptrh
  2114  000BA2                     	if	0	;tblptru may be non-zero
  2115  000BA2                     	endif
  2116  000BA2                     	if	0	;tblptru may be non-zero
  2117  000BA2                     	endif
  2118  000BA2  0008               	tblrd		*
  2119  000BA4  50F5               	movf	tablat,w,c
  2120  000BA6  0A64               	xorlw	100
  2121  000BA8  B4D8               	btfsc	status,2,c
  2122  000BAA  EFD9  F005         	goto	u3151
  2123  000BAE  EFDB  F005         	goto	u3150
  2124  000BB2                     u3151:
  2125  000BB2  EFED  F005         	goto	l2892
  2126  000BB6                     u3150:
  2127  000BB6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2128  000BBA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2129  000BBE  CFDE FFF6          	movff	postinc2,tblptrl
  2130  000BC2  CFDD FFF7          	movff	postdec2,tblptrh
  2131  000BC6                     	if	0	;tblptru may be non-zero
  2132  000BC6                     	endif
  2133  000BC6                     	if	0	;tblptru may be non-zero
  2134  000BC6                     	endif
  2135  000BC6  0008               	tblrd		*
  2136  000BC8  50F5               	movf	tablat,w,c
  2137  000BCA  0A69               	xorlw	105
  2138  000BCC  A4D8               	btfss	status,2,c
  2139  000BCE  EFEB  F005         	goto	u3161
  2140  000BD2  EFED  F005         	goto	u3160
  2141  000BD6                     u3161:
  2142  000BD6  EF13  F006         	goto	l2898
  2143  000BDA                     u3160:
  2144  000BDA                     l2892:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2147  000BDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2148  000BDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2149  000BE2  2ADE               	incf	postinc2,f,c
  2150  000BE4  0E00               	movlw	0
  2151  000BE6  22DD               	addwfc	postdec2,f,c
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2154  000BE8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2155  000BEC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2156  000BF0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2157  000BF4  0E02               	movlw	2
  2158  000BF6  26DE               	addwf	postinc2,f,c
  2159  000BF8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2160  000BFC  0E00               	movlw	0
  2161  000BFE  22DD               	addwfc	postdec2,f,c
  2162  000C00  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2163  000C04  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2164  000C08  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  2165  000C0C  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  2166  000C10  0E00               	movlw	0
  2167  000C12  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2168  000C14  0EFF               	movlw	-1
  2169  000C16  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2170  000C18  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2171  000C1A  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2172  000C1C  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2173  000C1E  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2174  000C20  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2175  000C22  EF50  F005         	goto	l2874
  2176  000C26                     l2898:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 905:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  2179  000C26  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2180  000C2A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2181  000C2E  CFDE F001          	movff	postinc2,strncmp@_l
  2182  000C32  CFDD F002          	movff	postdec2,strncmp@_l+1
  2183  000C36  0E3C               	movlw	low STR_21
  2184  000C38  6E03               	movwf	strncmp@_r^0,c
  2185  000C3A  0E06               	movlw	high STR_21
  2186  000C3C  6E04               	movwf	(strncmp@_r+1)^0,c
  2187  000C3E  0E00               	movlw	0
  2188  000C40  6E06               	movwf	(strncmp@n+1)^0,c
  2189  000C42  0E02               	movlw	2
  2190  000C44  6E05               	movwf	strncmp@n^0,c
  2191  000C46  EC1D  F015         	call	_strncmp	;wreg free
  2192  000C4A  5001               	movf	?_strncmp^0,w,c
  2193  000C4C  1002               	iorwf	(?_strncmp+1)^0,w,c
  2194  000C4E  B4D8               	btfsc	status,2,c
  2195  000C50  EF2C  F006         	goto	u3171
  2196  000C54  EF2E  F006         	goto	u3170
  2197  000C58                     u3171:
  2198  000C58  EF49  F006         	goto	l2902
  2199  000C5C                     u3170:
  2200  000C5C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2201  000C60  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2202  000C64  CFDE F001          	movff	postinc2,strncmp@_l
  2203  000C68  CFDD F002          	movff	postdec2,strncmp@_l+1
  2204  000C6C  0E3F               	movlw	low STR_25
  2205  000C6E  6E03               	movwf	strncmp@_r^0,c
  2206  000C70  0E06               	movlw	high STR_25
  2207  000C72  6E04               	movwf	(strncmp@_r+1)^0,c
  2208  000C74  0E00               	movlw	0
  2209  000C76  6E06               	movwf	(strncmp@n+1)^0,c
  2210  000C78  0E02               	movlw	2
  2211  000C7A  6E05               	movwf	strncmp@n^0,c
  2212  000C7C  EC1D  F015         	call	_strncmp	;wreg free
  2213  000C80  5001               	movf	?_strncmp^0,w,c
  2214  000C82  1002               	iorwf	(?_strncmp+1)^0,w,c
  2215  000C84  A4D8               	btfss	status,2,c
  2216  000C86  EF47  F006         	goto	u3181
  2217  000C8A  EF49  F006         	goto	u3180
  2218  000C8E                     u3181:
  2219  000C8E  EF71  F006         	goto	l2908
  2220  000C92                     u3180:
  2221  000C92                     l2902:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 906: ;C:\Program 
      +                          Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 908:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  2224  000C92  0E02               	movlw	2
  2225  000C94  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2226  000C98  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2227  000C9C  26DE               	addwf	postinc2,f,c
  2228  000C9E  0E00               	movlw	0
  2229  000CA0  22DD               	addwfc	postdec2,f,c
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 909:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2232  000CA2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2233  000CA6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2234  000CAA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2235  000CAE  0E02               	movlw	2
  2236  000CB0  26DE               	addwf	postinc2,f,c
  2237  000CB2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2238  000CB6  0E00               	movlw	0
  2239  000CB8  22DD               	addwfc	postdec2,f,c
  2240  000CBA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2241  000CBE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2242  000CC2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2243  000CC6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2244  000CCA  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2245  000CCE  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2246  000CD2  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  2247  000CD4  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  2248  000CD6  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  2249  000CD8  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  2250  000CDA  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  2251  000CDC  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  2252  000CDE  EF50  F005         	goto	l2874
  2253  000CE2                     l2908:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 991:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2256  000CE2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2257  000CE6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2258  000CEA  CFDE F001          	movff	postinc2,strncmp@_l
  2259  000CEE  CFDD F002          	movff	postdec2,strncmp@_l+1
  2260  000CF2  0E2D               	movlw	low STR_30
  2261  000CF4  6E03               	movwf	strncmp@_r^0,c
  2262  000CF6  0E06               	movlw	high STR_30
  2263  000CF8  6E04               	movwf	(strncmp@_r+1)^0,c
  2264  000CFA  0E00               	movlw	0
  2265  000CFC  6E06               	movwf	(strncmp@n+1)^0,c
  2266  000CFE  0E03               	movlw	3
  2267  000D00  6E05               	movwf	strncmp@n^0,c
  2268  000D02  EC1D  F015         	call	_strncmp	;wreg free
  2269  000D06  5001               	movf	?_strncmp^0,w,c
  2270  000D08  1002               	iorwf	(?_strncmp+1)^0,w,c
  2271  000D0A  A4D8               	btfss	status,2,c
  2272  000D0C  EF8A  F006         	goto	u3191
  2273  000D10  EF8C  F006         	goto	u3190
  2274  000D14                     u3191:
  2275  000D14  EFCB  F006         	goto	l2916
  2276  000D18                     u3190:
  2277  000D18                     
  2278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 993:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  2279  000D18  0E03               	movlw	3
  2280  000D1A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  000D1E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  000D22  26DE               	addwf	postinc2,f,c
  2283  000D24  0E00               	movlw	0
  2284  000D26  22DD               	addwfc	postdec2,f,c
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 994:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2287  000D28  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2288  000D2C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2289  000D30  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2290  000D34  0E02               	movlw	2
  2291  000D36  26DE               	addwf	postinc2,f,c
  2292  000D38  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2293  000D3C  0E00               	movlw	0
  2294  000D3E  22DD               	addwfc	postdec2,f,c
  2295  000D40  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2296  000D44  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2297  000D48  50DF               	movf	indf2,w,c
  2298  000D4A  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2299  000D4C  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  2300  000D4E  6E60               	movwf	vfpfcnvrt@llu^0,c
  2301  000D50  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  2302  000D52  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2303  000D54  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2304  000D56  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2305  000D58  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2306  000D5A  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2307  000D5C  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2308  000D5E                     l2912:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 996:             
      +                          return otoa(fp, llu);
  2311  000D5E  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2312  000D62  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2313  000D66  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2314  000D6A  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2315  000D6E  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2316  000D72  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2317  000D76  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2318  000D7A  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2319  000D7E  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2320  000D82  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2321  000D86  EC1F  F010         	call	_otoa	;wreg free
  2322  000D8A  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2323  000D8E  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2324  000D92  EF40  F00C         	goto	l1024
  2325  000D96                     l2916:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1002:         if 
      +                          (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2328  000D96  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329  000D9A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330  000D9E  CFDE F001          	movff	postinc2,strncmp@_l
  2331  000DA2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2332  000DA6  0E2E               	movlw	low (STR_30+1)
  2333  000DA8  6E03               	movwf	strncmp@_r^0,c
  2334  000DAA  0E06               	movlw	high (STR_30+1)
  2335  000DAC  6E04               	movwf	(strncmp@_r+1)^0,c
  2336  000DAE  0E00               	movlw	0
  2337  000DB0  6E06               	movwf	(strncmp@n+1)^0,c
  2338  000DB2  0E02               	movlw	2
  2339  000DB4  6E05               	movwf	strncmp@n^0,c
  2340  000DB6  EC1D  F015         	call	_strncmp	;wreg free
  2341  000DBA  5001               	movf	?_strncmp^0,w,c
  2342  000DBC  1002               	iorwf	(?_strncmp+1)^0,w,c
  2343  000DBE  A4D8               	btfss	status,2,c
  2344  000DC0  EFE4  F006         	goto	u3201
  2345  000DC4  EFE6  F006         	goto	u3200
  2346  000DC8                     u3201:
  2347  000DC8  EF0E  F007         	goto	l2924
  2348  000DCC                     u3200:
  2349  000DCC                     
  2350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1004:            
      +                           *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  2351  000DCC  0E02               	movlw	2
  2352  000DCE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2353  000DD2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2354  000DD6  26DE               	addwf	postinc2,f,c
  2355  000DD8  0E00               	movlw	0
  2356  000DDA  22DD               	addwfc	postdec2,f,c
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1005:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2359  000DDC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2360  000DE0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2361  000DE4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2362  000DE8  0E02               	movlw	2
  2363  000DEA  26DE               	addwf	postinc2,f,c
  2364  000DEC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2365  000DF0  0E00               	movlw	0
  2366  000DF2  22DD               	addwfc	postdec2,f,c
  2367  000DF4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2368  000DF8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2369  000DFC  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2370  000E00  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2371  000E04  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2372  000E08  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2373  000E0C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2374  000E0E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2375  000E10  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2376  000E12  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2377  000E14  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2378  000E16  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2379  000E18  EFAF  F006         	goto	l2912
  2380  000E1C                     l2924:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1012:         if 
      +                          (*fmt[0] == 'o') {
  2383  000E1C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2384  000E20  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2385  000E24  CFDE FFF6          	movff	postinc2,tblptrl
  2386  000E28  CFDD FFF7          	movff	postdec2,tblptrh
  2387  000E2C                     	if	0	;tblptru may be non-zero
  2388  000E2C                     	endif
  2389  000E2C                     	if	0	;tblptru may be non-zero
  2390  000E2C                     	endif
  2391  000E2C  0008               	tblrd		*
  2392  000E2E  50F5               	movf	tablat,w,c
  2393  000E30  0A6F               	xorlw	111
  2394  000E32  A4D8               	btfss	status,2,c
  2395  000E34  EF1E  F007         	goto	u3211
  2396  000E38  EF20  F007         	goto	u3210
  2397  000E3C                     u3211:
  2398  000E3C  EF47  F007         	goto	l2932
  2399  000E40                     u3210:
  2400  000E40                     
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1014:            
      +                           ++*fmt;
  2402  000E40  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2403  000E44  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2404  000E48  2ADE               	incf	postinc2,f,c
  2405  000E4A  0E00               	movlw	0
  2406  000E4C  22DD               	addwfc	postdec2,f,c
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1015:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2409  000E4E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2410  000E52  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2411  000E56  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2412  000E5A  0E02               	movlw	2
  2413  000E5C  26DE               	addwf	postinc2,f,c
  2414  000E5E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2415  000E62  0E00               	movlw	0
  2416  000E64  22DD               	addwfc	postdec2,f,c
  2417  000E66  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2418  000E6A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2419  000E6E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2420  000E72  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2421  000E76  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2422  000E7A  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2423  000E7E  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2424  000E80  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2425  000E82  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2426  000E84  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2427  000E86  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2428  000E88  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2429  000E8A  EFAF  F006         	goto	l2912
  2430  000E8E                     l2932:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1066:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2433  000E8E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2434  000E92  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2435  000E96  CFDE F001          	movff	postinc2,strncmp@_l
  2436  000E9A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2437  000E9E  0E45               	movlw	low STR_40
  2438  000EA0  6E03               	movwf	strncmp@_r^0,c
  2439  000EA2  0E06               	movlw	high STR_40
  2440  000EA4  6E04               	movwf	(strncmp@_r+1)^0,c
  2441  000EA6  0E00               	movlw	0
  2442  000EA8  6E06               	movwf	(strncmp@n+1)^0,c
  2443  000EAA  0E02               	movlw	2
  2444  000EAC  6E05               	movwf	strncmp@n^0,c
  2445  000EAE  EC1D  F015         	call	_strncmp	;wreg free
  2446  000EB2  5001               	movf	?_strncmp^0,w,c
  2447  000EB4  1002               	iorwf	(?_strncmp+1)^0,w,c
  2448  000EB6  A4D8               	btfss	status,2,c
  2449  000EB8  EF60  F007         	goto	u3221
  2450  000EBC  EF62  F007         	goto	u3220
  2451  000EC0                     u3221:
  2452  000EC0  EF8A  F007         	goto	l2940
  2453  000EC4                     u3220:
  2454  000EC4                     
  2455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1068:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  2456  000EC4  0E02               	movlw	2
  2457  000EC6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458  000ECA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459  000ECE  26DE               	addwf	postinc2,f,c
  2460  000ED0  0E00               	movlw	0
  2461  000ED2  22DD               	addwfc	postdec2,f,c
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1069:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2464  000ED4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2465  000ED8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2466  000EDC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2467  000EE0  0E02               	movlw	2
  2468  000EE2  26DE               	addwf	postinc2,f,c
  2469  000EE4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2470  000EE8  0E00               	movlw	0
  2471  000EEA  22DD               	addwfc	postdec2,f,c
  2472  000EEC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2473  000EF0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2474  000EF4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2475  000EF8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2476  000EFC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2477  000F00  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2478  000F04  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2479  000F06  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2480  000F08  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2481  000F0A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2482  000F0C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2483  000F0E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2484  000F10  EFAF  F006         	goto	l2912
  2485  000F14                     l2940:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1080:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2488  000F14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2489  000F18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2490  000F1C  CFDE F001          	movff	postinc2,strncmp@_l
  2491  000F20  CFDD F002          	movff	postdec2,strncmp@_l+1
  2492  000F24  0E29               	movlw	low STR_45
  2493  000F26  6E03               	movwf	strncmp@_r^0,c
  2494  000F28  0E06               	movlw	high STR_45
  2495  000F2A  6E04               	movwf	(strncmp@_r+1)^0,c
  2496  000F2C  0E00               	movlw	0
  2497  000F2E  6E06               	movwf	(strncmp@n+1)^0,c
  2498  000F30  0E03               	movlw	3
  2499  000F32  6E05               	movwf	strncmp@n^0,c
  2500  000F34  EC1D  F015         	call	_strncmp	;wreg free
  2501  000F38  5001               	movf	?_strncmp^0,w,c
  2502  000F3A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2503  000F3C  A4D8               	btfss	status,2,c
  2504  000F3E  EFA3  F007         	goto	u3231
  2505  000F42  EFA5  F007         	goto	u3230
  2506  000F46                     u3231:
  2507  000F46  EFCD  F007         	goto	l2950
  2508  000F4A                     u3230:
  2509  000F4A                     
  2510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1082:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  2511  000F4A  0E03               	movlw	3
  2512  000F4C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2513  000F50  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2514  000F54  26DE               	addwf	postinc2,f,c
  2515  000F56  0E00               	movlw	0
  2516  000F58  22DD               	addwfc	postdec2,f,c
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1083:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2519  000F5A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2520  000F5E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2521  000F62  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2522  000F66  0E02               	movlw	2
  2523  000F68  26DE               	addwf	postinc2,f,c
  2524  000F6A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2525  000F6E  0E00               	movlw	0
  2526  000F70  22DD               	addwfc	postdec2,f,c
  2527  000F72  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2528  000F76  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2529  000F7A  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2530  000F7E  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2531  000F82                     
  2532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1084:            
      +                           *(char *)vp = (char)nout;
  2533  000F82  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2534  000F86  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2535  000F8A  C08C  FFDF         	movff	_nout,indf2
  2536  000F8E                     l2946:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1085:            
      +                           return 0;
  2539  000F8E  0E00               	movlw	0
  2540  000F90  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2541  000F92  0E00               	movlw	0
  2542  000F94  6E43               	movwf	?_vfpfcnvrt^0,c
  2543  000F96  EF40  F00C         	goto	l1024
  2544  000F9A                     l2950:
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1090:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2547  000F9A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2548  000F9E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2549  000FA2  CFDE F001          	movff	postinc2,strncmp@_l
  2550  000FA6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2551  000FAA  0E2A               	movlw	low (STR_45+1)
  2552  000FAC  6E03               	movwf	strncmp@_r^0,c
  2553  000FAE  0E06               	movlw	high (STR_45+1)
  2554  000FB0  6E04               	movwf	(strncmp@_r+1)^0,c
  2555  000FB2  0E00               	movlw	0
  2556  000FB4  6E06               	movwf	(strncmp@n+1)^0,c
  2557  000FB6  0E02               	movlw	2
  2558  000FB8  6E05               	movwf	strncmp@n^0,c
  2559  000FBA  EC1D  F015         	call	_strncmp	;wreg free
  2560  000FBE  5001               	movf	?_strncmp^0,w,c
  2561  000FC0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2562  000FC2  A4D8               	btfss	status,2,c
  2563  000FC4  EFE6  F007         	goto	u3241
  2564  000FC8  EFE8  F007         	goto	u3240
  2565  000FCC                     u3241:
  2566  000FCC  EF0E  F008         	goto	l2960
  2567  000FD0                     u3240:
  2568  000FD0                     
  2569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1092:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  2570  000FD0  0E02               	movlw	2
  2571  000FD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2572  000FD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2573  000FDA  26DE               	addwf	postinc2,f,c
  2574  000FDC  0E00               	movlw	0
  2575  000FDE  22DD               	addwfc	postdec2,f,c
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1093:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  2578  000FE0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2579  000FE4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2580  000FE8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2581  000FEC  0E02               	movlw	2
  2582  000FEE  26DE               	addwf	postinc2,f,c
  2583  000FF0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2584  000FF4  0E00               	movlw	0
  2585  000FF6  22DD               	addwfc	postdec2,f,c
  2586  000FF8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2587  000FFC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2588  001000  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2589  001004  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2590  001008                     
  2591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1094:            
      +                           *(short *)vp = (short)nout;
  2592  001008  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2593  00100C  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2594  001010  C08C  FFDE         	movff	_nout,postinc2
  2595  001014  C08D  FFDD         	movff	_nout+1,postdec2
  2596  001018  EFC7  F007         	goto	l2946
  2597  00101C                     l2960:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  2600  00101C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2601  001020  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2602  001024  CFDE FFF6          	movff	postinc2,tblptrl
  2603  001028  CFDD FFF7          	movff	postdec2,tblptrh
  2604  00102C                     	if	0	;tblptru may be non-zero
  2605  00102C                     	endif
  2606  00102C                     	if	0	;tblptru may be non-zero
  2607  00102C                     	endif
  2608  00102C  0008               	tblrd		*
  2609  00102E  50F5               	movf	tablat,w,c
  2610  001030  0A6E               	xorlw	110
  2611  001032  A4D8               	btfss	status,2,c
  2612  001034  EF1E  F008         	goto	u3251
  2613  001038  EF20  F008         	goto	u3250
  2614  00103C                     u3251:
  2615  00103C  EF45  F008         	goto	l2970
  2616  001040                     u3250:
  2617  001040                     
  2618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  2619  001040  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2620  001044  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2621  001048  2ADE               	incf	postinc2,f,c
  2622  00104A  0E00               	movlw	0
  2623  00104C  22DD               	addwfc	postdec2,f,c
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  2626  00104E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2627  001052  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2628  001056  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2629  00105A  0E02               	movlw	2
  2630  00105C  26DE               	addwf	postinc2,f,c
  2631  00105E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2632  001062  0E00               	movlw	0
  2633  001064  22DD               	addwfc	postdec2,f,c
  2634  001066  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2635  00106A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2636  00106E  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2637  001072  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2638  001076                     
  2639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  2640  001076  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2641  00107A  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2642  00107E  C08C  FFDE         	movff	_nout,postinc2
  2643  001082  C08D  FFDD         	movff	_nout+1,postdec2
  2644  001086  EFC7  F007         	goto	l2946
  2645  00108A                     l2970:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1147:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2648  00108A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2649  00108E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2650  001092  CFDE F001          	movff	postinc2,strncmp@_l
  2651  001096  CFDD F002          	movff	postdec2,strncmp@_l+1
  2652  00109A  0E42               	movlw	low STR_55
  2653  00109C  6E03               	movwf	strncmp@_r^0,c
  2654  00109E  0E06               	movlw	high STR_55
  2655  0010A0  6E04               	movwf	(strncmp@_r+1)^0,c
  2656  0010A2  0E00               	movlw	0
  2657  0010A4  6E06               	movwf	(strncmp@n+1)^0,c
  2658  0010A6  0E02               	movlw	2
  2659  0010A8  6E05               	movwf	strncmp@n^0,c
  2660  0010AA  EC1D  F015         	call	_strncmp	;wreg free
  2661  0010AE  5001               	movf	?_strncmp^0,w,c
  2662  0010B0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2663  0010B2  A4D8               	btfss	status,2,c
  2664  0010B4  EF5E  F008         	goto	u3261
  2665  0010B8  EF60  F008         	goto	u3260
  2666  0010BC                     u3261:
  2667  0010BC  EF86  F008         	goto	l2980
  2668  0010C0                     u3260:
  2669  0010C0                     
  2670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1149:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  2671  0010C0  0E02               	movlw	2
  2672  0010C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2673  0010C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2674  0010CA  26DE               	addwf	postinc2,f,c
  2675  0010CC  0E00               	movlw	0
  2676  0010CE  22DD               	addwfc	postdec2,f,c
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1150:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2679  0010D0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2680  0010D4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2681  0010D8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2682  0010DC  0E02               	movlw	2
  2683  0010DE  26DE               	addwf	postinc2,f,c
  2684  0010E0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2685  0010E4  0E00               	movlw	0
  2686  0010E6  22DD               	addwfc	postdec2,f,c
  2687  0010E8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2688  0010EC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2689  0010F0  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2690  0010F4  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2691  0010F8                     
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1151:            
      +                           *(size_t *)vp = (size_t)nout;
  2693  0010F8  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2694  0010FC  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2695  001100  C08C  FFDE         	movff	_nout,postinc2
  2696  001104  C08D  FFDD         	movff	_nout+1,postdec2
  2697  001108  EFC7  F007         	goto	l2946
  2698  00110C                     l2980:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1160:         if 
      +                          (*fmt[0] == 'p') {
  2701  00110C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  001110  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  001114  CFDE FFF6          	movff	postinc2,tblptrl
  2704  001118  CFDD FFF7          	movff	postdec2,tblptrh
  2705  00111C                     	if	0	;tblptru may be non-zero
  2706  00111C                     	endif
  2707  00111C                     	if	0	;tblptru may be non-zero
  2708  00111C                     	endif
  2709  00111C  0008               	tblrd		*
  2710  00111E  50F5               	movf	tablat,w,c
  2711  001120  0A70               	xorlw	112
  2712  001122  A4D8               	btfss	status,2,c
  2713  001124  EF96  F008         	goto	u3271
  2714  001128  EF98  F008         	goto	u3270
  2715  00112C                     u3271:
  2716  00112C  EFDB  F008         	goto	l2988
  2717  001130                     u3270:
  2718  001130                     
  2719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1162:            
      +                           ++*fmt;
  2720  001130  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2721  001134  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2722  001138  2ADE               	incf	postinc2,f,c
  2723  00113A  0E00               	movlw	0
  2724  00113C  22DD               	addwfc	postdec2,f,c
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1163:            
      +                           llu = (unsigned long long)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  2727  00113E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2728  001142  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2729  001146  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2730  00114A  0E02               	movlw	2
  2731  00114C  26DE               	addwf	postinc2,f,c
  2732  00114E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2733  001152  0E00               	movlw	0
  2734  001154  22DD               	addwfc	postdec2,f,c
  2735  001156  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2736  00115A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2737  00115E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2738  001162  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2739  001166  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2740  00116A  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2741  00116E  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2742  001170  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2743  001172  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2744  001174  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2745  001176  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2746  001178  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2747  00117A                     
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1165:            
      +                           return xtoa(fp, llu, 'x');
  2749  00117A  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2750  00117E  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2751  001182  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2752  001186  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2753  00118A  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2754  00118E  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2755  001192  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2756  001196  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2757  00119A  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2758  00119E  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2759  0011A2  0E78               	movlw	120
  2760  0011A4  6E26               	movwf	xtoa@x^0,c
  2761  0011A6  ECB2  F00D         	call	_xtoa	;wreg free
  2762  0011AA  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  2763  0011AE  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2764  0011B2  EF40  F00C         	goto	l1024
  2765  0011B6                     l2988:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  2768  0011B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2769  0011BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2770  0011BE  CFDE FFF6          	movff	postinc2,tblptrl
  2771  0011C2  CFDD FFF7          	movff	postdec2,tblptrh
  2772  0011C6                     	if	0	;tblptru may be non-zero
  2773  0011C6                     	endif
  2774  0011C6                     	if	0	;tblptru may be non-zero
  2775  0011C6                     	endif
  2776  0011C6  0008               	tblrd		*
  2777  0011C8  50F5               	movf	tablat,w,c
  2778  0011CA  0A73               	xorlw	115
  2779  0011CC  A4D8               	btfss	status,2,c
  2780  0011CE  EFEB  F008         	goto	u3281
  2781  0011D2  EFED  F008         	goto	u3280
  2782  0011D6                     u3281:
  2783  0011D6  EF18  F009         	goto	l2996
  2784  0011DA                     u3280:
  2785  0011DA                     
  2786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  2787  0011DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2788  0011DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2789  0011E2  2ADE               	incf	postinc2,f,c
  2790  0011E4  0E00               	movlw	0
  2791  0011E6  22DD               	addwfc	postdec2,f,c
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2794  0011E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2795  0011EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2796  0011F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2797  0011F4  0E02               	movlw	2
  2798  0011F6  26DE               	addwf	postinc2,f,c
  2799  0011F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2800  0011FC  0E00               	movlw	0
  2801  0011FE  22DD               	addwfc	postdec2,f,c
  2802  001200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2803  001204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2804  001208  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  2805  00120C  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  2806  001210                     
  2807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  2808  001210  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  2809  001214  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2810  001218  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  2811  00121C  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2812  001220  ECA2  F012         	call	_stoa	;wreg free
  2813  001224  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  2814  001228  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  2815  00122C  EF40  F00C         	goto	l1024
  2816  001230                     l2996:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1183:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  2819  001230  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2820  001234  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2821  001238  CFDE F001          	movff	postinc2,strncmp@_l
  2822  00123C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2823  001240  0E31               	movlw	low STR_60
  2824  001242  6E03               	movwf	strncmp@_r^0,c
  2825  001244  0E06               	movlw	high STR_60
  2826  001246  6E04               	movwf	(strncmp@_r+1)^0,c
  2827  001248  0E00               	movlw	0
  2828  00124A  6E06               	movwf	(strncmp@n+1)^0,c
  2829  00124C  0E03               	movlw	3
  2830  00124E  6E05               	movwf	strncmp@n^0,c
  2831  001250  EC1D  F015         	call	_strncmp	;wreg free
  2832  001254  5001               	movf	?_strncmp^0,w,c
  2833  001256  1002               	iorwf	(?_strncmp+1)^0,w,c
  2834  001258  A4D8               	btfss	status,2,c
  2835  00125A  EF31  F009         	goto	u3291
  2836  00125E  EF33  F009         	goto	u3290
  2837  001262                     u3291:
  2838  001262  EF72  F009         	goto	l3004
  2839  001266                     u3290:
  2840  001266                     
  2841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1185:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  2842  001266  0E03               	movlw	3
  2843  001268  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2844  00126C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2845  001270  26DE               	addwf	postinc2,f,c
  2846  001272  0E00               	movlw	0
  2847  001274  22DD               	addwfc	postdec2,f,c
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1186:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2850  001276  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2851  00127A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2852  00127E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2853  001282  0E02               	movlw	2
  2854  001284  26DE               	addwf	postinc2,f,c
  2855  001286  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2856  00128A  0E00               	movlw	0
  2857  00128C  22DD               	addwfc	postdec2,f,c
  2858  00128E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2859  001292  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2860  001296  50DF               	movf	indf2,w,c
  2861  001298  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2862  00129A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  2863  00129C  6E60               	movwf	vfpfcnvrt@llu^0,c
  2864  00129E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  2865  0012A0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2866  0012A2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2867  0012A4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2868  0012A6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2869  0012A8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2870  0012AA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2871  0012AC                     l3000:
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1188:            
      +                           return utoa(fp, llu);
  2874  0012AC  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2875  0012B0  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2876  0012B4  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2877  0012B8  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2878  0012BC  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2879  0012C0  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2880  0012C4  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2881  0012C8  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2882  0012CC  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2883  0012D0  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2884  0012D4  EC1E  F00F         	call	_utoa	;wreg free
  2885  0012D8  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  2886  0012DC  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  2887  0012E0  EF40  F00C         	goto	l1024
  2888  0012E4                     l3004:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1194:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  2891  0012E4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  0012E8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  0012EC  CFDE F001          	movff	postinc2,strncmp@_l
  2894  0012F0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2895  0012F4  0E32               	movlw	low (STR_60+1)
  2896  0012F6  6E03               	movwf	strncmp@_r^0,c
  2897  0012F8  0E06               	movlw	high (STR_60+1)
  2898  0012FA  6E04               	movwf	(strncmp@_r+1)^0,c
  2899  0012FC  0E00               	movlw	0
  2900  0012FE  6E06               	movwf	(strncmp@n+1)^0,c
  2901  001300  0E02               	movlw	2
  2902  001302  6E05               	movwf	strncmp@n^0,c
  2903  001304  EC1D  F015         	call	_strncmp	;wreg free
  2904  001308  5001               	movf	?_strncmp^0,w,c
  2905  00130A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2906  00130C  A4D8               	btfss	status,2,c
  2907  00130E  EF8B  F009         	goto	u3301
  2908  001312  EF8D  F009         	goto	u3300
  2909  001316                     u3301:
  2910  001316  EFB5  F009         	goto	l3012
  2911  00131A                     u3300:
  2912  00131A                     
  2913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1196:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  2914  00131A  0E02               	movlw	2
  2915  00131C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2916  001320  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2917  001324  26DE               	addwf	postinc2,f,c
  2918  001326  0E00               	movlw	0
  2919  001328  22DD               	addwfc	postdec2,f,c
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1197:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2922  00132A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2923  00132E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2924  001332  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2925  001336  0E02               	movlw	2
  2926  001338  26DE               	addwf	postinc2,f,c
  2927  00133A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2928  00133E  0E00               	movlw	0
  2929  001340  22DD               	addwfc	postdec2,f,c
  2930  001342  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2931  001346  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2932  00134A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2933  00134E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2934  001352  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2935  001356  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2936  00135A  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2937  00135C  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2938  00135E  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2939  001360  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2940  001362  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2941  001364  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2942  001366  EF56  F009         	goto	l3000
  2943  00136A                     l3012:
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  2946  00136A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2947  00136E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2948  001372  CFDE FFF6          	movff	postinc2,tblptrl
  2949  001376  CFDD FFF7          	movff	postdec2,tblptrh
  2950  00137A                     	if	0	;tblptru may be non-zero
  2951  00137A                     	endif
  2952  00137A                     	if	0	;tblptru may be non-zero
  2953  00137A                     	endif
  2954  00137A  0008               	tblrd		*
  2955  00137C  50F5               	movf	tablat,w,c
  2956  00137E  0A75               	xorlw	117
  2957  001380  A4D8               	btfss	status,2,c
  2958  001382  EFC5  F009         	goto	u3311
  2959  001386  EFC7  F009         	goto	u3310
  2960  00138A                     u3311:
  2961  00138A  EFEE  F009         	goto	l3020
  2962  00138E                     u3310:
  2963  00138E                     
  2964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  2965  00138E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2966  001392  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2967  001396  2ADE               	incf	postinc2,f,c
  2968  001398  0E00               	movlw	0
  2969  00139A  22DD               	addwfc	postdec2,f,c
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2972  00139C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2973  0013A0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2974  0013A4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2975  0013A8  0E02               	movlw	2
  2976  0013AA  26DE               	addwf	postinc2,f,c
  2977  0013AC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2978  0013B0  0E00               	movlw	0
  2979  0013B2  22DD               	addwfc	postdec2,f,c
  2980  0013B4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2981  0013B8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2982  0013BC  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2983  0013C0  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2984  0013C4  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2985  0013C8  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2986  0013CC  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2987  0013CE  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2988  0013D0  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2989  0013D2  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2990  0013D4  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2991  0013D6  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2992  0013D8  EF56  F009         	goto	l3000
  2993  0013DC                     l3020:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1258:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  2996  0013DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2997  0013E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2998  0013E4  CFDE F001          	movff	postinc2,strncmp@_l
  2999  0013E8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3000  0013EC  0E48               	movlw	low STR_70
  3001  0013EE  6E03               	movwf	strncmp@_r^0,c
  3002  0013F0  0E06               	movlw	high STR_70
  3003  0013F2  6E04               	movwf	(strncmp@_r+1)^0,c
  3004  0013F4  0E00               	movlw	0
  3005  0013F6  6E06               	movwf	(strncmp@n+1)^0,c
  3006  0013F8  0E02               	movlw	2
  3007  0013FA  6E05               	movwf	strncmp@n^0,c
  3008  0013FC  EC1D  F015         	call	_strncmp	;wreg free
  3009  001400  5001               	movf	?_strncmp^0,w,c
  3010  001402  1002               	iorwf	(?_strncmp+1)^0,w,c
  3011  001404  A4D8               	btfss	status,2,c
  3012  001406  EF07  F00A         	goto	u3321
  3013  00140A  EF09  F00A         	goto	u3320
  3014  00140E                     u3321:
  3015  00140E  EF31  F00A         	goto	l3028
  3016  001412                     u3320:
  3017  001412                     
  3018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1260:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  3019  001412  0E02               	movlw	2
  3020  001414  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3021  001418  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3022  00141C  26DE               	addwf	postinc2,f,c
  3023  00141E  0E00               	movlw	0
  3024  001420  22DD               	addwfc	postdec2,f,c
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1261:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3027  001422  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3028  001426  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3029  00142A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3030  00142E  0E02               	movlw	2
  3031  001430  26DE               	addwf	postinc2,f,c
  3032  001432  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3033  001436  0E00               	movlw	0
  3034  001438  22DD               	addwfc	postdec2,f,c
  3035  00143A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3036  00143E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3037  001442  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3038  001446  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3039  00144A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3040  00144E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3041  001452  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3042  001454  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3043  001456  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3044  001458  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3045  00145A  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3046  00145C  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3047  00145E  EF56  F009         	goto	l3000
  3048  001462                     l3028:
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1271:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  3051  001462  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3052  001466  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3053  00146A  CFDE F001          	movff	postinc2,strncmp@_l
  3054  00146E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3055  001472  0E35               	movlw	low STR_75
  3056  001474  6E03               	movwf	strncmp@_r^0,c
  3057  001476  0E06               	movlw	high STR_75
  3058  001478  6E04               	movwf	(strncmp@_r+1)^0,c
  3059  00147A  0E00               	movlw	0
  3060  00147C  6E06               	movwf	(strncmp@n+1)^0,c
  3061  00147E  0E03               	movlw	3
  3062  001480  6E05               	movwf	strncmp@n^0,c
  3063  001482  EC1D  F015         	call	_strncmp	;wreg free
  3064  001486  5001               	movf	?_strncmp^0,w,c
  3065  001488  1002               	iorwf	(?_strncmp+1)^0,w,c
  3066  00148A  B4D8               	btfsc	status,2,c
  3067  00148C  EF4A  F00A         	goto	u3331
  3068  001490  EF4C  F00A         	goto	u3330
  3069  001494                     u3331:
  3070  001494  EF67  F00A         	goto	l3032
  3071  001498                     u3330:
  3072  001498  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3073  00149C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3074  0014A0  CFDE F001          	movff	postinc2,strncmp@_l
  3075  0014A4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3076  0014A8  0E1D               	movlw	low STR_79
  3077  0014AA  6E03               	movwf	strncmp@_r^0,c
  3078  0014AC  0E06               	movlw	high STR_79
  3079  0014AE  6E04               	movwf	(strncmp@_r+1)^0,c
  3080  0014B0  0E00               	movlw	0
  3081  0014B2  6E06               	movwf	(strncmp@n+1)^0,c
  3082  0014B4  0E03               	movlw	3
  3083  0014B6  6E05               	movwf	strncmp@n^0,c
  3084  0014B8  EC1D  F015         	call	_strncmp	;wreg free
  3085  0014BC  5001               	movf	?_strncmp^0,w,c
  3086  0014BE  1002               	iorwf	(?_strncmp+1)^0,w,c
  3087  0014C0  A4D8               	btfss	status,2,c
  3088  0014C2  EF65  F00A         	goto	u3341
  3089  0014C6  EF67  F00A         	goto	u3340
  3090  0014CA                     u3341:
  3091  0014CA  EFBB  F00A         	goto	l3042
  3092  0014CE                     u3340:
  3093  0014CE                     l3032:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1272: ;C:\Program
      +                           Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1274:             c = (*fmt)
      +                          [2];
  3096  0014CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3097  0014D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3098  0014D6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3099  0014DA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3100  0014DE  0E02               	movlw	2
  3101  0014E0  2649               	addwf	??_vfpfcnvrt^0,f,c
  3102  0014E2  0E00               	movlw	0
  3103  0014E4  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3104  0014E6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3105  0014EA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3106  0014EE                     	if	0	;tblptru may be non-zero
  3107  0014EE                     	endif
  3108  0014EE                     	if	0	;tblptru may be non-zero
  3109  0014EE                     	endif
  3110  0014EE  0008               	tblrd		*
  3111  0014F0  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3112  0014F4                     
  3113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1275:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  3114  0014F4  0E03               	movlw	3
  3115  0014F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3116  0014FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3117  0014FE  26DE               	addwf	postinc2,f,c
  3118  001500  0E00               	movlw	0
  3119  001502  22DD               	addwfc	postdec2,f,c
  3120  001504                     
  3121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1276:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3122  001504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3123  001508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3124  00150C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3125  001510  0E02               	movlw	2
  3126  001512  26DE               	addwf	postinc2,f,c
  3127  001514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3128  001518  0E00               	movlw	0
  3129  00151A  22DD               	addwfc	postdec2,f,c
  3130  00151C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3131  001520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3132  001524  50DF               	movf	indf2,w,c
  3133  001526  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3134  001528  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3135  00152A  6E60               	movwf	vfpfcnvrt@llu^0,c
  3136  00152C  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3137  00152E  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3138  001530  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3139  001532  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3140  001534  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3141  001536  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3142  001538  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3143  00153A                     l3038:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1278:            
      +                           return xtoa(fp, llu, c);
  3146  00153A  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3147  00153E  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3148  001542  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3149  001546  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3150  00154A  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3151  00154E  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3152  001552  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3153  001556  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3154  00155A  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3155  00155E  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3156  001562  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  3157  001566  ECB2  F00D         	call	_xtoa	;wreg free
  3158  00156A  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3159  00156E  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3160  001572  EF40  F00C         	goto	l1024
  3161  001576                     l3042:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1284:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  3164  001576  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3165  00157A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3166  00157E  CFDE F001          	movff	postinc2,strncmp@_l
  3167  001582  CFDD F002          	movff	postdec2,strncmp@_l+1
  3168  001586  0E36               	movlw	low (STR_75+1)
  3169  001588  6E03               	movwf	strncmp@_r^0,c
  3170  00158A  0E06               	movlw	high (STR_75+1)
  3171  00158C  6E04               	movwf	(strncmp@_r+1)^0,c
  3172  00158E  0E00               	movlw	0
  3173  001590  6E06               	movwf	(strncmp@n+1)^0,c
  3174  001592  0E02               	movlw	2
  3175  001594  6E05               	movwf	strncmp@n^0,c
  3176  001596  EC1D  F015         	call	_strncmp	;wreg free
  3177  00159A  5001               	movf	?_strncmp^0,w,c
  3178  00159C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3179  00159E  B4D8               	btfsc	status,2,c
  3180  0015A0  EFD4  F00A         	goto	u3351
  3181  0015A4  EFD6  F00A         	goto	u3350
  3182  0015A8                     u3351:
  3183  0015A8  EFF1  F00A         	goto	l3046
  3184  0015AC                     u3350:
  3185  0015AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3186  0015B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3187  0015B4  CFDE F001          	movff	postinc2,strncmp@_l
  3188  0015B8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3189  0015BC  0E1E               	movlw	low (STR_79+1)
  3190  0015BE  6E03               	movwf	strncmp@_r^0,c
  3191  0015C0  0E06               	movlw	high (STR_79+1)
  3192  0015C2  6E04               	movwf	(strncmp@_r+1)^0,c
  3193  0015C4  0E00               	movlw	0
  3194  0015C6  6E06               	movwf	(strncmp@n+1)^0,c
  3195  0015C8  0E02               	movlw	2
  3196  0015CA  6E05               	movwf	strncmp@n^0,c
  3197  0015CC  EC1D  F015         	call	_strncmp	;wreg free
  3198  0015D0  5001               	movf	?_strncmp^0,w,c
  3199  0015D2  1002               	iorwf	(?_strncmp+1)^0,w,c
  3200  0015D4  A4D8               	btfss	status,2,c
  3201  0015D6  EFEF  F00A         	goto	u3361
  3202  0015DA  EFF1  F00A         	goto	u3360
  3203  0015DE                     u3361:
  3204  0015DE  EF2C  F00B         	goto	l3056
  3205  0015E2                     u3360:
  3206  0015E2                     l3046:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1285: ;C:\Program
      +                           Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1287:             c = (*fmt)
      +                          [1];
  3209  0015E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3210  0015E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3211  0015EA  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3212  0015EE  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3213  0015F2  0E01               	movlw	1
  3214  0015F4  2649               	addwf	??_vfpfcnvrt^0,f,c
  3215  0015F6  0E00               	movlw	0
  3216  0015F8  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3217  0015FA  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3218  0015FE  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3219  001602                     	if	0	;tblptru may be non-zero
  3220  001602                     	endif
  3221  001602                     	if	0	;tblptru may be non-zero
  3222  001602                     	endif
  3223  001602  0008               	tblrd		*
  3224  001604  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3225  001608                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1288:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  3227  001608  0E02               	movlw	2
  3228  00160A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229  00160E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  001612  26DE               	addwf	postinc2,f,c
  3231  001614  0E00               	movlw	0
  3232  001616  22DD               	addwfc	postdec2,f,c
  3233  001618                     
  3234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1289:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3235  001618  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3236  00161C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3237  001620  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3238  001624  0E02               	movlw	2
  3239  001626  26DE               	addwf	postinc2,f,c
  3240  001628  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3241  00162C  0E00               	movlw	0
  3242  00162E  22DD               	addwfc	postdec2,f,c
  3243  001630  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3244  001634  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3245  001638  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3246  00163C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3247  001640  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3248  001644  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3249  001648  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3250  00164A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3251  00164C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3252  00164E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3253  001650  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3254  001652  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3255  001654  EF9D  F00A         	goto	l3038
  3256  001658                     l3056:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3259  001658  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3260  00165C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3261  001660  CFDE FFF6          	movff	postinc2,tblptrl
  3262  001664  CFDD FFF7          	movff	postdec2,tblptrh
  3263  001668                     	if	0	;tblptru may be non-zero
  3264  001668                     	endif
  3265  001668                     	if	0	;tblptru may be non-zero
  3266  001668                     	endif
  3267  001668  0008               	tblrd		*
  3268  00166A  50F5               	movf	tablat,w,c
  3269  00166C  0A78               	xorlw	120
  3270  00166E  B4D8               	btfsc	status,2,c
  3271  001670  EF3C  F00B         	goto	u3371
  3272  001674  EF3E  F00B         	goto	u3370
  3273  001678                     u3371:
  3274  001678  EF50  F00B         	goto	l3060
  3275  00167C                     u3370:
  3276  00167C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3277  001680  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3278  001684  CFDE FFF6          	movff	postinc2,tblptrl
  3279  001688  CFDD FFF7          	movff	postdec2,tblptrh
  3280  00168C                     	if	0	;tblptru may be non-zero
  3281  00168C                     	endif
  3282  00168C                     	if	0	;tblptru may be non-zero
  3283  00168C                     	endif
  3284  00168C  0008               	tblrd		*
  3285  00168E  50F5               	movf	tablat,w,c
  3286  001690  0A58               	xorlw	88
  3287  001692  A4D8               	btfss	status,2,c
  3288  001694  EF4E  F00B         	goto	u3381
  3289  001698  EF50  F00B         	goto	u3380
  3290  00169C                     u3381:
  3291  00169C  EF82  F00B         	goto	l3070
  3292  0016A0                     u3380:
  3293  0016A0                     l3060:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3296  0016A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3297  0016A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3298  0016A8  CFDE FFF6          	movff	postinc2,tblptrl
  3299  0016AC  CFDD FFF7          	movff	postdec2,tblptrh
  3300  0016B0                     	if	0	;tblptru may be non-zero
  3301  0016B0                     	endif
  3302  0016B0                     	if	0	;tblptru may be non-zero
  3303  0016B0                     	endif
  3304  0016B0  0008               	tblrd		*
  3305  0016B2  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3306  0016B6                     
  3307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3308  0016B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3309  0016BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3310  0016BE  2ADE               	incf	postinc2,f,c
  3311  0016C0  0E00               	movlw	0
  3312  0016C2  22DD               	addwfc	postdec2,f,c
  3313  0016C4                     
  3314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3315  0016C4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3316  0016C8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3317  0016CC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3318  0016D0  0E02               	movlw	2
  3319  0016D2  26DE               	addwf	postinc2,f,c
  3320  0016D4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3321  0016D8  0E00               	movlw	0
  3322  0016DA  22DD               	addwfc	postdec2,f,c
  3323  0016DC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3324  0016E0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3325  0016E4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3326  0016E8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3327  0016EC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3328  0016F0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3329  0016F4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3330  0016F6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3331  0016F8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3332  0016FA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3333  0016FC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3334  0016FE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3335  001700  EF9D  F00A         	goto	l3038
  3336  001704                     l3070:
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1359:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  3339  001704  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340  001708  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341  00170C  CFDE F001          	movff	postinc2,strncmp@_l
  3342  001710  CFDD F002          	movff	postdec2,strncmp@_l+1
  3343  001714  0E4B               	movlw	low STR_93
  3344  001716  6E03               	movwf	strncmp@_r^0,c
  3345  001718  0E06               	movlw	high STR_93
  3346  00171A  6E04               	movwf	(strncmp@_r+1)^0,c
  3347  00171C  0E00               	movlw	0
  3348  00171E  6E06               	movwf	(strncmp@n+1)^0,c
  3349  001720  0E02               	movlw	2
  3350  001722  6E05               	movwf	strncmp@n^0,c
  3351  001724  EC1D  F015         	call	_strncmp	;wreg free
  3352  001728  5001               	movf	?_strncmp^0,w,c
  3353  00172A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3354  00172C  B4D8               	btfsc	status,2,c
  3355  00172E  EF9B  F00B         	goto	u3391
  3356  001732  EF9D  F00B         	goto	u3390
  3357  001736                     u3391:
  3358  001736  EFB8  F00B         	goto	l3074
  3359  00173A                     u3390:
  3360  00173A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3361  00173E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3362  001742  CFDE F001          	movff	postinc2,strncmp@_l
  3363  001746  CFDD F002          	movff	postdec2,strncmp@_l+1
  3364  00174A  0E39               	movlw	low STR_97
  3365  00174C  6E03               	movwf	strncmp@_r^0,c
  3366  00174E  0E06               	movlw	high STR_97
  3367  001750  6E04               	movwf	(strncmp@_r+1)^0,c
  3368  001752  0E00               	movlw	0
  3369  001754  6E06               	movwf	(strncmp@n+1)^0,c
  3370  001756  0E02               	movlw	2
  3371  001758  6E05               	movwf	strncmp@n^0,c
  3372  00175A  EC1D  F015         	call	_strncmp	;wreg free
  3373  00175E  5001               	movf	?_strncmp^0,w,c
  3374  001760  1002               	iorwf	(?_strncmp+1)^0,w,c
  3375  001762  A4D8               	btfss	status,2,c
  3376  001764  EFB6  F00B         	goto	u3401
  3377  001768  EFB8  F00B         	goto	u3400
  3378  00176C                     u3401:
  3379  00176C  EFF3  F00B         	goto	l3084
  3380  001770                     u3400:
  3381  001770                     l3074:
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1360: ;C:\Program
      +                           Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1362:             c = (*fmt)
      +                          [1];
  3384  001770  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3385  001774  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3386  001778  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3387  00177C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3388  001780  0E01               	movlw	1
  3389  001782  2649               	addwf	??_vfpfcnvrt^0,f,c
  3390  001784  0E00               	movlw	0
  3391  001786  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3392  001788  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3393  00178C  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3394  001790                     	if	0	;tblptru may be non-zero
  3395  001790                     	endif
  3396  001790                     	if	0	;tblptru may be non-zero
  3397  001790                     	endif
  3398  001790  0008               	tblrd		*
  3399  001792  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3400  001796                     
  3401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1363:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  3402  001796  0E02               	movlw	2
  3403  001798  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3404  00179C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3405  0017A0  26DE               	addwf	postinc2,f,c
  3406  0017A2  0E00               	movlw	0
  3407  0017A4  22DD               	addwfc	postdec2,f,c
  3408  0017A6                     
  3409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1364:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3410  0017A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3411  0017AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3412  0017AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3413  0017B2  0E02               	movlw	2
  3414  0017B4  26DE               	addwf	postinc2,f,c
  3415  0017B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3416  0017BA  0E00               	movlw	0
  3417  0017BC  22DD               	addwfc	postdec2,f,c
  3418  0017BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3419  0017C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3420  0017C6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3421  0017CA  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3422  0017CE  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3423  0017D2  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3424  0017D6  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3425  0017D8  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3426  0017DA  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3427  0017DC  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3428  0017DE  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3429  0017E0  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3430  0017E2  EF9D  F00A         	goto	l3038
  3431  0017E6                     l3084:
  3432                           
  3433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3434  0017E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3435  0017EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3436  0017EE  CFDE FFF6          	movff	postinc2,tblptrl
  3437  0017F2  CFDD FFF7          	movff	postdec2,tblptrh
  3438  0017F6                     	if	0	;tblptru may be non-zero
  3439  0017F6                     	endif
  3440  0017F6                     	if	0	;tblptru may be non-zero
  3441  0017F6                     	endif
  3442  0017F6  0008               	tblrd		*
  3443  0017F8  50F5               	movf	tablat,w,c
  3444  0017FA  0A25               	xorlw	37
  3445  0017FC  A4D8               	btfss	status,2,c
  3446  0017FE  EF03  F00C         	goto	u3411
  3447  001802  EF05  F00C         	goto	u3410
  3448  001806                     u3411:
  3449  001806  EF1C  F00C         	goto	l3094
  3450  00180A                     u3410:
  3451  00180A                     
  3452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3453  00180A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3454  00180E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3455  001812  2ADE               	incf	postinc2,f,c
  3456  001814  0E00               	movlw	0
  3457  001816  22DD               	addwfc	postdec2,f,c
  3458  001818                     
  3459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3460  001818  0E00               	movlw	0
  3461  00181A  6E02               	movwf	(fputc@c+1)^0,c
  3462  00181C  0E25               	movlw	37
  3463  00181E  6E01               	movwf	fputc@c^0,c
  3464  001820  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3465  001824  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3466  001828  EC60  F016         	call	_fputc	;wreg free
  3467  00182C                     l3090:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3470  00182C  0E00               	movlw	0
  3471  00182E  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  3472  001830  0E01               	movlw	1
  3473  001832  6E43               	movwf	?_vfpfcnvrt^0,c
  3474  001834  EF40  F00C         	goto	l1024
  3475  001838                     l3094:
  3476                           
  3477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3478  001838  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3479  00183C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3480  001840  2ADE               	incf	postinc2,f,c
  3481  001842  0E00               	movlw	0
  3482  001844  22DD               	addwfc	postdec2,f,c
  3483  001846  EFC7  F007         	goto	l2946
  3484  00184A                     l3100:
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3487  00184A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3488  00184E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3489  001852  CFDE FFF6          	movff	postinc2,tblptrl
  3490  001856  CFDD FFF7          	movff	postdec2,tblptrh
  3491  00185A                     	if	0	;tblptru may be non-zero
  3492  00185A                     	endif
  3493  00185A                     	if	0	;tblptru may be non-zero
  3494  00185A                     	endif
  3495  00185A  0008               	tblrd		*
  3496  00185C  50F5               	movf	tablat,w,c
  3497  00185E  6E01               	movwf	fputc@c^0,c
  3498  001860  6A02               	clrf	(fputc@c+1)^0,c
  3499  001862  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3500  001866  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3501  00186A  EC60  F016         	call	_fputc	;wreg free
  3502  00186E                     
  3503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3504  00186E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3505  001872  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3506  001876  2ADE               	incf	postinc2,f,c
  3507  001878  0E00               	movlw	0
  3508  00187A  22DD               	addwfc	postdec2,f,c
  3509  00187C  EF16  F00C         	goto	l3090
  3510  001880                     l1024:
  3511  001880  0012               	return		;funcret
  3512  001882                     __end_of_vfpfcnvrt:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _xtoa *****************
  3516 ;; Defined at:
  3517 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3520 ;;		 -> vsnprintf@f(6), 
  3521 ;;  d               8   29[COMRAM] unsigned long long 
  3522 ;;  x               1   37[COMRAM] unsigned char 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  n               8   54[COMRAM] unsigned long long 
  3525 ;;  c               2   64[COMRAM] int 
  3526 ;;  i               2   62[COMRAM] int 
  3527 ;;  w               2   52[COMRAM] int 
  3528 ;;  p               2   50[COMRAM] int 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  2   27[COMRAM] int 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3538 ;;      Params:        11       0       0       0       0       0       0
  3539 ;;      Locals:        20       0       0       0       0       0       0
  3540 ;;      Temps:          8       0       0       0       0       0       0
  3541 ;;      Totals:        39       0       0       0       0       0       0
  3542 ;;Total ram usage:       39 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    4
  3545 ;; This function calls:
  3546 ;;		_isalpha
  3547 ;;		_isupper
  3548 ;;		_pad
  3549 ;;		_toupper
  3550 ;; This function is called by:
  3551 ;;		_vfpfcnvrt
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           	psect	text5
  3556  001B64                     __ptext5:
  3557                           	callstack 0
  3558  001B64                     _xtoa:
  3559                           	callstack 22
  3560  001B64                     
  3561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3562  001B64  0100               	movlb	0	; () banked
  3563  001B66  BF91               	btfsc	(_prec+1)& (0+255),7,b
  3564  001B68  EFB8  F00D         	goto	u2681
  3565  001B6C  EFBA  F00D         	goto	u2680
  3566  001B70                     u2681:
  3567  001B70  EFBB  F00D         	goto	l2658
  3568  001B74                     u2680:
  3569  001B74                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3572  001B74  9392               	bcf	_flags& (0+255),1,b
  3573  001B76                     l2658:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3577  001B76  BF91               	btfsc	(_prec+1)& (0+255),7,b
  3578  001B78  EFC8  F00D         	goto	u2690
  3579  001B7C  5191               	movf	(_prec+1)& (0+255),w,b
  3580  001B7E  E106               	bnz	u2691
  3581  001B80  0590               	decf	_prec& (0+255),w,b
  3582  001B82  B0D8               	btfsc	status,0,c
  3583  001B84  EFC6  F00D         	goto	u2691
  3584  001B88  EFC8  F00D         	goto	u2690
  3585  001B8C                     u2691:
  3586  001B8C  EFCE  F00D         	goto	l962
  3587  001B90                     u2690:
  3588  001B90                     
  3589                           ; BSR set to: 0
  3590  001B90  0E00               	movlw	0
  3591  001B92  6E34               	movwf	(xtoa@p+1)^0,c
  3592  001B94  0E01               	movlw	1
  3593  001B96  6E33               	movwf	xtoa@p^0,c
  3594  001B98  EFD2  F00D         	goto	l964
  3595  001B9C                     l962:
  3596                           
  3597                           ; BSR set to: 0
  3598  001B9C  C090  F033         	movff	_prec,xtoa@p
  3599  001BA0  C091  F034         	movff	_prec+1,xtoa@p+1
  3600  001BA4                     l964:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3604  001BA4  C08E  F035         	movff	_width,xtoa@w
  3605  001BA8  C08F  F036         	movff	_width+1,xtoa@w+1
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3608  001BAC  A992               	btfss	_flags& (0+255),4,b
  3609  001BAE  EFDB  F00D         	goto	u2701
  3610  001BB2  EFDD  F00D         	goto	u2700
  3611  001BB6                     u2701:
  3612  001BB6  EFE1  F00D         	goto	l2664
  3613  001BBA                     u2700:
  3614  001BBA                     
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3617  001BBA  0EFE               	movlw	254
  3618  001BBC  2635               	addwf	xtoa@w^0,f,c
  3619  001BBE  0EFF               	movlw	255
  3620  001BC0  2236               	addwfc	(xtoa@w+1)^0,f,c
  3621  001BC2                     l2664:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3625  001BC2  C01E  F037         	movff	xtoa@d,xtoa@n
  3626  001BC6  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3627  001BCA  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3628  001BCE  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3629  001BD2  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3630  001BD6  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3631  001BDA  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3632  001BDE  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3633  001BE2                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3636  001BE2  0E00               	movlw	0
  3637  001BE4  6E40               	movwf	(xtoa@i+1)^0,c
  3638  001BE6  0E1F               	movlw	31
  3639  001BE8  6E3F               	movwf	xtoa@i^0,c
  3640  001BEA                     
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3643  001BEA  0E00               	movlw	0
  3644  001BEC  6FB7               	movwf	(_dbuf+31)& (0+255),b
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3647  001BEE  EFAC  F00E         	goto	l2700
  3648  001BF2                     l2670:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  3651  001BF2  063F               	decf	xtoa@i^0,f,c
  3652  001BF4  A0D8               	btfss	status,0,c
  3653  001BF6  0640               	decf	(xtoa@i+1)^0,f,c
  3654  001BF8                     
  3655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3656  001BF8  0E0F               	movlw	15
  3657  001BFA  1437               	andwf	xtoa@n^0,w,c
  3658  001BFC  6E41               	movwf	xtoa@c^0,c
  3659  001BFE  6A42               	clrf	(xtoa@c+1)^0,c
  3660  001C00                     
  3661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3662  001C00  BE42               	btfsc	(xtoa@c+1)^0,7,c
  3663  001C02  EF0C  F00E         	goto	u2711
  3664  001C06  5042               	movf	(xtoa@c+1)^0,w,c
  3665  001C08  E109               	bnz	u2710
  3666  001C0A  0E0A               	movlw	10
  3667  001C0C  5C41               	subwf	xtoa@c^0,w,c
  3668  001C0E  A0D8               	btfss	status,0,c
  3669  001C10  EF0C  F00E         	goto	u2711
  3670  001C14  EF0E  F00E         	goto	u2710
  3671  001C18                     u2711:
  3672  001C18  EF16  F00E         	goto	l2678
  3673  001C1C                     u2710:
  3674  001C1C  0E57               	movlw	87
  3675  001C1E  2441               	addwf	xtoa@c^0,w,c
  3676  001C20  6E41               	movwf	xtoa@c^0,c
  3677  001C22  0E00               	movlw	0
  3678  001C24  2042               	addwfc	(xtoa@c+1)^0,w,c
  3679  001C26  6E42               	movwf	(xtoa@c+1)^0,c
  3680  001C28  EF1C  F00E         	goto	l971
  3681  001C2C                     l2678:
  3682  001C2C  0E30               	movlw	48
  3683  001C2E  2441               	addwf	xtoa@c^0,w,c
  3684  001C30  6E41               	movwf	xtoa@c^0,c
  3685  001C32  0E00               	movlw	0
  3686  001C34  2042               	addwfc	(xtoa@c+1)^0,w,c
  3687  001C36  6E42               	movwf	(xtoa@c+1)^0,c
  3688  001C38                     l971:
  3689  001C38  0EBF               	movlw	191
  3690  001C3A  6E27               	movwf	??_xtoa^0,c
  3691  001C3C  0EFF               	movlw	255
  3692  001C3E  6E28               	movwf	(??_xtoa+1)^0,c
  3693  001C40  5026               	movf	xtoa@x^0,w,c
  3694  001C42  6E29               	movwf	(??_xtoa+2)^0,c
  3695  001C44  6A2A               	clrf	(??_xtoa+3)^0,c
  3696  001C46  5027               	movf	??_xtoa^0,w,c
  3697  001C48  2629               	addwf	(??_xtoa+2)^0,f,c
  3698  001C4A  5028               	movf	(??_xtoa+1)^0,w,c
  3699  001C4C  222A               	addwfc	(??_xtoa+3)^0,f,c
  3700  001C4E  502A               	movf	(??_xtoa+3)^0,w,c
  3701  001C50  E10A               	bnz	u2720
  3702  001C52  0E1A               	movlw	26
  3703  001C54  5C29               	subwf	(??_xtoa+2)^0,w,c
  3704  001C56  A0D8               	btfss	status,0,c
  3705  001C58  EF30  F00E         	goto	u2721
  3706  001C5C  EF33  F00E         	goto	u2720
  3707  001C60                     u2721:
  3708  001C60  0E01               	movlw	1
  3709  001C62  EF34  F00E         	goto	u2730
  3710  001C66                     u2720:
  3711  001C66  0E00               	movlw	0
  3712  001C68                     u2730:
  3713  001C68  6E2F               	movwf	_xtoa$1163^0,c
  3714  001C6A  6A30               	clrf	(_xtoa$1163+1)^0,c
  3715  001C6C  502F               	movf	_xtoa$1163^0,w,c
  3716  001C6E  1030               	iorwf	(_xtoa$1163+1)^0,w,c
  3717  001C70  B4D8               	btfsc	status,2,c
  3718  001C72  EF3D  F00E         	goto	u2741
  3719  001C76  EF3F  F00E         	goto	u2740
  3720  001C7A                     u2741:
  3721  001C7A  EF6F  F00E         	goto	l2692
  3722  001C7E                     u2740:
  3723  001C7E  0E9F               	movlw	159
  3724  001C80  6E27               	movwf	??_xtoa^0,c
  3725  001C82  0EFF               	movlw	255
  3726  001C84  6E28               	movwf	(??_xtoa+1)^0,c
  3727  001C86  0E20               	movlw	32
  3728  001C88  1041               	iorwf	xtoa@c^0,w,c
  3729  001C8A  6E29               	movwf	(??_xtoa+2)^0,c
  3730  001C8C  0E00               	movlw	0
  3731  001C8E  1042               	iorwf	(xtoa@c+1)^0,w,c
  3732  001C90  6E2A               	movwf	(??_xtoa+3)^0,c
  3733  001C92  5027               	movf	??_xtoa^0,w,c
  3734  001C94  2629               	addwf	(??_xtoa+2)^0,f,c
  3735  001C96  5028               	movf	(??_xtoa+1)^0,w,c
  3736  001C98  222A               	addwfc	(??_xtoa+3)^0,f,c
  3737  001C9A  502A               	movf	(??_xtoa+3)^0,w,c
  3738  001C9C  E10A               	bnz	u2750
  3739  001C9E  0E1A               	movlw	26
  3740  001CA0  5C29               	subwf	(??_xtoa+2)^0,w,c
  3741  001CA2  A0D8               	btfss	status,0,c
  3742  001CA4  EF56  F00E         	goto	u2751
  3743  001CA8  EF59  F00E         	goto	u2750
  3744  001CAC                     u2751:
  3745  001CAC  0E01               	movlw	1
  3746  001CAE  EF5A  F00E         	goto	u2760
  3747  001CB2                     u2750:
  3748  001CB2  0E00               	movlw	0
  3749  001CB4                     u2760:
  3750  001CB4  6E31               	movwf	_xtoa$1164^0,c
  3751  001CB6  6A32               	clrf	(_xtoa$1164+1)^0,c
  3752  001CB8  5031               	movf	_xtoa$1164^0,w,c
  3753  001CBA  1032               	iorwf	(_xtoa$1164+1)^0,w,c
  3754  001CBC  B4D8               	btfsc	status,2,c
  3755  001CBE  EF63  F00E         	goto	u2771
  3756  001CC2  EF65  F00E         	goto	u2770
  3757  001CC6                     u2771:
  3758  001CC6  EF6F  F00E         	goto	l2692
  3759  001CCA                     u2770:
  3760  001CCA                     
  3761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3762  001CCA  C041  F007         	movff	xtoa@c,toupper@c
  3763  001CCE  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3764  001CD2  ECA8  F017         	call	_toupper	;wreg free
  3765  001CD6  C007  F041         	movff	?_toupper,xtoa@c
  3766  001CDA  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3767  001CDE                     l2692:
  3768                           
  3769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3770  001CDE  0E98               	movlw	low _dbuf
  3771  001CE0  243F               	addwf	xtoa@i^0,w,c
  3772  001CE2  6ED9               	movwf	fsr2l,c
  3773  001CE4  0E00               	movlw	high _dbuf
  3774  001CE6  2040               	addwfc	(xtoa@i+1)^0,w,c
  3775  001CE8  6EDA               	movwf	fsr2h,c
  3776  001CEA  C041  FFDF         	movff	xtoa@c,indf2
  3777  001CEE                     
  3778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  3779  001CEE  0633               	decf	xtoa@p^0,f,c
  3780  001CF0  A0D8               	btfss	status,0,c
  3781  001CF2  0634               	decf	(xtoa@p+1)^0,f,c
  3782  001CF4                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  3784  001CF4  0635               	decf	xtoa@w^0,f,c
  3785  001CF6  A0D8               	btfss	status,0,c
  3786  001CF8  0636               	decf	(xtoa@w+1)^0,f,c
  3787  001CFA                     
  3788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3789  001CFA  C037  F027         	movff	xtoa@n,??_xtoa
  3790  001CFE  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3791  001D02  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3792  001D06  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3793  001D0A  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3794  001D0E  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3795  001D12  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3796  001D16  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3797  001D1A  0E05               	movlw	5
  3798  001D1C  EF99  F00E         	goto	u2780
  3799  001D20                     u2785:
  3800  001D20  90D8               	bcf	status,0,c
  3801  001D22  322E               	rrcf	(??_xtoa+7)^0,f,c
  3802  001D24  322D               	rrcf	(??_xtoa+6)^0,f,c
  3803  001D26  322C               	rrcf	(??_xtoa+5)^0,f,c
  3804  001D28  322B               	rrcf	(??_xtoa+4)^0,f,c
  3805  001D2A  322A               	rrcf	(??_xtoa+3)^0,f,c
  3806  001D2C  3229               	rrcf	(??_xtoa+2)^0,f,c
  3807  001D2E  3228               	rrcf	(??_xtoa+1)^0,f,c
  3808  001D30  3227               	rrcf	??_xtoa^0,f,c
  3809  001D32                     u2780:
  3810  001D32  2EE8               	decfsz	wreg,f,c
  3811  001D34  EF90  F00E         	goto	u2785
  3812  001D38  C027  F037         	movff	??_xtoa,xtoa@n
  3813  001D3C  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3814  001D40  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3815  001D44  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3816  001D48  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3817  001D4C  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3818  001D50  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3819  001D54  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3820  001D58                     l2700:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3823  001D58  BE40               	btfsc	(xtoa@i+1)^0,7,c
  3824  001D5A  EFB8  F00E         	goto	u2791
  3825  001D5E  5040               	movf	(xtoa@i+1)^0,w,c
  3826  001D60  E109               	bnz	u2790
  3827  001D62  0E02               	movlw	2
  3828  001D64  5C3F               	subwf	xtoa@i^0,w,c
  3829  001D66  A0D8               	btfss	status,0,c
  3830  001D68  EFB8  F00E         	goto	u2791
  3831  001D6C  EFBA  F00E         	goto	u2790
  3832  001D70                     u2791:
  3833  001D70  EFEB  F00E         	goto	l985
  3834  001D74                     u2790:
  3835  001D74  5037               	movf	xtoa@n^0,w,c
  3836  001D76  1038               	iorwf	(xtoa@n+1)^0,w,c
  3837  001D78  1039               	iorwf	(xtoa@n+2)^0,w,c
  3838  001D7A  103A               	iorwf	(xtoa@n+3)^0,w,c
  3839  001D7C  103B               	iorwf	(xtoa@n+4)^0,w,c
  3840  001D7E  103C               	iorwf	(xtoa@n+5)^0,w,c
  3841  001D80  103D               	iorwf	(xtoa@n+6)^0,w,c
  3842  001D82  103E               	iorwf	(xtoa@n+7)^0,w,c
  3843  001D84  A4D8               	btfss	status,2,c
  3844  001D86  EFC7  F00E         	goto	u2801
  3845  001D8A  EFC9  F00E         	goto	u2800
  3846  001D8E                     u2801:
  3847  001D8E  EFF9  F00D         	goto	l2670
  3848  001D92                     u2800:
  3849  001D92  BE34               	btfsc	(xtoa@p+1)^0,7,c
  3850  001D94  EFD6  F00E         	goto	u2810
  3851  001D98  5034               	movf	(xtoa@p+1)^0,w,c
  3852  001D9A  E106               	bnz	u2811
  3853  001D9C  0433               	decf	xtoa@p^0,w,c
  3854  001D9E  B0D8               	btfsc	status,0,c
  3855  001DA0  EFD4  F00E         	goto	u2811
  3856  001DA4  EFD6  F00E         	goto	u2810
  3857  001DA8                     u2811:
  3858  001DA8  EFF9  F00D         	goto	l2670
  3859  001DAC                     u2810:
  3860  001DAC  BE36               	btfsc	(xtoa@w+1)^0,7,c
  3861  001DAE  EFE1  F00E         	goto	u2821
  3862  001DB2  5036               	movf	(xtoa@w+1)^0,w,c
  3863  001DB4  E108               	bnz	u2820
  3864  001DB6  0435               	decf	xtoa@w^0,w,c
  3865  001DB8  A0D8               	btfss	status,0,c
  3866  001DBA  EFE1  F00E         	goto	u2821
  3867  001DBE  EFE3  F00E         	goto	u2820
  3868  001DC2                     u2821:
  3869  001DC2  EFEB  F00E         	goto	l985
  3870  001DC6                     u2820:
  3871  001DC6  0100               	movlb	0	; () banked
  3872  001DC8  B392               	btfsc	_flags& (0+255),1,b
  3873  001DCA  EFE9  F00E         	goto	u2831
  3874  001DCE  EFEB  F00E         	goto	u2830
  3875  001DD2                     u2831:
  3876  001DD2  EFF9  F00D         	goto	l2670
  3877  001DD6                     u2830:
  3878  001DD6                     l985:
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3881  001DD6  0100               	movlb	0	; () banked
  3882  001DD8  A992               	btfss	_flags& (0+255),4,b
  3883  001DDA  EFF1  F00E         	goto	u2841
  3884  001DDE  EFF3  F00E         	goto	u2840
  3885  001DE2                     u2841:
  3886  001DE2  EF09  F00F         	goto	l2716
  3887  001DE6                     u2840:
  3888  001DE6                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  3891  001DE6  063F               	decf	xtoa@i^0,f,c
  3892  001DE8  A0D8               	btfss	status,0,c
  3893  001DEA  0640               	decf	(xtoa@i+1)^0,f,c
  3894  001DEC                     
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3897  001DEC  0E98               	movlw	low _dbuf
  3898  001DEE  243F               	addwf	xtoa@i^0,w,c
  3899  001DF0  6ED9               	movwf	fsr2l,c
  3900  001DF2  0E00               	movlw	high _dbuf
  3901  001DF4  2040               	addwfc	(xtoa@i+1)^0,w,c
  3902  001DF6  6EDA               	movwf	fsr2h,c
  3903  001DF8  C026  FFDF         	movff	xtoa@x,indf2
  3904  001DFC                     
  3905                           ; BSR set to: 0
  3906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  3907  001DFC  063F               	decf	xtoa@i^0,f,c
  3908  001DFE  A0D8               	btfss	status,0,c
  3909  001E00  0640               	decf	(xtoa@i+1)^0,f,c
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3912  001E02  0E98               	movlw	low _dbuf
  3913  001E04  243F               	addwf	xtoa@i^0,w,c
  3914  001E06  6ED9               	movwf	fsr2l,c
  3915  001E08  0E00               	movlw	high _dbuf
  3916  001E0A  2040               	addwfc	(xtoa@i+1)^0,w,c
  3917  001E0C  6EDA               	movwf	fsr2h,c
  3918  001E0E  0E30               	movlw	48
  3919  001E10  6EDF               	movwf	indf2,c
  3920  001E12                     l2716:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3924  001E12  C01C  F011         	movff	xtoa@fp,pad@fp
  3925  001E16  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  3926  001E1A  0E98               	movlw	low _dbuf
  3927  001E1C  243F               	addwf	xtoa@i^0,w,c
  3928  001E1E  6E13               	movwf	pad@buf^0,c
  3929  001E20  0E00               	movlw	high _dbuf
  3930  001E22  2040               	addwfc	(xtoa@i+1)^0,w,c
  3931  001E24  6E14               	movwf	(pad@buf+1)^0,c
  3932  001E26  C035  F015         	movff	xtoa@w,pad@p
  3933  001E2A  C036  F016         	movff	xtoa@w+1,pad@p+1
  3934  001E2E  ECC5  F016         	call	_pad	;wreg free
  3935  001E32  C011  F01C         	movff	?_pad,?_xtoa
  3936  001E36  C012  F01D         	movff	?_pad+1,?_xtoa+1
  3937  001E3A  0012               	return		;funcret
  3938  001E3C                     __end_of_xtoa:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _toupper *****************
  3942 ;; Defined at:
  3943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  c               2    6[COMRAM] int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  2    6[COMRAM] int 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3957 ;;      Params:         2       0       0       0       0       0       0
  3958 ;;      Locals:         2       0       0       0       0       0       0
  3959 ;;      Temps:          4       0       0       0       0       0       0
  3960 ;;      Totals:         8       0       0       0       0       0       0
  3961 ;;Total ram usage:        8 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    1
  3964 ;; This function calls:
  3965 ;;		_islower
  3966 ;; This function is called by:
  3967 ;;		_xtoa
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text6
  3972  002F50                     __ptext6:
  3973                           	callstack 0
  3974  002F50                     _toupper:
  3975                           	callstack 24
  3976  002F50  0E9F               	movlw	159
  3977  002F52  6E09               	movwf	??_toupper^0,c
  3978  002F54  0EFF               	movlw	255
  3979  002F56  6E0A               	movwf	(??_toupper+1)^0,c
  3980  002F58  C007  F00B         	movff	toupper@c,??_toupper+2
  3981  002F5C  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3982  002F60  5009               	movf	??_toupper^0,w,c
  3983  002F62  260B               	addwf	(??_toupper+2)^0,f,c
  3984  002F64  500A               	movf	(??_toupper+1)^0,w,c
  3985  002F66  220C               	addwfc	(??_toupper+3)^0,f,c
  3986  002F68  500C               	movf	(??_toupper+3)^0,w,c
  3987  002F6A  E10A               	bnz	u2150
  3988  002F6C  0E1A               	movlw	26
  3989  002F6E  5C0B               	subwf	(??_toupper+2)^0,w,c
  3990  002F70  A0D8               	btfss	status,0,c
  3991  002F72  EFBD  F017         	goto	u2151
  3992  002F76  EFC0  F017         	goto	u2150
  3993  002F7A                     u2151:
  3994  002F7A  0E01               	movlw	1
  3995  002F7C  EFC1  F017         	goto	u2160
  3996  002F80                     u2150:
  3997  002F80  0E00               	movlw	0
  3998  002F82                     u2160:
  3999  002F82  6E0D               	movwf	_toupper$1391^0,c
  4000  002F84  6A0E               	clrf	(_toupper$1391+1)^0,c
  4001  002F86  500D               	movf	_toupper$1391^0,w,c
  4002  002F88  100E               	iorwf	(_toupper$1391+1)^0,w,c
  4003  002F8A  B4D8               	btfsc	status,2,c
  4004  002F8C  EFCA  F017         	goto	u2171
  4005  002F90  EFCC  F017         	goto	u2170
  4006  002F94                     u2171:
  4007  002F94  EFD2  F017         	goto	l1178
  4008  002F98                     u2170:
  4009  002F98  0E5F               	movlw	95
  4010  002F9A  1407               	andwf	toupper@c^0,w,c
  4011  002F9C  6E07               	movwf	?_toupper^0,c
  4012  002F9E  6A08               	clrf	(?_toupper+1)^0,c
  4013  002FA0  EFD6  F017         	goto	l1183
  4014  002FA4                     l1178:
  4015  002FA4  C007  F007         	movff	toupper@c,?_toupper
  4016  002FA8  C008  F008         	movff	toupper@c+1,?_toupper+1
  4017  002FAC                     l1183:
  4018  002FAC  0012               	return		;funcret
  4019  002FAE                     __end_of_toupper:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _islower *****************
  4023 ;; Defined at:
  4024 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  c               2    0[COMRAM] int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  2    0[COMRAM] int 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4038 ;;      Params:         2       0       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0
  4040 ;;      Temps:          4       0       0       0       0       0       0
  4041 ;;      Totals:         6       0       0       0       0       0       0
  4042 ;;Total ram usage:        6 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_toupper
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text7
  4052  00319A                     __ptext7:
  4053                           	callstack 0
  4054  00319A                     _islower:
  4055                           	callstack 24
  4056  00319A  0E9F               	movlw	159
  4057  00319C  6E03               	movwf	??_islower^0,c
  4058  00319E  0EFF               	movlw	255
  4059  0031A0  6E04               	movwf	(??_islower+1)^0,c
  4060  0031A2  C001  F005         	movff	islower@c,??_islower+2
  4061  0031A6  C002  F006         	movff	islower@c+1,??_islower+3
  4062  0031AA  5003               	movf	??_islower^0,w,c
  4063  0031AC  2605               	addwf	(??_islower+2)^0,f,c
  4064  0031AE  5004               	movf	(??_islower+1)^0,w,c
  4065  0031B0  2206               	addwfc	(??_islower+3)^0,f,c
  4066  0031B2  5006               	movf	(??_islower+3)^0,w,c
  4067  0031B4  E10A               	bnz	u1840
  4068  0031B6  0E1A               	movlw	26
  4069  0031B8  5C05               	subwf	(??_islower+2)^0,w,c
  4070  0031BA  A0D8               	btfss	status,0,c
  4071  0031BC  EFE2  F018         	goto	u1841
  4072  0031C0  EFE5  F018         	goto	u1840
  4073  0031C4                     u1841:
  4074  0031C4  0E01               	movlw	1
  4075  0031C6  EFE6  F018         	goto	u1850
  4076  0031CA                     u1840:
  4077  0031CA  0E00               	movlw	0
  4078  0031CC                     u1850:
  4079  0031CC  6E01               	movwf	?_islower^0,c
  4080  0031CE  6A02               	clrf	(?_islower+1)^0,c
  4081  0031D0  0012               	return		;funcret
  4082  0031D2                     __end_of_islower:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _isupper *****************
  4086 ;; Defined at:
  4087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  c               2    0[COMRAM] int 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  2    0[COMRAM] int 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4101 ;;      Params:         2       0       0       0       0       0       0
  4102 ;;      Locals:         0       0       0       0       0       0       0
  4103 ;;      Temps:          4       0       0       0       0       0       0
  4104 ;;      Totals:         6       0       0       0       0       0       0
  4105 ;;Total ram usage:        6 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_xtoa
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text8
  4115  0031D2                     __ptext8:
  4116                           	callstack 0
  4117  0031D2                     _isupper:
  4118                           	callstack 25
  4119  0031D2  0EBF               	movlw	191
  4120  0031D4  6E03               	movwf	??_isupper^0,c
  4121  0031D6  0EFF               	movlw	255
  4122  0031D8  6E04               	movwf	(??_isupper+1)^0,c
  4123  0031DA  C001  F005         	movff	isupper@c,??_isupper+2
  4124  0031DE  C002  F006         	movff	isupper@c+1,??_isupper+3
  4125  0031E2  5003               	movf	??_isupper^0,w,c
  4126  0031E4  2605               	addwf	(??_isupper+2)^0,f,c
  4127  0031E6  5004               	movf	(??_isupper+1)^0,w,c
  4128  0031E8  2206               	addwfc	(??_isupper+3)^0,f,c
  4129  0031EA  5006               	movf	(??_isupper+3)^0,w,c
  4130  0031EC  E10A               	bnz	u2110
  4131  0031EE  0E1A               	movlw	26
  4132  0031F0  5C05               	subwf	(??_isupper+2)^0,w,c
  4133  0031F2  A0D8               	btfss	status,0,c
  4134  0031F4  EFFE  F018         	goto	u2111
  4135  0031F8  EF01  F019         	goto	u2110
  4136  0031FC                     u2111:
  4137  0031FC  0E01               	movlw	1
  4138  0031FE  EF02  F019         	goto	u2120
  4139  003202                     u2110:
  4140  003202  0E00               	movlw	0
  4141  003204                     u2120:
  4142  003204  6E01               	movwf	?_isupper^0,c
  4143  003206  6A02               	clrf	(?_isupper+1)^0,c
  4144  003208  0012               	return		;funcret
  4145  00320A                     __end_of_isupper:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function _isalpha *****************
  4149 ;; Defined at:
  4150 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  c               2    0[COMRAM] int 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  2    0[COMRAM] int 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4164 ;;      Params:         2       0       0       0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0
  4166 ;;      Temps:          4       0       0       0       0       0       0
  4167 ;;      Totals:         6       0       0       0       0       0       0
  4168 ;;Total ram usage:        6 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_xtoa
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text9
  4178  003124                     __ptext9:
  4179                           	callstack 0
  4180  003124                     _isalpha:
  4181                           	callstack 25
  4182  003124  0E9F               	movlw	159
  4183  003126  6E03               	movwf	??_isalpha^0,c
  4184  003128  0EFF               	movlw	255
  4185  00312A  6E04               	movwf	(??_isalpha+1)^0,c
  4186  00312C  0E20               	movlw	32
  4187  00312E  1001               	iorwf	isalpha@c^0,w,c
  4188  003130  6E05               	movwf	(??_isalpha+2)^0,c
  4189  003132  0E00               	movlw	0
  4190  003134  1002               	iorwf	(isalpha@c+1)^0,w,c
  4191  003136  6E06               	movwf	(??_isalpha+3)^0,c
  4192  003138  5003               	movf	??_isalpha^0,w,c
  4193  00313A  2605               	addwf	(??_isalpha+2)^0,f,c
  4194  00313C  5004               	movf	(??_isalpha+1)^0,w,c
  4195  00313E  2206               	addwfc	(??_isalpha+3)^0,f,c
  4196  003140  5006               	movf	(??_isalpha+3)^0,w,c
  4197  003142  E10A               	bnz	u2130
  4198  003144  0E1A               	movlw	26
  4199  003146  5C05               	subwf	(??_isalpha+2)^0,w,c
  4200  003148  A0D8               	btfss	status,0,c
  4201  00314A  EFA9  F018         	goto	u2131
  4202  00314E  EFAC  F018         	goto	u2130
  4203  003152                     u2131:
  4204  003152  0E01               	movlw	1
  4205  003154  EFAD  F018         	goto	u2140
  4206  003158                     u2130:
  4207  003158  0E00               	movlw	0
  4208  00315A                     u2140:
  4209  00315A  6E01               	movwf	?_isalpha^0,c
  4210  00315C  6A02               	clrf	(?_isalpha+1)^0,c
  4211  00315E  0012               	return		;funcret
  4212  003160                     __end_of_isalpha:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _utoa *****************
  4216 ;; Defined at:
  4217 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4220 ;;		 -> vsnprintf@f(6), 
  4221 ;;  d               8   29[COMRAM] unsigned long long 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  n               8   49[COMRAM] unsigned long long 
  4224 ;;  i               2   57[COMRAM] int 
  4225 ;;  w               2   47[COMRAM] int 
  4226 ;;  p               2   45[COMRAM] int 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  2   27[COMRAM] int 
  4229 ;; Registers used:
  4230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4236 ;;      Params:        10       0       0       0       0       0       0
  4237 ;;      Locals:        14       0       0       0       0       0       0
  4238 ;;      Temps:          8       0       0       0       0       0       0
  4239 ;;      Totals:        32       0       0       0       0       0       0
  4240 ;;Total ram usage:       32 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    4
  4243 ;; This function calls:
  4244 ;;		___lodiv
  4245 ;;		___lomod
  4246 ;;		_pad
  4247 ;; This function is called by:
  4248 ;;		_vfpfcnvrt
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text10
  4253  001E3C                     __ptext10:
  4254                           	callstack 0
  4255  001E3C                     _utoa:
  4256                           	callstack 22
  4257  001E3C                     
  4258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4259  001E3C  0100               	movlb	0	; () banked
  4260  001E3E  BF91               	btfsc	(_prec+1)& (0+255),7,b
  4261  001E40  EF24  F00F         	goto	u2611
  4262  001E44  EF26  F00F         	goto	u2610
  4263  001E48                     u2611:
  4264  001E48  EF27  F00F         	goto	l2622
  4265  001E4C                     u2610:
  4266  001E4C                     
  4267                           ; BSR set to: 0
  4268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4269  001E4C  9392               	bcf	_flags& (0+255),1,b
  4270  001E4E                     l2622:
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4274  001E4E  BF91               	btfsc	(_prec+1)& (0+255),7,b
  4275  001E50  EF34  F00F         	goto	u2620
  4276  001E54  5191               	movf	(_prec+1)& (0+255),w,b
  4277  001E56  E106               	bnz	u2621
  4278  001E58  0590               	decf	_prec& (0+255),w,b
  4279  001E5A  B0D8               	btfsc	status,0,c
  4280  001E5C  EF32  F00F         	goto	u2621
  4281  001E60  EF34  F00F         	goto	u2620
  4282  001E64                     u2621:
  4283  001E64  EF3A  F00F         	goto	l947
  4284  001E68                     u2620:
  4285  001E68                     
  4286                           ; BSR set to: 0
  4287  001E68  0E00               	movlw	0
  4288  001E6A  6E2F               	movwf	(utoa@p+1)^0,c
  4289  001E6C  0E01               	movlw	1
  4290  001E6E  6E2E               	movwf	utoa@p^0,c
  4291  001E70  EF3E  F00F         	goto	l949
  4292  001E74                     l947:
  4293                           
  4294                           ; BSR set to: 0
  4295  001E74  C090  F02E         	movff	_prec,utoa@p
  4296  001E78  C091  F02F         	movff	_prec+1,utoa@p+1
  4297  001E7C                     l949:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4301  001E7C  C08E  F030         	movff	_width,utoa@w
  4302  001E80  C08F  F031         	movff	_width+1,utoa@w+1
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4305  001E84  C01E  F032         	movff	utoa@d,utoa@n
  4306  001E88  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4307  001E8C  C020  F034         	movff	utoa@d+2,utoa@n+2
  4308  001E90  C021  F035         	movff	utoa@d+3,utoa@n+3
  4309  001E94  C022  F036         	movff	utoa@d+4,utoa@n+4
  4310  001E98  C023  F037         	movff	utoa@d+5,utoa@n+5
  4311  001E9C  C024  F038         	movff	utoa@d+6,utoa@n+6
  4312  001EA0  C025  F039         	movff	utoa@d+7,utoa@n+7
  4313  001EA4                     
  4314                           ; BSR set to: 0
  4315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4316  001EA4  0E00               	movlw	0
  4317  001EA6  6E3B               	movwf	(utoa@i+1)^0,c
  4318  001EA8  0E1F               	movlw	31
  4319  001EAA  6E3A               	movwf	utoa@i^0,c
  4320  001EAC                     
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4323  001EAC  0E00               	movlw	0
  4324  001EAE  6FB7               	movwf	(_dbuf+31)& (0+255),b
  4325                           
  4326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4327  001EB0  EFD0  F00F         	goto	l2640
  4328  001EB4                     l2630:
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 632:         --i;
  4331  001EB4  063A               	decf	utoa@i^0,f,c
  4332  001EB6  A0D8               	btfss	status,0,c
  4333  001EB8  063B               	decf	(utoa@i+1)^0,f,c
  4334  001EBA                     
  4335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4336  001EBA  0E98               	movlw	low _dbuf
  4337  001EBC  243A               	addwf	utoa@i^0,w,c
  4338  001EBE  6ED9               	movwf	fsr2l,c
  4339  001EC0  0E00               	movlw	high _dbuf
  4340  001EC2  203B               	addwfc	(utoa@i+1)^0,w,c
  4341  001EC4  6EDA               	movwf	fsr2h,c
  4342  001EC6  C032  F001         	movff	utoa@n,___lomod@dividend
  4343  001ECA  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4344  001ECE  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4345  001ED2  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4346  001ED6  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4347  001EDA  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4348  001EDE  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4349  001EE2  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4350  001EE6  0E0A               	movlw	10
  4351  001EE8  6E09               	movwf	___lomod@divisor^0,c
  4352  001EEA  0E00               	movlw	0
  4353  001EEC  6E0A               	movwf	(___lomod@divisor+1)^0,c
  4354  001EEE  0E00               	movlw	0
  4355  001EF0  6E0B               	movwf	(___lomod@divisor+2)^0,c
  4356  001EF2  0E00               	movlw	0
  4357  001EF4  6E0C               	movwf	(___lomod@divisor+3)^0,c
  4358  001EF6  0E00               	movlw	0
  4359  001EF8  6E0D               	movwf	(___lomod@divisor+4)^0,c
  4360  001EFA  0E00               	movlw	0
  4361  001EFC  6E0E               	movwf	(___lomod@divisor+5)^0,c
  4362  001EFE  0E00               	movlw	0
  4363  001F00  6E0F               	movwf	(___lomod@divisor+6)^0,c
  4364  001F02  0E00               	movlw	0
  4365  001F04  6E10               	movwf	(___lomod@divisor+7)^0,c
  4366  001F06  ECF8  F015         	call	___lomod	;wreg free
  4367  001F0A  C001  F026         	movff	?___lomod,??_utoa
  4368  001F0E  C002  F027         	movff	?___lomod+1,??_utoa+1
  4369  001F12  C003  F028         	movff	?___lomod+2,??_utoa+2
  4370  001F16  C004  F029         	movff	?___lomod+3,??_utoa+3
  4371  001F1A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4372  001F1E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4373  001F22  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4374  001F26  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4375  001F2A  5026               	movf	??_utoa^0,w,c
  4376  001F2C  0F30               	addlw	48
  4377  001F2E  6EDF               	movwf	indf2,c
  4378  001F30                     
  4379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 634:         --p;
  4380  001F30  062E               	decf	utoa@p^0,f,c
  4381  001F32  A0D8               	btfss	status,0,c
  4382  001F34  062F               	decf	(utoa@p+1)^0,f,c
  4383  001F36                     
  4384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 635:         --w;
  4385  001F36  0630               	decf	utoa@w^0,f,c
  4386  001F38  A0D8               	btfss	status,0,c
  4387  001F3A  0631               	decf	(utoa@w+1)^0,f,c
  4388  001F3C                     
  4389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4390  001F3C  C032  F001         	movff	utoa@n,___lodiv@dividend
  4391  001F40  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4392  001F44  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4393  001F48  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4394  001F4C  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4395  001F50  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4396  001F54  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4397  001F58  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4398  001F5C  0E0A               	movlw	10
  4399  001F5E  6E09               	movwf	___lodiv@divisor^0,c
  4400  001F60  0E00               	movlw	0
  4401  001F62  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  4402  001F64  0E00               	movlw	0
  4403  001F66  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  4404  001F68  0E00               	movlw	0
  4405  001F6A  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  4406  001F6C  0E00               	movlw	0
  4407  001F6E  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  4408  001F70  0E00               	movlw	0
  4409  001F72  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  4410  001F74  0E00               	movlw	0
  4411  001F76  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  4412  001F78  0E00               	movlw	0
  4413  001F7A  6E10               	movwf	(___lodiv@divisor+7)^0,c
  4414  001F7C  ECA5  F014         	call	___lodiv	;wreg free
  4415  001F80  C001  F032         	movff	?___lodiv,utoa@n
  4416  001F84  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4417  001F88  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4418  001F8C  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4419  001F90  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4420  001F94  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4421  001F98  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4422  001F9C  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4423  001FA0                     l2640:
  4424                           
  4425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4426  001FA0  503A               	movf	utoa@i^0,w,c
  4427  001FA2  103B               	iorwf	(utoa@i+1)^0,w,c
  4428  001FA4  B4D8               	btfsc	status,2,c
  4429  001FA6  EFD7  F00F         	goto	u2631
  4430  001FAA  EFD9  F00F         	goto	u2630
  4431  001FAE                     u2631:
  4432  001FAE  EF0A  F010         	goto	l2650
  4433  001FB2                     u2630:
  4434  001FB2  5032               	movf	utoa@n^0,w,c
  4435  001FB4  1033               	iorwf	(utoa@n+1)^0,w,c
  4436  001FB6  1034               	iorwf	(utoa@n+2)^0,w,c
  4437  001FB8  1035               	iorwf	(utoa@n+3)^0,w,c
  4438  001FBA  1036               	iorwf	(utoa@n+4)^0,w,c
  4439  001FBC  1037               	iorwf	(utoa@n+5)^0,w,c
  4440  001FBE  1038               	iorwf	(utoa@n+6)^0,w,c
  4441  001FC0  1039               	iorwf	(utoa@n+7)^0,w,c
  4442  001FC2  A4D8               	btfss	status,2,c
  4443  001FC4  EFE6  F00F         	goto	u2641
  4444  001FC8  EFE8  F00F         	goto	u2640
  4445  001FCC                     u2641:
  4446  001FCC  EF5A  F00F         	goto	l2630
  4447  001FD0                     u2640:
  4448  001FD0  BE2F               	btfsc	(utoa@p+1)^0,7,c
  4449  001FD2  EFF5  F00F         	goto	u2650
  4450  001FD6  502F               	movf	(utoa@p+1)^0,w,c
  4451  001FD8  E106               	bnz	u2651
  4452  001FDA  042E               	decf	utoa@p^0,w,c
  4453  001FDC  B0D8               	btfsc	status,0,c
  4454  001FDE  EFF3  F00F         	goto	u2651
  4455  001FE2  EFF5  F00F         	goto	u2650
  4456  001FE6                     u2651:
  4457  001FE6  EF5A  F00F         	goto	l2630
  4458  001FEA                     u2650:
  4459  001FEA  BE31               	btfsc	(utoa@w+1)^0,7,c
  4460  001FEC  EF00  F010         	goto	u2661
  4461  001FF0  5031               	movf	(utoa@w+1)^0,w,c
  4462  001FF2  E108               	bnz	u2660
  4463  001FF4  0430               	decf	utoa@w^0,w,c
  4464  001FF6  A0D8               	btfss	status,0,c
  4465  001FF8  EF00  F010         	goto	u2661
  4466  001FFC  EF02  F010         	goto	u2660
  4467  002000                     u2661:
  4468  002000  EF0A  F010         	goto	l2650
  4469  002004                     u2660:
  4470  002004  0100               	movlb	0	; () banked
  4471  002006  B392               	btfsc	_flags& (0+255),1,b
  4472  002008  EF08  F010         	goto	u2671
  4473  00200C  EF0A  F010         	goto	u2670
  4474  002010                     u2671:
  4475  002010  EF5A  F00F         	goto	l2630
  4476  002014                     u2670:
  4477  002014                     l2650:
  4478                           
  4479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4480  002014  C01C  F011         	movff	utoa@fp,pad@fp
  4481  002018  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4482  00201C  0E98               	movlw	low _dbuf
  4483  00201E  243A               	addwf	utoa@i^0,w,c
  4484  002020  6E13               	movwf	pad@buf^0,c
  4485  002022  0E00               	movlw	high _dbuf
  4486  002024  203B               	addwfc	(utoa@i+1)^0,w,c
  4487  002026  6E14               	movwf	(pad@buf+1)^0,c
  4488  002028  C030  F015         	movff	utoa@w,pad@p
  4489  00202C  C031  F016         	movff	utoa@w+1,pad@p+1
  4490  002030  ECC5  F016         	call	_pad	;wreg free
  4491  002034  C011  F01C         	movff	?_pad,?_utoa
  4492  002038  C012  F01D         	movff	?_pad+1,?_utoa+1
  4493  00203C  0012               	return		;funcret
  4494  00203E                     __end_of_utoa:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function ___lomod *****************
  4498 ;; Defined at:
  4499 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lomod.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  dividend        8    0[COMRAM] unsigned long long 
  4502 ;;  divisor         8    8[COMRAM] unsigned long long 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  counter         1   16[COMRAM] unsigned char 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  8    0[COMRAM] unsigned long long 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4514 ;;      Params:        16       0       0       0       0       0       0
  4515 ;;      Locals:         1       0       0       0       0       0       0
  4516 ;;      Temps:          0       0       0       0       0       0       0
  4517 ;;      Totals:        17       0       0       0       0       0       0
  4518 ;;Total ram usage:       17 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		_utoa
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text11
  4528  002BF0                     __ptext11:
  4529                           	callstack 0
  4530  002BF0                     ___lomod:
  4531                           	callstack 25
  4532  002BF0  5009               	movf	___lomod@divisor^0,w,c
  4533  002BF2  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4534  002BF4  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4535  002BF6  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4536  002BF8  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4537  002BFA  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4538  002BFC  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4539  002BFE  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4540  002C00  B4D8               	btfsc	status,2,c
  4541  002C02  EF05  F016         	goto	u2031
  4542  002C06  EF07  F016         	goto	u2030
  4543  002C0A                     u2031:
  4544  002C0A  EF4F  F016         	goto	l572
  4545  002C0E                     u2030:
  4546  002C0E  0E01               	movlw	1
  4547  002C10  6E11               	movwf	___lomod@counter^0,c
  4548  002C12  EF15  F016         	goto	l2368
  4549  002C16                     l2366:
  4550  002C16  90D8               	bcf	status,0,c
  4551  002C18  3609               	rlcf	___lomod@divisor^0,f,c
  4552  002C1A  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4553  002C1C  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4554  002C1E  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4555  002C20  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4556  002C22  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4557  002C24  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4558  002C26  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4559  002C28  2A11               	incf	___lomod@counter^0,f,c
  4560  002C2A                     l2368:
  4561  002C2A  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4562  002C2C  EF1A  F016         	goto	u2041
  4563  002C30  EF1C  F016         	goto	u2040
  4564  002C34                     u2041:
  4565  002C34  EF0B  F016         	goto	l2366
  4566  002C38                     u2040:
  4567  002C38                     l2370:
  4568  002C38  5009               	movf	___lomod@divisor^0,w,c
  4569  002C3A  5C01               	subwf	___lomod@dividend^0,w,c
  4570  002C3C  500A               	movf	(___lomod@divisor+1)^0,w,c
  4571  002C3E  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4572  002C40  500B               	movf	(___lomod@divisor+2)^0,w,c
  4573  002C42  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4574  002C44  500C               	movf	(___lomod@divisor+3)^0,w,c
  4575  002C46  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4576  002C48  500D               	movf	(___lomod@divisor+4)^0,w,c
  4577  002C4A  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4578  002C4C  500E               	movf	(___lomod@divisor+5)^0,w,c
  4579  002C4E  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4580  002C50  500F               	movf	(___lomod@divisor+6)^0,w,c
  4581  002C52  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4582  002C54  5010               	movf	(___lomod@divisor+7)^0,w,c
  4583  002C56  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4584  002C58  A0D8               	btfss	status,0,c
  4585  002C5A  EF31  F016         	goto	u2051
  4586  002C5E  EF33  F016         	goto	u2050
  4587  002C62                     u2051:
  4588  002C62  EF43  F016         	goto	l2374
  4589  002C66                     u2050:
  4590  002C66  5009               	movf	___lomod@divisor^0,w,c
  4591  002C68  5E01               	subwf	___lomod@dividend^0,f,c
  4592  002C6A  500A               	movf	(___lomod@divisor+1)^0,w,c
  4593  002C6C  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4594  002C6E  500B               	movf	(___lomod@divisor+2)^0,w,c
  4595  002C70  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4596  002C72  500C               	movf	(___lomod@divisor+3)^0,w,c
  4597  002C74  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4598  002C76  500D               	movf	(___lomod@divisor+4)^0,w,c
  4599  002C78  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4600  002C7A  500E               	movf	(___lomod@divisor+5)^0,w,c
  4601  002C7C  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4602  002C7E  500F               	movf	(___lomod@divisor+6)^0,w,c
  4603  002C80  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4604  002C82  5010               	movf	(___lomod@divisor+7)^0,w,c
  4605  002C84  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4606  002C86                     l2374:
  4607  002C86  90D8               	bcf	status,0,c
  4608  002C88  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4609  002C8A  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4610  002C8C  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4611  002C8E  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4612  002C90  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4613  002C92  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4614  002C94  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4615  002C96  3209               	rrcf	___lomod@divisor^0,f,c
  4616  002C98  2E11               	decfsz	___lomod@counter^0,f,c
  4617  002C9A  EF1C  F016         	goto	l2370
  4618  002C9E                     l572:
  4619  002C9E  C001  F001         	movff	___lomod@dividend,?___lomod
  4620  002CA2  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4621  002CA6  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4622  002CAA  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4623  002CAE  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4624  002CB2  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4625  002CB6  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4626  002CBA  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4627  002CBE  0012               	return		;funcret
  4628  002CC0                     __end_of___lomod:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function ___lodiv *****************
  4632 ;; Defined at:
  4633 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lodiv.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  dividend        8    0[COMRAM] unsigned long long 
  4636 ;;  divisor         8    8[COMRAM] unsigned long long 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  quotient        8   16[COMRAM] unsigned long long 
  4639 ;;  counter         1   24[COMRAM] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  8    0[COMRAM] unsigned long long 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4649 ;;      Params:        16       0       0       0       0       0       0
  4650 ;;      Locals:         9       0       0       0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0
  4652 ;;      Totals:        25       0       0       0       0       0       0
  4653 ;;Total ram usage:       25 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_utoa
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text12
  4663  00294A                     __ptext12:
  4664                           	callstack 0
  4665  00294A                     ___lodiv:
  4666                           	callstack 25
  4667  00294A  EE20  F011         	lfsr	2,___lodiv@quotient
  4668  00294E  0E07               	movlw	7
  4669  002950                     u1991:
  4670  002950  6ADE               	clrf	postinc2,c
  4671  002952  06E8               	decf	wreg,f,c
  4672  002954  E2FD               	bc	u1991
  4673  002956  5009               	movf	___lodiv@divisor^0,w,c
  4674  002958  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4675  00295A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4676  00295C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4677  00295E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4678  002960  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4679  002962  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4680  002964  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4681  002966  B4D8               	btfsc	status,2,c
  4682  002968  EFB8  F014         	goto	u2001
  4683  00296C  EFBA  F014         	goto	u2000
  4684  002970                     u2001:
  4685  002970  EF0C  F015         	goto	l562
  4686  002974                     u2000:
  4687  002974  0E01               	movlw	1
  4688  002976  6E19               	movwf	___lodiv@counter^0,c
  4689  002978  EFC8  F014         	goto	l2348
  4690  00297C                     l2346:
  4691  00297C  90D8               	bcf	status,0,c
  4692  00297E  3609               	rlcf	___lodiv@divisor^0,f,c
  4693  002980  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4694  002982  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4695  002984  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4696  002986  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4697  002988  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4698  00298A  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4699  00298C  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4700  00298E  2A19               	incf	___lodiv@counter^0,f,c
  4701  002990                     l2348:
  4702  002990  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4703  002992  EFCD  F014         	goto	u2011
  4704  002996  EFCF  F014         	goto	u2010
  4705  00299A                     u2011:
  4706  00299A  EFBE  F014         	goto	l2346
  4707  00299E                     u2010:
  4708  00299E                     l2350:
  4709  00299E  90D8               	bcf	status,0,c
  4710  0029A0  3611               	rlcf	___lodiv@quotient^0,f,c
  4711  0029A2  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4712  0029A4  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4713  0029A6  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4714  0029A8  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4715  0029AA  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4716  0029AC  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4717  0029AE  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4718  0029B0  5009               	movf	___lodiv@divisor^0,w,c
  4719  0029B2  5C01               	subwf	___lodiv@dividend^0,w,c
  4720  0029B4  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4721  0029B6  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4722  0029B8  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4723  0029BA  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4724  0029BC  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4725  0029BE  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4726  0029C0  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4727  0029C2  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4728  0029C4  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4729  0029C6  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4730  0029C8  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4731  0029CA  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4732  0029CC  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4733  0029CE  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4734  0029D0  A0D8               	btfss	status,0,c
  4735  0029D2  EFED  F014         	goto	u2021
  4736  0029D6  EFEF  F014         	goto	u2020
  4737  0029DA                     u2021:
  4738  0029DA  EF00  F015         	goto	l2358
  4739  0029DE                     u2020:
  4740  0029DE  5009               	movf	___lodiv@divisor^0,w,c
  4741  0029E0  5E01               	subwf	___lodiv@dividend^0,f,c
  4742  0029E2  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4743  0029E4  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4744  0029E6  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4745  0029E8  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4746  0029EA  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4747  0029EC  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4748  0029EE  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4749  0029F0  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4750  0029F2  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4751  0029F4  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4752  0029F6  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4753  0029F8  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4754  0029FA  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4755  0029FC  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4756  0029FE  8011               	bsf	___lodiv@quotient^0,0,c
  4757  002A00                     l2358:
  4758  002A00  90D8               	bcf	status,0,c
  4759  002A02  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4760  002A04  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4761  002A06  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4762  002A08  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4763  002A0A  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4764  002A0C  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4765  002A0E  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4766  002A10  3209               	rrcf	___lodiv@divisor^0,f,c
  4767  002A12  2E19               	decfsz	___lodiv@counter^0,f,c
  4768  002A14  EFCF  F014         	goto	l2350
  4769  002A18                     l562:
  4770  002A18  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4771  002A1C  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4772  002A20  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4773  002A24  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4774  002A28  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4775  002A2C  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4776  002A30  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4777  002A34  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4778  002A38  0012               	return		;funcret
  4779  002A3A                     __end_of___lodiv:
  4780                           	callstack 0
  4781                           
  4782 ;; *************** function _strncmp *****************
  4783 ;; Defined at:
  4784 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4787 ;;		 -> STR_2(9), 
  4788 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4789 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_86(3), 
  4790 ;;		 -> STR_81(4), STR_77(4), STR_72(3), STR_67(3), 
  4791 ;;		 -> STR_62(4), STR_57(3), STR_52(3), STR_47(4), 
  4792 ;;		 -> STR_42(3), STR_37(3), STR_32(4), STR_27(3), 
  4793 ;;		 -> STR_23(3), STR_18(3), STR_14(3), STR_9(4), 
  4794 ;;		 -> STR_5(4), 
  4795 ;;  n               2    4[COMRAM] unsigned int 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4798 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_86(3), 
  4799 ;;		 -> STR_81(4), STR_77(4), STR_72(3), STR_67(3), 
  4800 ;;		 -> STR_62(4), STR_57(3), STR_52(3), STR_47(4), 
  4801 ;;		 -> STR_42(3), STR_37(3), STR_32(4), STR_27(3), 
  4802 ;;		 -> STR_23(3), STR_18(3), STR_14(3), STR_9(4), 
  4803 ;;		 -> STR_5(4), 
  4804 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4805 ;;		 -> STR_2(9), 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  2    0[COMRAM] int 
  4808 ;; Registers used:
  4809 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4815 ;;      Params:         6       0       0       0       0       0       0
  4816 ;;      Locals:         4       0       0       0       0       0       0
  4817 ;;      Temps:          1       0       0       0       0       0       0
  4818 ;;      Totals:        11       0       0       0       0       0       0
  4819 ;;Total ram usage:       11 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_vfpfcnvrt
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text13
  4829  002A3A                     __ptext13:
  4830                           	callstack 0
  4831  002A3A                     _strncmp:
  4832                           	callstack 26
  4833  002A3A  C001  F008         	movff	strncmp@_l,strncmp@l
  4834  002A3E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4835  002A42  C003  F00A         	movff	strncmp@_r,strncmp@r
  4836  002A46  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4837  002A4A  0605               	decf	strncmp@n^0,f,c
  4838  002A4C  A0D8               	btfss	status,0,c
  4839  002A4E  0606               	decf	(strncmp@n+1)^0,f,c
  4840  002A50  2805               	incf	strncmp@n^0,w,c
  4841  002A52  E106               	bnz	u2921
  4842  002A54  2806               	incf	(strncmp@n+1)^0,w,c
  4843  002A56  A4D8               	btfss	status,2,c
  4844  002A58  EF30  F015         	goto	u2921
  4845  002A5C  EF32  F015         	goto	u2920
  4846  002A60                     u2921:
  4847  002A60  EF3F  F015         	goto	l2770
  4848  002A64                     u2920:
  4849  002A64  0E00               	movlw	0
  4850  002A66  6E02               	movwf	(?_strncmp+1)^0,c
  4851  002A68  0E00               	movlw	0
  4852  002A6A  6E01               	movwf	?_strncmp^0,c
  4853  002A6C  EF8B  F015         	goto	l1168
  4854  002A70                     l2768:
  4855  002A70  4A08               	infsnz	strncmp@l^0,f,c
  4856  002A72  2A09               	incf	(strncmp@l+1)^0,f,c
  4857  002A74  4A0A               	infsnz	strncmp@r^0,f,c
  4858  002A76  2A0B               	incf	(strncmp@r+1)^0,f,c
  4859  002A78  0605               	decf	strncmp@n^0,f,c
  4860  002A7A  A0D8               	btfss	status,0,c
  4861  002A7C  0606               	decf	(strncmp@n+1)^0,f,c
  4862  002A7E                     l2770:
  4863  002A7E  C008  FFF6         	movff	strncmp@l,tblptrl
  4864  002A82  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4865  002A86                     	if	0	;tblptru may be non-zero
  4866  002A86                     	endif
  4867  002A86                     	if	0	;tblptru may be non-zero
  4868  002A86                     	endif
  4869  002A86  0008               	tblrd		*
  4870  002A88  50F5               	movf	tablat,w,c
  4871  002A8A  0900               	iorlw	0
  4872  002A8C  B4D8               	btfsc	status,2,c
  4873  002A8E  EF4B  F015         	goto	u2931
  4874  002A92  EF4D  F015         	goto	u2930
  4875  002A96                     u2931:
  4876  002A96  EF79  F015         	goto	l2778
  4877  002A9A                     u2930:
  4878  002A9A  C00A  FFF6         	movff	strncmp@r,tblptrl
  4879  002A9E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4880  002AA2                     	if	0	;tblptru may be non-zero
  4881  002AA2                     	endif
  4882  002AA2                     	if	0	;tblptru may be non-zero
  4883  002AA2                     	endif
  4884  002AA2  0008               	tblrd		*
  4885  002AA4  50F5               	movf	tablat,w,c
  4886  002AA6  0900               	iorlw	0
  4887  002AA8  B4D8               	btfsc	status,2,c
  4888  002AAA  EF59  F015         	goto	u2941
  4889  002AAE  EF5B  F015         	goto	u2940
  4890  002AB2                     u2941:
  4891  002AB2  EF79  F015         	goto	l2778
  4892  002AB6                     u2940:
  4893  002AB6  5005               	movf	strncmp@n^0,w,c
  4894  002AB8  1006               	iorwf	(strncmp@n+1)^0,w,c
  4895  002ABA  B4D8               	btfsc	status,2,c
  4896  002ABC  EF62  F015         	goto	u2951
  4897  002AC0  EF64  F015         	goto	u2950
  4898  002AC4                     u2951:
  4899  002AC4  EF79  F015         	goto	l2778
  4900  002AC8                     u2950:
  4901  002AC8  C008  FFF6         	movff	strncmp@l,tblptrl
  4902  002ACC  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4903  002AD0                     	if	0	;tblptru may be non-zero
  4904  002AD0                     	endif
  4905  002AD0                     	if	0	;tblptru may be non-zero
  4906  002AD0                     	endif
  4907  002AD0  0008               	tblrd		*
  4908  002AD2  CFF5 F007          	movff	tablat,??_strncmp
  4909  002AD6  C00A  FFF6         	movff	strncmp@r,tblptrl
  4910  002ADA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4911  002ADE                     	if	0	;tblptru may be non-zero
  4912  002ADE                     	endif
  4913  002ADE                     	if	0	;tblptru may be non-zero
  4914  002ADE                     	endif
  4915  002ADE  0008               	tblrd		*
  4916  002AE0  50F5               	movf	tablat,w,c
  4917  002AE2  1807               	xorwf	??_strncmp^0,w,c
  4918  002AE4  B4D8               	btfsc	status,2,c
  4919  002AE6  EF77  F015         	goto	u2961
  4920  002AEA  EF79  F015         	goto	u2960
  4921  002AEE                     u2961:
  4922  002AEE  EF38  F015         	goto	l2768
  4923  002AF2                     u2960:
  4924  002AF2                     l2778:
  4925  002AF2  C008  FFF6         	movff	strncmp@l,tblptrl
  4926  002AF6  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4927  002AFA                     	if	0	;tblptru may be non-zero
  4928  002AFA                     	endif
  4929  002AFA                     	if	0	;tblptru may be non-zero
  4930  002AFA                     	endif
  4931  002AFA  0008               	tblrd		*
  4932  002AFC  CFF5 F007          	movff	tablat,??_strncmp
  4933  002B00  C00A  FFF6         	movff	strncmp@r,tblptrl
  4934  002B04  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4935  002B08                     	if	0	;tblptru may be non-zero
  4936  002B08                     	endif
  4937  002B08                     	if	0	;tblptru may be non-zero
  4938  002B08                     	endif
  4939  002B08  0008               	tblrd		*
  4940  002B0A  50F5               	movf	tablat,w,c
  4941  002B0C  5C07               	subwf	??_strncmp^0,w,c
  4942  002B0E  6E01               	movwf	?_strncmp^0,c
  4943  002B10  6A02               	clrf	(?_strncmp+1)^0,c
  4944  002B12  A0D8               	btfss	status,0,c
  4945  002B14  0602               	decf	(?_strncmp+1)^0,f,c
  4946  002B16                     l1168:
  4947  002B16  0012               	return		;funcret
  4948  002B18                     __end_of_strncmp:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _stoa *****************
  4952 ;; Defined at:
  4953 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  4956 ;;		 -> vsnprintf@f(6), 
  4957 ;;  s               2   11[COMRAM] PTR unsigned char 
  4958 ;;		 -> ?_snprintf(2), 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  nuls            7   14[COMRAM] unsigned char [7]
  4961 ;;  l               2   29[COMRAM] int 
  4962 ;;  p               2   27[COMRAM] int 
  4963 ;;  cp              2   25[COMRAM] PTR unsigned char 
  4964 ;;		 -> stoa@nuls(7), ?_snprintf(2), 
  4965 ;;  w               2   23[COMRAM] int 
  4966 ;;  i               2   21[COMRAM] int 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  2    9[COMRAM] int 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4976 ;;      Params:         4       0       0       0       0       0       0
  4977 ;;      Locals:        17       0       0       0       0       0       0
  4978 ;;      Temps:          1       0       0       0       0       0       0
  4979 ;;      Totals:        22       0       0       0       0       0       0
  4980 ;;Total ram usage:       22 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:    2
  4983 ;; This function calls:
  4984 ;;		_fputc
  4985 ;;		_strlen
  4986 ;; This function is called by:
  4987 ;;		_vfpfcnvrt
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text14
  4992  002544                     __ptext14:
  4993                           	callstack 0
  4994  002544                     _stoa:
  4995                           	callstack 24
  4996  002544                     
  4997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  4998  002544  EE20  F0E4         	lfsr	2,stoa@F1154
  4999  002548  EE10  F00F         	lfsr	1,stoa@nuls
  5000  00254C  0E06               	movlw	6
  5001  00254E                     u2521:
  5002  00254E  CFDB FFE3          	movff	plusw2,plusw1
  5003  002552  06E8               	decf	wreg,f,c
  5004  002554  E2FC               	bc	u2521
  5005  002556                     
  5006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  5007  002556  C00C  F01A         	movff	stoa@s,stoa@cp
  5008  00255A  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5009  00255E                     
  5010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  5011  00255E  501A               	movf	stoa@cp^0,w,c
  5012  002560  101B               	iorwf	(stoa@cp+1)^0,w,c
  5013  002562  A4D8               	btfss	status,2,c
  5014  002564  EFB6  F012         	goto	u2531
  5015  002568  EFB8  F012         	goto	u2530
  5016  00256C                     u2531:
  5017  00256C  EFBC  F012         	goto	l2584
  5018  002570                     u2530:
  5019  002570                     
  5020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  5021  002570  0E0F               	movlw	low stoa@nuls
  5022  002572  6E1A               	movwf	stoa@cp^0,c
  5023  002574  0E00               	movlw	high stoa@nuls
  5024  002576  6E1B               	movwf	(stoa@cp+1)^0,c
  5025  002578                     l2584:
  5026                           
  5027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  5028  002578  C01A  F001         	movff	stoa@cp,strlen@s
  5029  00257C  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5030  002580  EC21  F019         	call	_strlen	;wreg free
  5031  002584  C001  F01E         	movff	?_strlen,stoa@l
  5032  002588  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5033  00258C                     
  5034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  5035  00258C  C090  F01C         	movff	_prec,stoa@p
  5036  002590  C091  F01D         	movff	_prec+1,stoa@p+1
  5037  002594                     
  5038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  5039  002594  BE1D               	btfsc	(stoa@p+1)^0,7,c
  5040  002596  EFCF  F012         	goto	u2541
  5041  00259A  EFD1  F012         	goto	u2540
  5042  00259E                     u2541:
  5043  00259E  EFE6  F012         	goto	l928
  5044  0025A2                     u2540:
  5045  0025A2  501E               	movf	stoa@l^0,w,c
  5046  0025A4  5C1C               	subwf	stoa@p^0,w,c
  5047  0025A6  501D               	movf	(stoa@p+1)^0,w,c
  5048  0025A8  0A80               	xorlw	128
  5049  0025AA  6E0E               	movwf	??_stoa^0,c
  5050  0025AC  501F               	movf	(stoa@l+1)^0,w,c
  5051  0025AE  0A80               	xorlw	128
  5052  0025B0  580E               	subwfb	??_stoa^0,w,c
  5053  0025B2  A0D8               	btfss	status,0,c
  5054  0025B4  EFDE  F012         	goto	u2551
  5055  0025B8  EFE0  F012         	goto	u2550
  5056  0025BC                     u2551:
  5057  0025BC  EFE2  F012         	goto	l926
  5058  0025C0                     u2550:
  5059  0025C0  EFE6  F012         	goto	l928
  5060  0025C4                     l926:
  5061  0025C4  C01C  F01E         	movff	stoa@p,stoa@l
  5062  0025C8  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5063  0025CC                     l928:
  5064                           
  5065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 583:     p = l;
  5066  0025CC  C01E  F01C         	movff	stoa@l,stoa@p
  5067  0025D0  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5068                           
  5069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  5070  0025D4  C08E  F018         	movff	_width,stoa@w
  5071  0025D8  C08F  F019         	movff	_width+1,stoa@w+1
  5072                           
  5073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  5074  0025DC  0100               	movlb	0	; () banked
  5075  0025DE  B192               	btfsc	_flags& (0+255),0,b
  5076  0025E0  EFF4  F012         	goto	u2561
  5077  0025E4  EFF6  F012         	goto	u2560
  5078  0025E8                     u2561:
  5079  0025E8  EF13  F013         	goto	l2600
  5080  0025EC                     u2560:
  5081  0025EC  EF04  F013         	goto	l2598
  5082  0025F0                     l2594:
  5083                           
  5084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  5085  0025F0  0E00               	movlw	0
  5086  0025F2  6E02               	movwf	(fputc@c+1)^0,c
  5087  0025F4  0E20               	movlw	32
  5088  0025F6  6E01               	movwf	fputc@c^0,c
  5089  0025F8  C00A  F003         	movff	stoa@fp,fputc@fp
  5090  0025FC  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5091  002600  EC60  F016         	call	_fputc	;wreg free
  5092  002604                     
  5093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  5094  002604  4A1E               	infsnz	stoa@l^0,f,c
  5095  002606  2A1F               	incf	(stoa@l+1)^0,f,c
  5096  002608                     l2598:
  5097                           
  5098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  5099  002608  5018               	movf	stoa@w^0,w,c
  5100  00260A  5C1E               	subwf	stoa@l^0,w,c
  5101  00260C  501F               	movf	(stoa@l+1)^0,w,c
  5102  00260E  0A80               	xorlw	128
  5103  002610  6E0E               	movwf	??_stoa^0,c
  5104  002612  5019               	movf	(stoa@w+1)^0,w,c
  5105  002614  0A80               	xorlw	128
  5106  002616  580E               	subwfb	??_stoa^0,w,c
  5107  002618  A0D8               	btfss	status,0,c
  5108  00261A  EF11  F013         	goto	u2571
  5109  00261E  EF13  F013         	goto	u2570
  5110  002622                     u2571:
  5111  002622  EFF8  F012         	goto	l2594
  5112  002626                     u2570:
  5113  002626                     l2600:
  5114                           
  5115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  5116  002626  0E00               	movlw	0
  5117  002628  6E17               	movwf	(stoa@i+1)^0,c
  5118  00262A  0E00               	movlw	0
  5119  00262C  6E16               	movwf	stoa@i^0,c
  5120                           
  5121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5122  00262E  EF2C  F013         	goto	l2608
  5123  002632                     l2602:
  5124                           
  5125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  5126  002632  C01A  FFD9         	movff	stoa@cp,fsr2l
  5127  002636  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5128  00263A  50DF               	movf	indf2,w,c
  5129  00263C  6E0E               	movwf	??_stoa^0,c
  5130  00263E  500E               	movf	??_stoa^0,w,c
  5131  002640  6E01               	movwf	fputc@c^0,c
  5132  002642  6A02               	clrf	(fputc@c+1)^0,c
  5133  002644  C00A  F003         	movff	stoa@fp,fputc@fp
  5134  002648  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5135  00264C  EC60  F016         	call	_fputc	;wreg free
  5136  002650                     
  5137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  5138  002650  4A1A               	infsnz	stoa@cp^0,f,c
  5139  002652  2A1B               	incf	(stoa@cp+1)^0,f,c
  5140  002654                     
  5141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 599:         ++i;
  5142  002654  4A16               	infsnz	stoa@i^0,f,c
  5143  002656  2A17               	incf	(stoa@i+1)^0,f,c
  5144  002658                     l2608:
  5145                           
  5146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5147  002658  501C               	movf	stoa@p^0,w,c
  5148  00265A  5C16               	subwf	stoa@i^0,w,c
  5149  00265C  5017               	movf	(stoa@i+1)^0,w,c
  5150  00265E  0A80               	xorlw	128
  5151  002660  6E0E               	movwf	??_stoa^0,c
  5152  002662  501D               	movf	(stoa@p+1)^0,w,c
  5153  002664  0A80               	xorlw	128
  5154  002666  580E               	subwfb	??_stoa^0,w,c
  5155  002668  A0D8               	btfss	status,0,c
  5156  00266A  EF39  F013         	goto	u2581
  5157  00266E  EF3B  F013         	goto	u2580
  5158  002672                     u2581:
  5159  002672  EF19  F013         	goto	l2602
  5160  002676                     u2580:
  5161  002676                     
  5162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  5163  002676  0100               	movlb	0	; () banked
  5164  002678  A192               	btfss	_flags& (0+255),0,b
  5165  00267A  EF41  F013         	goto	u2591
  5166  00267E  EF43  F013         	goto	u2590
  5167  002682                     u2591:
  5168  002682  EF60  F013         	goto	l938
  5169  002686                     u2590:
  5170  002686  EF51  F013         	goto	l2616
  5171  00268A                     l2612:
  5172                           
  5173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  5174  00268A  0E00               	movlw	0
  5175  00268C  6E02               	movwf	(fputc@c+1)^0,c
  5176  00268E  0E20               	movlw	32
  5177  002690  6E01               	movwf	fputc@c^0,c
  5178  002692  C00A  F003         	movff	stoa@fp,fputc@fp
  5179  002696  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5180  00269A  EC60  F016         	call	_fputc	;wreg free
  5181  00269E                     
  5182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  5183  00269E  4A1E               	infsnz	stoa@l^0,f,c
  5184  0026A0  2A1F               	incf	(stoa@l+1)^0,f,c
  5185  0026A2                     l2616:
  5186                           
  5187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  5188  0026A2  5018               	movf	stoa@w^0,w,c
  5189  0026A4  5C1E               	subwf	stoa@l^0,w,c
  5190  0026A6  501F               	movf	(stoa@l+1)^0,w,c
  5191  0026A8  0A80               	xorlw	128
  5192  0026AA  6E0E               	movwf	??_stoa^0,c
  5193  0026AC  5019               	movf	(stoa@w+1)^0,w,c
  5194  0026AE  0A80               	xorlw	128
  5195  0026B0  580E               	subwfb	??_stoa^0,w,c
  5196  0026B2  A0D8               	btfss	status,0,c
  5197  0026B4  EF5E  F013         	goto	u2601
  5198  0026B8  EF60  F013         	goto	u2600
  5199  0026BC                     u2601:
  5200  0026BC  EF45  F013         	goto	l2612
  5201  0026C0                     u2600:
  5202  0026C0                     l938:
  5203                           
  5204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  5205  0026C0  C01E  F00A         	movff	stoa@l,?_stoa
  5206  0026C4  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5207  0026C8  0012               	return		;funcret
  5208  0026CA                     __end_of_stoa:
  5209                           	callstack 0
  5210                           
  5211 ;; *************** function _otoa *****************
  5212 ;; Defined at:
  5213 ;;		line 529 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5216 ;;		 -> vsnprintf@f(6), 
  5217 ;;  d               8   29[COMRAM] unsigned long long 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  n               8   51[COMRAM] unsigned long long 
  5220 ;;  i               2   59[COMRAM] int 
  5221 ;;  w               2   49[COMRAM] int 
  5222 ;;  t               2   47[COMRAM] int 
  5223 ;;  p               2   45[COMRAM] int 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  2   27[COMRAM] int 
  5226 ;; Registers used:
  5227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5233 ;;      Params:        10       0       0       0       0       0       0
  5234 ;;      Locals:        16       0       0       0       0       0       0
  5235 ;;      Temps:          8       0       0       0       0       0       0
  5236 ;;      Totals:        34       0       0       0       0       0       0
  5237 ;;Total ram usage:       34 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    4
  5240 ;; This function calls:
  5241 ;;		_pad
  5242 ;; This function is called by:
  5243 ;;		_vfpfcnvrt
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text15
  5248  00203E                     __ptext15:
  5249                           	callstack 0
  5250  00203E                     _otoa:
  5251                           	callstack 22
  5252  00203E                     
  5253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 529: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 530: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 531:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\com
      +                          mon\doprnt.c: 532:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\so
      +                          urces\c99\common\doprnt.c: 535:     if (!(prec < 0)) {
  5254  00203E  0100               	movlb	0	; () banked
  5255  002040  BF91               	btfsc	(_prec+1)& (0+255),7,b
  5256  002042  EF25  F010         	goto	u2421
  5257  002046  EF27  F010         	goto	u2420
  5258  00204A                     u2421:
  5259  00204A  EF28  F010         	goto	l2532
  5260  00204E                     u2420:
  5261  00204E                     
  5262                           ; BSR set to: 0
  5263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 536:         flag
      +                          s &= ~(1 << 1);
  5264  00204E  9392               	bcf	_flags& (0+255),1,b
  5265  002050                     l2532:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 538:     p = (0 <
      +                           prec) ? prec : 1;
  5269  002050  BF91               	btfsc	(_prec+1)& (0+255),7,b
  5270  002052  EF35  F010         	goto	u2430
  5271  002056  5191               	movf	(_prec+1)& (0+255),w,b
  5272  002058  E106               	bnz	u2431
  5273  00205A  0590               	decf	_prec& (0+255),w,b
  5274  00205C  B0D8               	btfsc	status,0,c
  5275  00205E  EF33  F010         	goto	u2431
  5276  002062  EF35  F010         	goto	u2430
  5277  002066                     u2431:
  5278  002066  EF3B  F010         	goto	l908
  5279  00206A                     u2430:
  5280  00206A                     
  5281                           ; BSR set to: 0
  5282  00206A  0E00               	movlw	0
  5283  00206C  6E2F               	movwf	(otoa@p+1)^0,c
  5284  00206E  0E01               	movlw	1
  5285  002070  6E2E               	movwf	otoa@p^0,c
  5286  002072  EF3F  F010         	goto	l910
  5287  002076                     l908:
  5288                           
  5289                           ; BSR set to: 0
  5290  002076  C090  F02E         	movff	_prec,otoa@p
  5291  00207A  C091  F02F         	movff	_prec+1,otoa@p+1
  5292  00207E                     l910:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 539:     w = widt
      +                          h;
  5296  00207E  C08E  F032         	movff	_width,otoa@w
  5297  002082  C08F  F033         	movff	_width+1,otoa@w+1
  5298                           
  5299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 542:     n = d;
  5300  002086  C01E  F034         	movff	otoa@d,otoa@n
  5301  00208A  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5302  00208E  C020  F036         	movff	otoa@d+2,otoa@n+2
  5303  002092  C021  F037         	movff	otoa@d+3,otoa@n+3
  5304  002096  C022  F038         	movff	otoa@d+4,otoa@n+4
  5305  00209A  C023  F039         	movff	otoa@d+5,otoa@n+5
  5306  00209E  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5307  0020A2  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5308  0020A6                     
  5309                           ; BSR set to: 0
  5310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 543:     i = size
      +                          of(dbuf) - 1;
  5311  0020A6  0E00               	movlw	0
  5312  0020A8  6E3D               	movwf	(otoa@i+1)^0,c
  5313  0020AA  0E1F               	movlw	31
  5314  0020AC  6E3C               	movwf	otoa@i^0,c
  5315  0020AE                     
  5316                           ; BSR set to: 0
  5317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 544:     dbuf[i] 
      +                          = '\0';
  5318  0020AE  0E00               	movlw	0
  5319  0020B0  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5320  0020B2                     
  5321                           ; BSR set to: 0
  5322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 545:     t = 0;
  5323  0020B2  0E00               	movlw	0
  5324  0020B4  6E31               	movwf	(otoa@t+1)^0,c
  5325  0020B6  0E00               	movlw	0
  5326  0020B8  6E30               	movwf	otoa@t^0,c
  5327                           
  5328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 546:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5329  0020BA  EFA4  F010         	goto	l2554
  5330  0020BE                     l2542:
  5331                           
  5332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 547:         --i;
  5333  0020BE  063C               	decf	otoa@i^0,f,c
  5334  0020C0  A0D8               	btfss	status,0,c
  5335  0020C2  063D               	decf	(otoa@i+1)^0,f,c
  5336  0020C4                     
  5337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 548:         t = 
      +                          n & 07;
  5338  0020C4  0E07               	movlw	7
  5339  0020C6  1434               	andwf	otoa@n^0,w,c
  5340  0020C8  6E30               	movwf	otoa@t^0,c
  5341  0020CA  6A31               	clrf	(otoa@t+1)^0,c
  5342  0020CC                     
  5343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 549:         dbuf
      +                          [i] = (char)((int)'0' + t);
  5344  0020CC  0E98               	movlw	low _dbuf
  5345  0020CE  243C               	addwf	otoa@i^0,w,c
  5346  0020D0  6ED9               	movwf	fsr2l,c
  5347  0020D2  0E00               	movlw	high _dbuf
  5348  0020D4  203D               	addwfc	(otoa@i+1)^0,w,c
  5349  0020D6  6EDA               	movwf	fsr2h,c
  5350  0020D8  5030               	movf	otoa@t^0,w,c
  5351  0020DA  0F30               	addlw	48
  5352  0020DC  6EDF               	movwf	indf2,c
  5353  0020DE                     
  5354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 550:         --p;
  5355  0020DE  062E               	decf	otoa@p^0,f,c
  5356  0020E0  A0D8               	btfss	status,0,c
  5357  0020E2  062F               	decf	(otoa@p+1)^0,f,c
  5358  0020E4                     
  5359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 551:         --w;
  5360  0020E4  0632               	decf	otoa@w^0,f,c
  5361  0020E6  A0D8               	btfss	status,0,c
  5362  0020E8  0633               	decf	(otoa@w+1)^0,f,c
  5363  0020EA                     
  5364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 552:         n = 
      +                          n >> 3;
  5365  0020EA  C034  F026         	movff	otoa@n,??_otoa
  5366  0020EE  C035  F027         	movff	otoa@n+1,??_otoa+1
  5367  0020F2  C036  F028         	movff	otoa@n+2,??_otoa+2
  5368  0020F6  C037  F029         	movff	otoa@n+3,??_otoa+3
  5369  0020FA  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5370  0020FE  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5371  002102  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5372  002106  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5373  00210A  0E04               	movlw	4
  5374  00210C  EF91  F010         	goto	u2440
  5375  002110                     u2445:
  5376  002110  90D8               	bcf	status,0,c
  5377  002112  322D               	rrcf	(??_otoa+7)^0,f,c
  5378  002114  322C               	rrcf	(??_otoa+6)^0,f,c
  5379  002116  322B               	rrcf	(??_otoa+5)^0,f,c
  5380  002118  322A               	rrcf	(??_otoa+4)^0,f,c
  5381  00211A  3229               	rrcf	(??_otoa+3)^0,f,c
  5382  00211C  3228               	rrcf	(??_otoa+2)^0,f,c
  5383  00211E  3227               	rrcf	(??_otoa+1)^0,f,c
  5384  002120  3226               	rrcf	??_otoa^0,f,c
  5385  002122                     u2440:
  5386  002122  2EE8               	decfsz	wreg,f,c
  5387  002124  EF88  F010         	goto	u2445
  5388  002128  C026  F034         	movff	??_otoa,otoa@n
  5389  00212C  C027  F035         	movff	??_otoa+1,otoa@n+1
  5390  002130  C028  F036         	movff	??_otoa+2,otoa@n+2
  5391  002134  C029  F037         	movff	??_otoa+3,otoa@n+3
  5392  002138  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5393  00213C  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5394  002140  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5395  002144  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5396  002148                     l2554:
  5397                           
  5398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 546:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5399  002148  BE3D               	btfsc	(otoa@i+1)^0,7,c
  5400  00214A  EFAF  F010         	goto	u2451
  5401  00214E  503D               	movf	(otoa@i+1)^0,w,c
  5402  002150  E108               	bnz	u2450
  5403  002152  043C               	decf	otoa@i^0,w,c
  5404  002154  A0D8               	btfss	status,0,c
  5405  002156  EFAF  F010         	goto	u2451
  5406  00215A  EFB1  F010         	goto	u2450
  5407  00215E                     u2451:
  5408  00215E  EFE2  F010         	goto	l917
  5409  002162                     u2450:
  5410  002162  5034               	movf	otoa@n^0,w,c
  5411  002164  1035               	iorwf	(otoa@n+1)^0,w,c
  5412  002166  1036               	iorwf	(otoa@n+2)^0,w,c
  5413  002168  1037               	iorwf	(otoa@n+3)^0,w,c
  5414  00216A  1038               	iorwf	(otoa@n+4)^0,w,c
  5415  00216C  1039               	iorwf	(otoa@n+5)^0,w,c
  5416  00216E  103A               	iorwf	(otoa@n+6)^0,w,c
  5417  002170  103B               	iorwf	(otoa@n+7)^0,w,c
  5418  002172  A4D8               	btfss	status,2,c
  5419  002174  EFBE  F010         	goto	u2461
  5420  002178  EFC0  F010         	goto	u2460
  5421  00217C                     u2461:
  5422  00217C  EF5F  F010         	goto	l2542
  5423  002180                     u2460:
  5424  002180  BE2F               	btfsc	(otoa@p+1)^0,7,c
  5425  002182  EFCD  F010         	goto	u2470
  5426  002186  502F               	movf	(otoa@p+1)^0,w,c
  5427  002188  E106               	bnz	u2471
  5428  00218A  042E               	decf	otoa@p^0,w,c
  5429  00218C  B0D8               	btfsc	status,0,c
  5430  00218E  EFCB  F010         	goto	u2471
  5431  002192  EFCD  F010         	goto	u2470
  5432  002196                     u2471:
  5433  002196  EF5F  F010         	goto	l2542
  5434  00219A                     u2470:
  5435  00219A  BE33               	btfsc	(otoa@w+1)^0,7,c
  5436  00219C  EFD8  F010         	goto	u2481
  5437  0021A0  5033               	movf	(otoa@w+1)^0,w,c
  5438  0021A2  E108               	bnz	u2480
  5439  0021A4  0432               	decf	otoa@w^0,w,c
  5440  0021A6  A0D8               	btfss	status,0,c
  5441  0021A8  EFD8  F010         	goto	u2481
  5442  0021AC  EFDA  F010         	goto	u2480
  5443  0021B0                     u2481:
  5444  0021B0  EFE2  F010         	goto	l917
  5445  0021B4                     u2480:
  5446  0021B4  0100               	movlb	0	; () banked
  5447  0021B6  B392               	btfsc	_flags& (0+255),1,b
  5448  0021B8  EFE0  F010         	goto	u2491
  5449  0021BC  EFE2  F010         	goto	u2490
  5450  0021C0                     u2491:
  5451  0021C0  EF5F  F010         	goto	l2542
  5452  0021C4                     u2490:
  5453  0021C4                     l917:
  5454                           
  5455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 556:     if ((fla
      +                          gs & (1 << 4)) && t) {
  5456  0021C4  0100               	movlb	0	; () banked
  5457  0021C6  A992               	btfss	_flags& (0+255),4,b
  5458  0021C8  EFE8  F010         	goto	u2501
  5459  0021CC  EFEA  F010         	goto	u2500
  5460  0021D0                     u2501:
  5461  0021D0  EF01  F011         	goto	l2572
  5462  0021D4                     u2500:
  5463  0021D4                     
  5464                           ; BSR set to: 0
  5465  0021D4  5030               	movf	otoa@t^0,w,c
  5466  0021D6  1031               	iorwf	(otoa@t+1)^0,w,c
  5467  0021D8  B4D8               	btfsc	status,2,c
  5468  0021DA  EFF1  F010         	goto	u2511
  5469  0021DE  EFF3  F010         	goto	u2510
  5470  0021E2                     u2511:
  5471  0021E2  EF01  F011         	goto	l2572
  5472  0021E6                     u2510:
  5473  0021E6                     
  5474                           ; BSR set to: 0
  5475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 557:         --i;
  5476  0021E6  063C               	decf	otoa@i^0,f,c
  5477  0021E8  A0D8               	btfss	status,0,c
  5478  0021EA  063D               	decf	(otoa@i+1)^0,f,c
  5479  0021EC                     
  5480                           ; BSR set to: 0
  5481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 558:         dbuf
      +                          [i] = '0';
  5482  0021EC  0E98               	movlw	low _dbuf
  5483  0021EE  243C               	addwf	otoa@i^0,w,c
  5484  0021F0  6ED9               	movwf	fsr2l,c
  5485  0021F2  0E00               	movlw	high _dbuf
  5486  0021F4  203D               	addwfc	(otoa@i+1)^0,w,c
  5487  0021F6  6EDA               	movwf	fsr2h,c
  5488  0021F8  0E30               	movlw	48
  5489  0021FA  6EDF               	movwf	indf2,c
  5490  0021FC                     
  5491                           ; BSR set to: 0
  5492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 559:         --w;
  5493  0021FC  0632               	decf	otoa@w^0,f,c
  5494  0021FE  A0D8               	btfss	status,0,c
  5495  002200  0633               	decf	(otoa@w+1)^0,f,c
  5496  002202                     l2572:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 563:     return p
      +                          ad(fp, &dbuf[i], w);
  5500  002202  C01C  F011         	movff	otoa@fp,pad@fp
  5501  002206  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5502  00220A  0E98               	movlw	low _dbuf
  5503  00220C  243C               	addwf	otoa@i^0,w,c
  5504  00220E  6E13               	movwf	pad@buf^0,c
  5505  002210  0E00               	movlw	high _dbuf
  5506  002212  203D               	addwfc	(otoa@i+1)^0,w,c
  5507  002214  6E14               	movwf	(pad@buf+1)^0,c
  5508  002216  C032  F015         	movff	otoa@w,pad@p
  5509  00221A  C033  F016         	movff	otoa@w+1,pad@p+1
  5510  00221E  ECC5  F016         	call	_pad	;wreg free
  5511  002222  C011  F01C         	movff	?_pad,?_otoa
  5512  002226  C012  F01D         	movff	?_pad+1,?_otoa+1
  5513  00222A  0012               	return		;funcret
  5514  00222C                     __end_of_otoa:
  5515                           	callstack 0
  5516                           
  5517 ;; *************** function _dtoa *****************
  5518 ;; Defined at:
  5519 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5522 ;;		 -> vsnprintf@f(6), 
  5523 ;;  d               8   29[COMRAM] long long 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  n               8   53[COMRAM] long long 
  5526 ;;  i               2   61[COMRAM] int 
  5527 ;;  s               2   51[COMRAM] int 
  5528 ;;  w               2   49[COMRAM] int 
  5529 ;;  p               2   47[COMRAM] int 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  2   27[COMRAM] int 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5539 ;;      Params:        10       0       0       0       0       0       0
  5540 ;;      Locals:        18       0       0       0       0       0       0
  5541 ;;      Temps:          8       0       0       0       0       0       0
  5542 ;;      Totals:        36       0       0       0       0       0       0
  5543 ;;Total ram usage:       36 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    4
  5546 ;; This function calls:
  5547 ;;		___aodiv
  5548 ;;		___aomod
  5549 ;;		_abs
  5550 ;;		_pad
  5551 ;; This function is called by:
  5552 ;;		_vfpfcnvrt
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text16
  5557  001882                     __ptext16:
  5558                           	callstack 0
  5559  001882                     _dtoa:
  5560                           	callstack 22
  5561  001882                     
  5562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5563  001882  C01E  F036         	movff	dtoa@d,dtoa@n
  5564  001886  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5565  00188A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5566  00188E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5567  001892  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5568  001896  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5569  00189A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5570  00189E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5571  0018A2                     
  5572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5573  0018A2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5574  0018A4  EF56  F00C         	goto	u2271
  5575  0018A8  EF59  F00C         	goto	u2270
  5576  0018AC                     u2271:
  5577  0018AC  0E01               	movlw	1
  5578  0018AE  EF5A  F00C         	goto	u2280
  5579  0018B2                     u2270:
  5580  0018B2  0E00               	movlw	0
  5581  0018B4                     u2280:
  5582  0018B4  6E34               	movwf	dtoa@s^0,c
  5583  0018B6  6A35               	clrf	(dtoa@s+1)^0,c
  5584                           
  5585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5586  0018B8  5034               	movf	dtoa@s^0,w,c
  5587  0018BA  1035               	iorwf	(dtoa@s+1)^0,w,c
  5588  0018BC  B4D8               	btfsc	status,2,c
  5589  0018BE  EF63  F00C         	goto	u2291
  5590  0018C2  EF65  F00C         	goto	u2290
  5591  0018C6                     u2291:
  5592  0018C6  EF75  F00C         	goto	l2472
  5593  0018CA                     u2290:
  5594  0018CA                     
  5595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5596  0018CA  1E3D               	comf	(dtoa@n+7)^0,f,c
  5597  0018CC  1E3C               	comf	(dtoa@n+6)^0,f,c
  5598  0018CE  1E3B               	comf	(dtoa@n+5)^0,f,c
  5599  0018D0  1E3A               	comf	(dtoa@n+4)^0,f,c
  5600  0018D2  1E39               	comf	(dtoa@n+3)^0,f,c
  5601  0018D4  1E38               	comf	(dtoa@n+2)^0,f,c
  5602  0018D6  1E37               	comf	(dtoa@n+1)^0,f,c
  5603  0018D8  6C36               	negf	dtoa@n^0,c
  5604  0018DA  0E00               	movlw	0
  5605  0018DC  2237               	addwfc	(dtoa@n+1)^0,f,c
  5606  0018DE  2238               	addwfc	(dtoa@n+2)^0,f,c
  5607  0018E0  2239               	addwfc	(dtoa@n+3)^0,f,c
  5608  0018E2  223A               	addwfc	(dtoa@n+4)^0,f,c
  5609  0018E4  223B               	addwfc	(dtoa@n+5)^0,f,c
  5610  0018E6  223C               	addwfc	(dtoa@n+6)^0,f,c
  5611  0018E8  223D               	addwfc	(dtoa@n+7)^0,f,c
  5612  0018EA                     l2472:
  5613                           
  5614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5615  0018EA  0100               	movlb	0	; () banked
  5616  0018EC  BF91               	btfsc	(_prec+1)& (0+255),7,b
  5617  0018EE  EF7B  F00C         	goto	u2301
  5618  0018F2  EF7D  F00C         	goto	u2300
  5619  0018F6                     u2301:
  5620  0018F6  EF7E  F00C         	goto	l2476
  5621  0018FA                     u2300:
  5622  0018FA                     
  5623                           ; BSR set to: 0
  5624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5625  0018FA  9392               	bcf	_flags& (0+255),1,b
  5626  0018FC                     l2476:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5630  0018FC  BF91               	btfsc	(_prec+1)& (0+255),7,b
  5631  0018FE  EF8B  F00C         	goto	u2310
  5632  001902  5191               	movf	(_prec+1)& (0+255),w,b
  5633  001904  E106               	bnz	u2311
  5634  001906  0590               	decf	_prec& (0+255),w,b
  5635  001908  B0D8               	btfsc	status,0,c
  5636  00190A  EF89  F00C         	goto	u2311
  5637  00190E  EF8B  F00C         	goto	u2310
  5638  001912                     u2311:
  5639  001912  EF91  F00C         	goto	l883
  5640  001916                     u2310:
  5641  001916                     
  5642                           ; BSR set to: 0
  5643  001916  0E00               	movlw	0
  5644  001918  6E31               	movwf	(dtoa@p+1)^0,c
  5645  00191A  0E01               	movlw	1
  5646  00191C  6E30               	movwf	dtoa@p^0,c
  5647  00191E  EF95  F00C         	goto	l885
  5648  001922                     l883:
  5649                           
  5650                           ; BSR set to: 0
  5651  001922  C090  F030         	movff	_prec,dtoa@p
  5652  001926  C091  F031         	movff	_prec+1,dtoa@p+1
  5653  00192A                     l885:
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5657  00192A  C08E  F032         	movff	_width,dtoa@w
  5658  00192E  C08F  F033         	movff	_width+1,dtoa@w+1
  5659  001932                     
  5660                           ; BSR set to: 0
  5661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5662  001932  5034               	movf	dtoa@s^0,w,c
  5663  001934  1035               	iorwf	(dtoa@s+1)^0,w,c
  5664  001936  A4D8               	btfss	status,2,c
  5665  001938  EFA0  F00C         	goto	u2321
  5666  00193C  EFA2  F00C         	goto	u2320
  5667  001940                     u2321:
  5668  001940  EFA9  F00C         	goto	l2484
  5669  001944                     u2320:
  5670  001944                     
  5671                           ; BSR set to: 0
  5672  001944  A592               	btfss	_flags& (0+255),2,b
  5673  001946  EFA7  F00C         	goto	u2331
  5674  00194A  EFA9  F00C         	goto	u2330
  5675  00194E                     u2331:
  5676  00194E  EFAC  F00C         	goto	l2486
  5677  001952                     u2330:
  5678  001952                     l2484:
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5682  001952  0632               	decf	dtoa@w^0,f,c
  5683  001954  A0D8               	btfss	status,0,c
  5684  001956  0633               	decf	(dtoa@w+1)^0,f,c
  5685  001958                     l2486:
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5689  001958  0E00               	movlw	0
  5690  00195A  6E3F               	movwf	(dtoa@i+1)^0,c
  5691  00195C  0E1F               	movlw	31
  5692  00195E  6E3E               	movwf	dtoa@i^0,c
  5693  001960                     
  5694                           ; BSR set to: 0
  5695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5696  001960  0E00               	movlw	0
  5697  001962  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5698                           
  5699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5700  001964  EF30  F00D         	goto	l2500
  5701  001968                     l2490:
  5702                           
  5703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5704  001968  063E               	decf	dtoa@i^0,f,c
  5705  00196A  A0D8               	btfss	status,0,c
  5706  00196C  063F               	decf	(dtoa@i+1)^0,f,c
  5707  00196E                     
  5708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5709  00196E  0E98               	movlw	low _dbuf
  5710  001970  243E               	addwf	dtoa@i^0,w,c
  5711  001972  6ED9               	movwf	fsr2l,c
  5712  001974  0E00               	movlw	high _dbuf
  5713  001976  203F               	addwfc	(dtoa@i+1)^0,w,c
  5714  001978  6EDA               	movwf	fsr2h,c
  5715  00197A  C036  F001         	movff	dtoa@n,___aomod@dividend
  5716  00197E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5717  001982  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5718  001986  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5719  00198A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5720  00198E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5721  001992  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5722  001996  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5723  00199A  0E0A               	movlw	10
  5724  00199C  6E09               	movwf	___aomod@divisor^0,c
  5725  00199E  0E00               	movlw	0
  5726  0019A0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5727  0019A2  0E00               	movlw	0
  5728  0019A4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5729  0019A6  0E00               	movlw	0
  5730  0019A8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5731  0019AA  0E00               	movlw	0
  5732  0019AC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5733  0019AE  0E00               	movlw	0
  5734  0019B0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5735  0019B2  0E00               	movlw	0
  5736  0019B4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5737  0019B6  0E00               	movlw	0
  5738  0019B8  6E10               	movwf	(___aomod@divisor+7)^0,c
  5739  0019BA  EC65  F013         	call	___aomod	;wreg free
  5740  0019BE  C001  F026         	movff	?___aomod,??_dtoa
  5741  0019C2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5742  0019C6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5743  0019CA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5744  0019CE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5745  0019D2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5746  0019D6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5747  0019DA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5748  0019DE  C026  F013         	movff	??_dtoa,abs@a
  5749  0019E2  C028  F014         	movff	??_dtoa+2,abs@a+1
  5750  0019E6  EC72  F018         	call	_abs	;wreg free
  5751  0019EA  5013               	movf	?_abs^0,w,c
  5752  0019EC  0F30               	addlw	48
  5753  0019EE  6EDF               	movwf	indf2,c
  5754  0019F0                     
  5755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5756  0019F0  0630               	decf	dtoa@p^0,f,c
  5757  0019F2  A0D8               	btfss	status,0,c
  5758  0019F4  0631               	decf	(dtoa@p+1)^0,f,c
  5759  0019F6                     
  5760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5761  0019F6  0632               	decf	dtoa@w^0,f,c
  5762  0019F8  A0D8               	btfss	status,0,c
  5763  0019FA  0633               	decf	(dtoa@w+1)^0,f,c
  5764  0019FC                     
  5765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5766  0019FC  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5767  001A00  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5768  001A04  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5769  001A08  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5770  001A0C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5771  001A10  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5772  001A14  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5773  001A18  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5774  001A1C  0E0A               	movlw	10
  5775  001A1E  6E09               	movwf	___aodiv@divisor^0,c
  5776  001A20  0E00               	movlw	0
  5777  001A22  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5778  001A24  0E00               	movlw	0
  5779  001A26  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5780  001A28  0E00               	movlw	0
  5781  001A2A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5782  001A2C  0E00               	movlw	0
  5783  001A2E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5784  001A30  0E00               	movlw	0
  5785  001A32  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5786  001A34  0E00               	movlw	0
  5787  001A36  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5788  001A38  0E00               	movlw	0
  5789  001A3A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5790  001A3C  ECDE  F011         	call	___aodiv	;wreg free
  5791  001A40  C001  F036         	movff	?___aodiv,dtoa@n
  5792  001A44  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5793  001A48  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5794  001A4C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5795  001A50  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5796  001A54  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5797  001A58  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5798  001A5C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5799  001A60                     l2500:
  5800                           
  5801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5802  001A60  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5803  001A62  EF3B  F00D         	goto	u2341
  5804  001A66  503F               	movf	(dtoa@i+1)^0,w,c
  5805  001A68  E108               	bnz	u2340
  5806  001A6A  043E               	decf	dtoa@i^0,w,c
  5807  001A6C  A0D8               	btfss	status,0,c
  5808  001A6E  EF3B  F00D         	goto	u2341
  5809  001A72  EF3D  F00D         	goto	u2340
  5810  001A76                     u2341:
  5811  001A76  EF6E  F00D         	goto	l2510
  5812  001A7A                     u2340:
  5813  001A7A  5036               	movf	dtoa@n^0,w,c
  5814  001A7C  1037               	iorwf	(dtoa@n+1)^0,w,c
  5815  001A7E  1038               	iorwf	(dtoa@n+2)^0,w,c
  5816  001A80  1039               	iorwf	(dtoa@n+3)^0,w,c
  5817  001A82  103A               	iorwf	(dtoa@n+4)^0,w,c
  5818  001A84  103B               	iorwf	(dtoa@n+5)^0,w,c
  5819  001A86  103C               	iorwf	(dtoa@n+6)^0,w,c
  5820  001A88  103D               	iorwf	(dtoa@n+7)^0,w,c
  5821  001A8A  A4D8               	btfss	status,2,c
  5822  001A8C  EF4A  F00D         	goto	u2351
  5823  001A90  EF4C  F00D         	goto	u2350
  5824  001A94                     u2351:
  5825  001A94  EFB4  F00C         	goto	l2490
  5826  001A98                     u2350:
  5827  001A98  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5828  001A9A  EF59  F00D         	goto	u2360
  5829  001A9E  5031               	movf	(dtoa@p+1)^0,w,c
  5830  001AA0  E106               	bnz	u2361
  5831  001AA2  0430               	decf	dtoa@p^0,w,c
  5832  001AA4  B0D8               	btfsc	status,0,c
  5833  001AA6  EF57  F00D         	goto	u2361
  5834  001AAA  EF59  F00D         	goto	u2360
  5835  001AAE                     u2361:
  5836  001AAE  EFB4  F00C         	goto	l2490
  5837  001AB2                     u2360:
  5838  001AB2  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5839  001AB4  EF64  F00D         	goto	u2371
  5840  001AB8  5033               	movf	(dtoa@w+1)^0,w,c
  5841  001ABA  E108               	bnz	u2370
  5842  001ABC  0432               	decf	dtoa@w^0,w,c
  5843  001ABE  A0D8               	btfss	status,0,c
  5844  001AC0  EF64  F00D         	goto	u2371
  5845  001AC4  EF66  F00D         	goto	u2370
  5846  001AC8                     u2371:
  5847  001AC8  EF6E  F00D         	goto	l2510
  5848  001ACC                     u2370:
  5849  001ACC  0100               	movlb	0	; () banked
  5850  001ACE  B392               	btfsc	_flags& (0+255),1,b
  5851  001AD0  EF6C  F00D         	goto	u2381
  5852  001AD4  EF6E  F00D         	goto	u2380
  5853  001AD8                     u2381:
  5854  001AD8  EFB4  F00C         	goto	l2490
  5855  001ADC                     u2380:
  5856  001ADC                     l2510:
  5857                           
  5858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5859  001ADC  5034               	movf	dtoa@s^0,w,c
  5860  001ADE  1035               	iorwf	(dtoa@s+1)^0,w,c
  5861  001AE0  A4D8               	btfss	status,2,c
  5862  001AE2  EF75  F00D         	goto	u2391
  5863  001AE6  EF77  F00D         	goto	u2390
  5864  001AEA                     u2391:
  5865  001AEA  EF7F  F00D         	goto	l2514
  5866  001AEE                     u2390:
  5867  001AEE  0100               	movlb	0	; () banked
  5868  001AF0  A592               	btfss	_flags& (0+255),2,b
  5869  001AF2  EF7D  F00D         	goto	u2401
  5870  001AF6  EF7F  F00D         	goto	u2400
  5871  001AFA                     u2401:
  5872  001AFA  EF9D  F00D         	goto	l2524
  5873  001AFE                     u2400:
  5874  001AFE                     l2514:
  5875                           
  5876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5877  001AFE  063E               	decf	dtoa@i^0,f,c
  5878  001B00  A0D8               	btfss	status,0,c
  5879  001B02  063F               	decf	(dtoa@i+1)^0,f,c
  5880  001B04                     
  5881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5882  001B04  5034               	movf	dtoa@s^0,w,c
  5883  001B06  1035               	iorwf	(dtoa@s+1)^0,w,c
  5884  001B08  A4D8               	btfss	status,2,c
  5885  001B0A  EF89  F00D         	goto	u2411
  5886  001B0E  EF8B  F00D         	goto	u2410
  5887  001B12                     u2411:
  5888  001B12  EF91  F00D         	goto	l2520
  5889  001B16                     u2410:
  5890  001B16  0E00               	movlw	0
  5891  001B18  6E2F               	movwf	(_dtoa$1126+1)^0,c
  5892  001B1A  0E2B               	movlw	43
  5893  001B1C  6E2E               	movwf	_dtoa$1126^0,c
  5894  001B1E  EF95  F00D         	goto	l2522
  5895  001B22                     l2520:
  5896  001B22  0E00               	movlw	0
  5897  001B24  6E2F               	movwf	(_dtoa$1126+1)^0,c
  5898  001B26  0E2D               	movlw	45
  5899  001B28  6E2E               	movwf	_dtoa$1126^0,c
  5900  001B2A                     l2522:
  5901  001B2A  0E98               	movlw	low _dbuf
  5902  001B2C  243E               	addwf	dtoa@i^0,w,c
  5903  001B2E  6ED9               	movwf	fsr2l,c
  5904  001B30  0E00               	movlw	high _dbuf
  5905  001B32  203F               	addwfc	(dtoa@i+1)^0,w,c
  5906  001B34  6EDA               	movwf	fsr2h,c
  5907  001B36  C02E  FFDF         	movff	_dtoa$1126,indf2
  5908  001B3A                     l2524:
  5909                           
  5910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5911  001B3A  C01C  F011         	movff	dtoa@fp,pad@fp
  5912  001B3E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5913  001B42  0E98               	movlw	low _dbuf
  5914  001B44  243E               	addwf	dtoa@i^0,w,c
  5915  001B46  6E13               	movwf	pad@buf^0,c
  5916  001B48  0E00               	movlw	high _dbuf
  5917  001B4A  203F               	addwfc	(dtoa@i+1)^0,w,c
  5918  001B4C  6E14               	movwf	(pad@buf+1)^0,c
  5919  001B4E  C032  F015         	movff	dtoa@w,pad@p
  5920  001B52  C033  F016         	movff	dtoa@w+1,pad@p+1
  5921  001B56  ECC5  F016         	call	_pad	;wreg free
  5922  001B5A  C011  F01C         	movff	?_pad,?_dtoa
  5923  001B5E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5924  001B62  0012               	return		;funcret
  5925  001B64                     __end_of_dtoa:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _pad *****************
  5929 ;; Defined at:
  5930 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5933 ;;		 -> vsnprintf@f(6), 
  5934 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5935 ;;		 -> dbuf(32), 
  5936 ;;  p               2   20[COMRAM] int 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  w               2   25[COMRAM] int 
  5939 ;;  i               2   23[COMRAM] int 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  2   16[COMRAM] int 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5949 ;;      Params:         6       0       0       0       0       0       0
  5950 ;;      Locals:         4       0       0       0       0       0       0
  5951 ;;      Temps:          1       0       0       0       0       0       0
  5952 ;;      Totals:        11       0       0       0       0       0       0
  5953 ;;Total ram usage:       11 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    3
  5956 ;; This function calls:
  5957 ;;		_fputc
  5958 ;;		_fputs
  5959 ;;		_strlen
  5960 ;; This function is called by:
  5961 ;;		_dtoa
  5962 ;;		_otoa
  5963 ;;		_utoa
  5964 ;;		_xtoa
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text17
  5969  002D8A                     __ptext17:
  5970                           	callstack 0
  5971  002D8A                     _pad:
  5972                           	callstack 22
  5973  002D8A                     
  5974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5975  002D8A  0100               	movlb	0	; () banked
  5976  002D8C  A192               	btfss	_flags& (0+255),0,b
  5977  002D8E  EFCB  F016         	goto	u2061
  5978  002D92  EFCD  F016         	goto	u2060
  5979  002D96                     u2061:
  5980  002D96  EFD7  F016         	goto	l2382
  5981  002D9A                     u2060:
  5982  002D9A                     
  5983                           ; BSR set to: 0
  5984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5985  002D9A  C013  F00A         	movff	pad@buf,fputs@s
  5986  002D9E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5987  002DA2  C011  F00C         	movff	pad@fp,fputs@fp
  5988  002DA6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5989  002DAA  EC2F  F018         	call	_fputs	;wreg free
  5990  002DAE                     l2382:
  5991                           
  5992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5993  002DAE  BE16               	btfsc	(pad@p+1)^0,7,c
  5994  002DB0  EFDC  F016         	goto	u2071
  5995  002DB4  EFDE  F016         	goto	u2070
  5996  002DB8                     u2071:
  5997  002DB8  EFE4  F016         	goto	l2386
  5998  002DBC                     u2070:
  5999  002DBC  C015  F01A         	movff	pad@p,pad@w
  6000  002DC0  C016  F01B         	movff	pad@p+1,pad@w+1
  6001  002DC4  EFE8  F016         	goto	l856
  6002  002DC8                     l2386:
  6003  002DC8  0E00               	movlw	0
  6004  002DCA  6E1B               	movwf	(pad@w+1)^0,c
  6005  002DCC  0E00               	movlw	0
  6006  002DCE  6E1A               	movwf	pad@w^0,c
  6007  002DD0                     l856:
  6008                           
  6009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6010  002DD0  0E00               	movlw	0
  6011  002DD2  6E19               	movwf	(pad@i+1)^0,c
  6012  002DD4  0E00               	movlw	0
  6013  002DD6  6E18               	movwf	pad@i^0,c
  6014                           
  6015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6016  002DD8  EFFA  F016         	goto	l2392
  6017  002DDC                     l2388:
  6018                           
  6019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6020  002DDC  0E00               	movlw	0
  6021  002DDE  6E02               	movwf	(fputc@c+1)^0,c
  6022  002DE0  0E20               	movlw	32
  6023  002DE2  6E01               	movwf	fputc@c^0,c
  6024  002DE4  C011  F003         	movff	pad@fp,fputc@fp
  6025  002DE8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6026  002DEC  EC60  F016         	call	_fputc	;wreg free
  6027  002DF0                     
  6028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6029  002DF0  4A18               	infsnz	pad@i^0,f,c
  6030  002DF2  2A19               	incf	(pad@i+1)^0,f,c
  6031  002DF4                     l2392:
  6032                           
  6033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6034  002DF4  501A               	movf	pad@w^0,w,c
  6035  002DF6  5C18               	subwf	pad@i^0,w,c
  6036  002DF8  5019               	movf	(pad@i+1)^0,w,c
  6037  002DFA  0A80               	xorlw	128
  6038  002DFC  6E17               	movwf	??_pad^0,c
  6039  002DFE  501B               	movf	(pad@w+1)^0,w,c
  6040  002E00  0A80               	xorlw	128
  6041  002E02  5817               	subwfb	??_pad^0,w,c
  6042  002E04  A0D8               	btfss	status,0,c
  6043  002E06  EF07  F017         	goto	u2081
  6044  002E0A  EF09  F017         	goto	u2080
  6045  002E0E                     u2081:
  6046  002E0E  EFEE  F016         	goto	l2388
  6047  002E12                     u2080:
  6048  002E12                     
  6049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6050  002E12  0100               	movlb	0	; () banked
  6051  002E14  B192               	btfsc	_flags& (0+255),0,b
  6052  002E16  EF0F  F017         	goto	u2091
  6053  002E1A  EF11  F017         	goto	u2090
  6054  002E1E                     u2091:
  6055  002E1E  EF1B  F017         	goto	l2396
  6056  002E22                     u2090:
  6057  002E22                     
  6058                           ; BSR set to: 0
  6059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6060  002E22  C013  F00A         	movff	pad@buf,fputs@s
  6061  002E26  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6062  002E2A  C011  F00C         	movff	pad@fp,fputs@fp
  6063  002E2E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6064  002E32  EC2F  F018         	call	_fputs	;wreg free
  6065  002E36                     l2396:
  6066                           
  6067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6068  002E36  C013  F001         	movff	pad@buf,strlen@s
  6069  002E3A  C014  F002         	movff	pad@buf+1,strlen@s+1
  6070  002E3E  EC21  F019         	call	_strlen	;wreg free
  6071  002E42  501A               	movf	pad@w^0,w,c
  6072  002E44  2401               	addwf	?_strlen^0,w,c
  6073  002E46  6E11               	movwf	?_pad^0,c
  6074  002E48  501B               	movf	(pad@w+1)^0,w,c
  6075  002E4A  2002               	addwfc	(?_strlen+1)^0,w,c
  6076  002E4C  6E12               	movwf	(?_pad+1)^0,c
  6077  002E4E  0012               	return		;funcret
  6078  002E50                     __end_of_pad:
  6079                           	callstack 0
  6080                           
  6081 ;; *************** function _strlen *****************
  6082 ;; Defined at:
  6083 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6086 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), 
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6089 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  2    0[COMRAM] unsigned int 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6099 ;;      Params:         2       0       0       0       0       0       0
  6100 ;;      Locals:         2       0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0
  6102 ;;      Totals:         4       0       0       0       0       0       0
  6103 ;;Total ram usage:        4 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_pad
  6109 ;;		_stoa
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text18
  6114  003242                     __ptext18:
  6115                           	callstack 0
  6116  003242                     _strlen:
  6117                           	callstack 24
  6118  003242  C001  F003         	movff	strlen@s,strlen@a
  6119  003246  C002  F004         	movff	strlen@s+1,strlen@a+1
  6120  00324A  EF29  F019         	goto	l2244
  6121  00324E                     l2242:
  6122  00324E  4A01               	infsnz	strlen@s^0,f,c
  6123  003250  2A02               	incf	(strlen@s+1)^0,f,c
  6124  003252                     l2244:
  6125  003252  C001  FFD9         	movff	strlen@s,fsr2l
  6126  003256  C002  FFDA         	movff	strlen@s+1,fsr2h
  6127  00325A  50DF               	movf	indf2,w,c
  6128  00325C  A4D8               	btfss	status,2,c
  6129  00325E  EF33  F019         	goto	u1831
  6130  003262  EF35  F019         	goto	u1830
  6131  003266                     u1831:
  6132  003266  EF27  F019         	goto	l2242
  6133  00326A                     u1830:
  6134  00326A  5003               	movf	strlen@a^0,w,c
  6135  00326C  5C01               	subwf	strlen@s^0,w,c
  6136  00326E  6E01               	movwf	?_strlen^0,c
  6137  003270  5004               	movf	(strlen@a+1)^0,w,c
  6138  003272  5802               	subwfb	(strlen@s+1)^0,w,c
  6139  003274  6E02               	movwf	(?_strlen+1)^0,c
  6140  003276  0012               	return		;funcret
  6141  003278                     __end_of_strlen:
  6142                           	callstack 0
  6143                           
  6144 ;; *************** function _fputs *****************
  6145 ;; Defined at:
  6146 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6149 ;;		 -> dbuf(32), 
  6150 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6151 ;;		 -> vsnprintf@f(6), 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  i               2   14[COMRAM] int 
  6154 ;;  c               1   13[COMRAM] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  2    9[COMRAM] int 
  6157 ;; Registers used:
  6158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6164 ;;      Params:         4       0       0       0       0       0       0
  6165 ;;      Locals:         3       0       0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0
  6167 ;;      Totals:         7       0       0       0       0       0       0
  6168 ;;Total ram usage:        7 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    2
  6171 ;; This function calls:
  6172 ;;		_fputc
  6173 ;; This function is called by:
  6174 ;;		_pad
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text19
  6179  00305E                     __ptext19:
  6180                           	callstack 0
  6181  00305E                     _fputs:
  6182                           	callstack 22
  6183  00305E  0E00               	movlw	0
  6184  003060  6E10               	movwf	(fputs@i+1)^0,c
  6185  003062  0E00               	movlw	0
  6186  003064  6E0F               	movwf	fputs@i^0,c
  6187  003066  EF40  F018         	goto	l2238
  6188  00306A                     l2234:
  6189  00306A  C00E  F001         	movff	fputs@c,fputc@c
  6190  00306E  6A02               	clrf	(fputc@c+1)^0,c
  6191  003070  C00C  F003         	movff	fputs@fp,fputc@fp
  6192  003074  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6193  003078  EC60  F016         	call	_fputc	;wreg free
  6194  00307C  4A0F               	infsnz	fputs@i^0,f,c
  6195  00307E  2A10               	incf	(fputs@i+1)^0,f,c
  6196  003080                     l2238:
  6197  003080  500F               	movf	fputs@i^0,w,c
  6198  003082  240A               	addwf	fputs@s^0,w,c
  6199  003084  6ED9               	movwf	fsr2l,c
  6200  003086  5010               	movf	(fputs@i+1)^0,w,c
  6201  003088  200B               	addwfc	(fputs@s+1)^0,w,c
  6202  00308A  6EDA               	movwf	fsr2h,c
  6203  00308C  50DF               	movf	indf2,w,c
  6204  00308E  6E0E               	movwf	fputs@c^0,c
  6205  003090  500E               	movf	fputs@c^0,w,c
  6206  003092  A4D8               	btfss	status,2,c
  6207  003094  EF4E  F018         	goto	u1821
  6208  003098  EF50  F018         	goto	u1820
  6209  00309C                     u1821:
  6210  00309C  EF35  F018         	goto	l2234
  6211  0030A0                     u1820:
  6212  0030A0  0012               	return		;funcret
  6213  0030A2                     __end_of_fputs:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _abs *****************
  6217 ;; Defined at:
  6218 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  a               2   18[COMRAM] int 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  2   18[COMRAM] int 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6232 ;;      Params:         2       0       0       0       0       0       0
  6233 ;;      Locals:         0       0       0       0       0       0       0
  6234 ;;      Temps:          2       0       0       0       0       0       0
  6235 ;;      Totals:         4       0       0       0       0       0       0
  6236 ;;Total ram usage:        4 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_dtoa
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           	psect	text20
  6246  0030E4                     __ptext20:
  6247                           	callstack 0
  6248  0030E4                     _abs:
  6249                           	callstack 25
  6250  0030E4  BE14               	btfsc	(abs@a+1)^0,7,c
  6251  0030E6  EF7F  F018         	goto	u2100
  6252  0030EA  5014               	movf	(abs@a+1)^0,w,c
  6253  0030EC  E106               	bnz	u2101
  6254  0030EE  0413               	decf	abs@a^0,w,c
  6255  0030F0  B0D8               	btfsc	status,0,c
  6256  0030F2  EF7D  F018         	goto	u2101
  6257  0030F6  EF7F  F018         	goto	u2100
  6258  0030FA                     u2101:
  6259  0030FA  EF8D  F018         	goto	l1073
  6260  0030FE                     u2100:
  6261  0030FE  C013  F015         	movff	abs@a,??_abs
  6262  003102  C014  F016         	movff	abs@a+1,??_abs+1
  6263  003106  1E15               	comf	??_abs^0,f,c
  6264  003108  1E16               	comf	(??_abs+1)^0,f,c
  6265  00310A  4A15               	infsnz	??_abs^0,f,c
  6266  00310C  2A16               	incf	(??_abs+1)^0,f,c
  6267  00310E  C015  F013         	movff	??_abs,?_abs
  6268  003112  C016  F014         	movff	??_abs+1,?_abs+1
  6269  003116  EF91  F018         	goto	l1076
  6270  00311A                     l1073:
  6271  00311A  C013  F013         	movff	abs@a,?_abs
  6272  00311E  C014  F014         	movff	abs@a+1,?_abs+1
  6273  003122                     l1076:
  6274  003122  0012               	return		;funcret
  6275  003124                     __end_of_abs:
  6276                           	callstack 0
  6277                           
  6278 ;; *************** function ___aomod *****************
  6279 ;; Defined at:
  6280 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  dividend        8    0[COMRAM] long long 
  6283 ;;  divisor         8    8[COMRAM] long long 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  sign            1   17[COMRAM] unsigned char 
  6286 ;;  counter         1   16[COMRAM] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  8    0[COMRAM] long long 
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6296 ;;      Params:        16       0       0       0       0       0       0
  6297 ;;      Locals:         2       0       0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0
  6299 ;;      Totals:        18       0       0       0       0       0       0
  6300 ;;Total ram usage:       18 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_dtoa
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text21
  6310  0026CA                     __ptext21:
  6311                           	callstack 0
  6312  0026CA                     ___aomod:
  6313                           	callstack 25
  6314  0026CA  0E00               	movlw	0
  6315  0026CC  6E12               	movwf	___aomod@sign^0,c
  6316  0026CE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6317  0026D0  EF6E  F013         	goto	u1930
  6318  0026D4  EF6C  F013         	goto	u1931
  6319  0026D8                     u1931:
  6320  0026D8  EF80  F013         	goto	l2312
  6321  0026DC                     u1930:
  6322  0026DC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6323  0026DE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6324  0026E0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6325  0026E2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6326  0026E4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6327  0026E6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6328  0026E8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6329  0026EA  6C01               	negf	___aomod@dividend^0,c
  6330  0026EC  0E00               	movlw	0
  6331  0026EE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6332  0026F0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6333  0026F2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6334  0026F4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6335  0026F6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6336  0026F8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6337  0026FA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6338  0026FC  0E01               	movlw	1
  6339  0026FE  6E12               	movwf	___aomod@sign^0,c
  6340  002700                     l2312:
  6341  002700  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6342  002702  EF87  F013         	goto	u1940
  6343  002706  EF85  F013         	goto	u1941
  6344  00270A                     u1941:
  6345  00270A  EF97  F013         	goto	l2316
  6346  00270E                     u1940:
  6347  00270E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6348  002710  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6349  002712  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6350  002714  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6351  002716  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6352  002718  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6353  00271A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6354  00271C  6C09               	negf	___aomod@divisor^0,c
  6355  00271E  0E00               	movlw	0
  6356  002720  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6357  002722  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6358  002724  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6359  002726  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6360  002728  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6361  00272A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6362  00272C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6363  00272E                     l2316:
  6364  00272E  5009               	movf	___aomod@divisor^0,w,c
  6365  002730  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6366  002732  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6367  002734  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6368  002736  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6369  002738  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6370  00273A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6371  00273C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6372  00273E  B4D8               	btfsc	status,2,c
  6373  002740  EFA4  F013         	goto	u1951
  6374  002744  EFA6  F013         	goto	u1950
  6375  002748                     u1951:
  6376  002748  EFEE  F013         	goto	l2332
  6377  00274C                     u1950:
  6378  00274C  0E01               	movlw	1
  6379  00274E  6E11               	movwf	___aomod@counter^0,c
  6380  002750  EFB4  F013         	goto	l2322
  6381  002754                     l2320:
  6382  002754  90D8               	bcf	status,0,c
  6383  002756  3609               	rlcf	___aomod@divisor^0,f,c
  6384  002758  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6385  00275A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6386  00275C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6387  00275E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6388  002760  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6389  002762  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6390  002764  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6391  002766  2A11               	incf	___aomod@counter^0,f,c
  6392  002768                     l2322:
  6393  002768  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6394  00276A  EFB9  F013         	goto	u1961
  6395  00276E  EFBB  F013         	goto	u1960
  6396  002772                     u1961:
  6397  002772  EFAA  F013         	goto	l2320
  6398  002776                     u1960:
  6399  002776                     l2324:
  6400  002776  5009               	movf	___aomod@divisor^0,w,c
  6401  002778  5C01               	subwf	___aomod@dividend^0,w,c
  6402  00277A  500A               	movf	(___aomod@divisor+1)^0,w,c
  6403  00277C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6404  00277E  500B               	movf	(___aomod@divisor+2)^0,w,c
  6405  002780  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6406  002782  500C               	movf	(___aomod@divisor+3)^0,w,c
  6407  002784  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6408  002786  500D               	movf	(___aomod@divisor+4)^0,w,c
  6409  002788  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6410  00278A  500E               	movf	(___aomod@divisor+5)^0,w,c
  6411  00278C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6412  00278E  500F               	movf	(___aomod@divisor+6)^0,w,c
  6413  002790  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6414  002792  5010               	movf	(___aomod@divisor+7)^0,w,c
  6415  002794  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6416  002796  A0D8               	btfss	status,0,c
  6417  002798  EFD0  F013         	goto	u1971
  6418  00279C  EFD2  F013         	goto	u1970
  6419  0027A0                     u1971:
  6420  0027A0  EFE2  F013         	goto	l2328
  6421  0027A4                     u1970:
  6422  0027A4  5009               	movf	___aomod@divisor^0,w,c
  6423  0027A6  5E01               	subwf	___aomod@dividend^0,f,c
  6424  0027A8  500A               	movf	(___aomod@divisor+1)^0,w,c
  6425  0027AA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6426  0027AC  500B               	movf	(___aomod@divisor+2)^0,w,c
  6427  0027AE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6428  0027B0  500C               	movf	(___aomod@divisor+3)^0,w,c
  6429  0027B2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6430  0027B4  500D               	movf	(___aomod@divisor+4)^0,w,c
  6431  0027B6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6432  0027B8  500E               	movf	(___aomod@divisor+5)^0,w,c
  6433  0027BA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6434  0027BC  500F               	movf	(___aomod@divisor+6)^0,w,c
  6435  0027BE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6436  0027C0  5010               	movf	(___aomod@divisor+7)^0,w,c
  6437  0027C2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6438  0027C4                     l2328:
  6439  0027C4  90D8               	bcf	status,0,c
  6440  0027C6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6441  0027C8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6442  0027CA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6443  0027CC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6444  0027CE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6445  0027D0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6446  0027D2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6447  0027D4  3209               	rrcf	___aomod@divisor^0,f,c
  6448  0027D6  2E11               	decfsz	___aomod@counter^0,f,c
  6449  0027D8  EFBB  F013         	goto	l2324
  6450  0027DC                     l2332:
  6451  0027DC  5012               	movf	___aomod@sign^0,w,c
  6452  0027DE  B4D8               	btfsc	status,2,c
  6453  0027E0  EFF4  F013         	goto	u1981
  6454  0027E4  EFF6  F013         	goto	u1980
  6455  0027E8                     u1981:
  6456  0027E8  EF06  F014         	goto	l2336
  6457  0027EC                     u1980:
  6458  0027EC  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6459  0027EE  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6460  0027F0  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6461  0027F2  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6462  0027F4  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6463  0027F6  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6464  0027F8  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6465  0027FA  6C01               	negf	___aomod@dividend^0,c
  6466  0027FC  0E00               	movlw	0
  6467  0027FE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6468  002800  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6469  002802  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6470  002804  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6471  002806  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6472  002808  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6473  00280A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6474  00280C                     l2336:
  6475  00280C  C001  F001         	movff	___aomod@dividend,?___aomod
  6476  002810  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6477  002814  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6478  002818  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6479  00281C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6480  002820  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6481  002824  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6482  002828  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6483  00282C  0012               	return		;funcret
  6484  00282E                     __end_of___aomod:
  6485                           	callstack 0
  6486                           
  6487 ;; *************** function ___aodiv *****************
  6488 ;; Defined at:
  6489 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  dividend        8    0[COMRAM] long long 
  6492 ;;  divisor         8    8[COMRAM] long long 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  quotient        8   18[COMRAM] long long 
  6495 ;;  sign            1   17[COMRAM] unsigned char 
  6496 ;;  counter         1   16[COMRAM] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  8    0[COMRAM] long long 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6506 ;;      Params:        16       0       0       0       0       0       0
  6507 ;;      Locals:        10       0       0       0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0
  6509 ;;      Totals:        26       0       0       0       0       0       0
  6510 ;;Total ram usage:       26 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_dtoa
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text22
  6520  0023BC                     __ptext22:
  6521                           	callstack 0
  6522  0023BC                     ___aodiv:
  6523                           	callstack 25
  6524  0023BC  0E00               	movlw	0
  6525  0023BE  6E12               	movwf	___aodiv@sign^0,c
  6526  0023C0  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6527  0023C2  EFE7  F011         	goto	u1860
  6528  0023C6  EFE5  F011         	goto	u1861
  6529  0023CA                     u1861:
  6530  0023CA  EFF9  F011         	goto	l2268
  6531  0023CE                     u1860:
  6532  0023CE  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6533  0023D0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6534  0023D2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6535  0023D4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6536  0023D6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6537  0023D8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6538  0023DA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6539  0023DC  6C09               	negf	___aodiv@divisor^0,c
  6540  0023DE  0E00               	movlw	0
  6541  0023E0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6542  0023E2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6543  0023E4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6544  0023E6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6545  0023E8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6546  0023EA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6547  0023EC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6548  0023EE  0E01               	movlw	1
  6549  0023F0  6E12               	movwf	___aodiv@sign^0,c
  6550  0023F2                     l2268:
  6551  0023F2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6552  0023F4  EF00  F012         	goto	u1870
  6553  0023F8  EFFE  F011         	goto	u1871
  6554  0023FC                     u1871:
  6555  0023FC  EF12  F012         	goto	l2274
  6556  002400                     u1870:
  6557  002400  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6558  002402  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6559  002404  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6560  002406  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6561  002408  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6562  00240A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6563  00240C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6564  00240E  6C01               	negf	___aodiv@dividend^0,c
  6565  002410  0E00               	movlw	0
  6566  002412  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6567  002414  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6568  002416  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6569  002418  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6570  00241A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6571  00241C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6572  00241E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6573  002420  0E01               	movlw	1
  6574  002422  1A12               	xorwf	___aodiv@sign^0,f,c
  6575  002424                     l2274:
  6576  002424  EE20  F013         	lfsr	2,___aodiv@quotient
  6577  002428  0E07               	movlw	7
  6578  00242A                     u1881:
  6579  00242A  6ADE               	clrf	postinc2,c
  6580  00242C  06E8               	decf	wreg,f,c
  6581  00242E  E2FD               	bc	u1881
  6582  002430  5009               	movf	___aodiv@divisor^0,w,c
  6583  002432  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6584  002434  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6585  002436  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6586  002438  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6587  00243A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6588  00243C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6589  00243E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6590  002440  B4D8               	btfsc	status,2,c
  6591  002442  EF25  F012         	goto	u1891
  6592  002446  EF27  F012         	goto	u1890
  6593  00244A                     u1891:
  6594  00244A  EF79  F012         	goto	l2296
  6595  00244E                     u1890:
  6596  00244E  0E01               	movlw	1
  6597  002450  6E11               	movwf	___aodiv@counter^0,c
  6598  002452  EF35  F012         	goto	l2282
  6599  002456                     l2280:
  6600  002456  90D8               	bcf	status,0,c
  6601  002458  3609               	rlcf	___aodiv@divisor^0,f,c
  6602  00245A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6603  00245C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6604  00245E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6605  002460  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6606  002462  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6607  002464  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6608  002466  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6609  002468  2A11               	incf	___aodiv@counter^0,f,c
  6610  00246A                     l2282:
  6611  00246A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6612  00246C  EF3A  F012         	goto	u1901
  6613  002470  EF3C  F012         	goto	u1900
  6614  002474                     u1901:
  6615  002474  EF2B  F012         	goto	l2280
  6616  002478                     u1900:
  6617  002478                     l2284:
  6618  002478  90D8               	bcf	status,0,c
  6619  00247A  3613               	rlcf	___aodiv@quotient^0,f,c
  6620  00247C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6621  00247E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6622  002480  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6623  002482  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6624  002484  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6625  002486  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6626  002488  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6627  00248A  5009               	movf	___aodiv@divisor^0,w,c
  6628  00248C  5C01               	subwf	___aodiv@dividend^0,w,c
  6629  00248E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6630  002490  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6631  002492  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6632  002494  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6633  002496  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6634  002498  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6635  00249A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6636  00249C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6637  00249E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6638  0024A0  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6639  0024A2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6640  0024A4  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6641  0024A6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6642  0024A8  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6643  0024AA  A0D8               	btfss	status,0,c
  6644  0024AC  EF5A  F012         	goto	u1911
  6645  0024B0  EF5C  F012         	goto	u1910
  6646  0024B4                     u1911:
  6647  0024B4  EF6D  F012         	goto	l2292
  6648  0024B8                     u1910:
  6649  0024B8  5009               	movf	___aodiv@divisor^0,w,c
  6650  0024BA  5E01               	subwf	___aodiv@dividend^0,f,c
  6651  0024BC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6652  0024BE  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6653  0024C0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6654  0024C2  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6655  0024C4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6656  0024C6  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6657  0024C8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6658  0024CA  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6659  0024CC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6660  0024CE  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6661  0024D0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6662  0024D2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6663  0024D4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6664  0024D6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6665  0024D8  8013               	bsf	___aodiv@quotient^0,0,c
  6666  0024DA                     l2292:
  6667  0024DA  90D8               	bcf	status,0,c
  6668  0024DC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6669  0024DE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6670  0024E0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6671  0024E2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6672  0024E4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6673  0024E6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6674  0024E8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6675  0024EA  3209               	rrcf	___aodiv@divisor^0,f,c
  6676  0024EC  2E11               	decfsz	___aodiv@counter^0,f,c
  6677  0024EE  EF3C  F012         	goto	l2284
  6678  0024F2                     l2296:
  6679  0024F2  5012               	movf	___aodiv@sign^0,w,c
  6680  0024F4  B4D8               	btfsc	status,2,c
  6681  0024F6  EF7F  F012         	goto	u1921
  6682  0024FA  EF81  F012         	goto	u1920
  6683  0024FE                     u1921:
  6684  0024FE  EF91  F012         	goto	l2300
  6685  002502                     u1920:
  6686  002502  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6687  002504  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6688  002506  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6689  002508  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6690  00250A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6691  00250C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6692  00250E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6693  002510  6C13               	negf	___aodiv@quotient^0,c
  6694  002512  0E00               	movlw	0
  6695  002514  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6696  002516  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6697  002518  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6698  00251A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6699  00251C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6700  00251E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6701  002520  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6702  002522                     l2300:
  6703  002522  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6704  002526  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6705  00252A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6706  00252E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6707  002532  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6708  002536  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6709  00253A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6710  00253E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6711  002542  0012               	return		;funcret
  6712  002544                     __end_of___aodiv:
  6713                           	callstack 0
  6714                           
  6715 ;; *************** function _ctoa *****************
  6716 ;; Defined at:
  6717 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  6720 ;;		 -> vsnprintf@f(6), 
  6721 ;;  c               1   11[COMRAM] unsigned char 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;  w               2   15[COMRAM] int 
  6724 ;;  l               2   13[COMRAM] int 
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  2    9[COMRAM] int 
  6727 ;; Registers used:
  6728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6734 ;;      Params:         3       0       0       0       0       0       0
  6735 ;;      Locals:         4       0       0       0       0       0       0
  6736 ;;      Temps:          1       0       0       0       0       0       0
  6737 ;;      Totals:         8       0       0       0       0       0       0
  6738 ;;Total ram usage:        8 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:    2
  6741 ;; This function calls:
  6742 ;;		_fputc
  6743 ;; This function is called by:
  6744 ;;		_vfpfcnvrt
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text23
  6749  002B18                     __ptext23:
  6750                           	callstack 0
  6751  002B18                     _ctoa:
  6752                           	callstack 24
  6753  002B18                     
  6754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  6755  002B18  0100               	movlb	0	; () banked
  6756  002B1A  518E               	movf	_width& (0+255),w,b
  6757  002B1C  118F               	iorwf	(_width+1)& (0+255),w,b
  6758  002B1E  A4D8               	btfss	status,2,c
  6759  002B20  EF94  F015         	goto	u2221
  6760  002B24  EF96  F015         	goto	u2220
  6761  002B28                     u2221:
  6762  002B28  EF9C  F015         	goto	l2442
  6763  002B2C                     u2220:
  6764  002B2C                     
  6765                           ; BSR set to: 0
  6766  002B2C  C08E  F010         	movff	_width,ctoa@w
  6767  002B30  C08F  F011         	movff	_width+1,ctoa@w+1
  6768  002B34  EFA2  F015         	goto	l2444
  6769  002B38                     l2442:
  6770                           
  6771                           ; BSR set to: 0
  6772  002B38  0EFF               	movlw	255
  6773  002B3A  258E               	addwf	_width& (0+255),w,b
  6774  002B3C  6E10               	movwf	ctoa@w^0,c
  6775  002B3E  0EFF               	movlw	255
  6776  002B40  218F               	addwfc	(_width+1)& (0+255),w,b
  6777  002B42  6E11               	movwf	(ctoa@w+1)^0,c
  6778  002B44                     l2444:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  6782  002B44  A192               	btfss	_flags& (0+255),0,b
  6783  002B46  EFA7  F015         	goto	u2231
  6784  002B4A  EFA9  F015         	goto	u2230
  6785  002B4E                     u2231:
  6786  002B4E  EFB2  F015         	goto	l2448
  6787  002B52                     u2230:
  6788  002B52                     
  6789                           ; BSR set to: 0
  6790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  6791  002B52  C00C  F001         	movff	ctoa@c,fputc@c
  6792  002B56  6A02               	clrf	(fputc@c+1)^0,c
  6793  002B58  C00A  F003         	movff	ctoa@fp,fputc@fp
  6794  002B5C  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  6795  002B60  EC60  F016         	call	_fputc	;wreg free
  6796  002B64                     l2448:
  6797                           
  6798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  6799  002B64  BE11               	btfsc	(ctoa@w+1)^0,7,c
  6800  002B66  EFB7  F015         	goto	u2241
  6801  002B6A  EFB9  F015         	goto	u2240
  6802  002B6E                     u2241:
  6803  002B6E  EFBB  F015         	goto	l2452
  6804  002B72                     u2240:
  6805  002B72  EFBF  F015         	goto	l872
  6806  002B76                     l2452:
  6807  002B76  0E00               	movlw	0
  6808  002B78  6E11               	movwf	(ctoa@w+1)^0,c
  6809  002B7A  0E00               	movlw	0
  6810  002B7C  6E10               	movwf	ctoa@w^0,c
  6811  002B7E                     l872:
  6812                           
  6813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  6814  002B7E  0E00               	movlw	0
  6815  002B80  6E0F               	movwf	(ctoa@l+1)^0,c
  6816  002B82  0E00               	movlw	0
  6817  002B84  6E0E               	movwf	ctoa@l^0,c
  6818                           
  6819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  6820  002B86  EFD1  F015         	goto	l2458
  6821  002B8A                     l2454:
  6822                           
  6823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  6824  002B8A  0E00               	movlw	0
  6825  002B8C  6E02               	movwf	(fputc@c+1)^0,c
  6826  002B8E  0E20               	movlw	32
  6827  002B90  6E01               	movwf	fputc@c^0,c
  6828  002B92  C00A  F003         	movff	ctoa@fp,fputc@fp
  6829  002B96  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  6830  002B9A  EC60  F016         	call	_fputc	;wreg free
  6831  002B9E                     
  6832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  6833  002B9E  4A0E               	infsnz	ctoa@l^0,f,c
  6834  002BA0  2A0F               	incf	(ctoa@l+1)^0,f,c
  6835  002BA2                     l2458:
  6836                           
  6837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  6838  002BA2  5010               	movf	ctoa@w^0,w,c
  6839  002BA4  5C0E               	subwf	ctoa@l^0,w,c
  6840  002BA6  500F               	movf	(ctoa@l+1)^0,w,c
  6841  002BA8  0A80               	xorlw	128
  6842  002BAA  6E0D               	movwf	??_ctoa^0,c
  6843  002BAC  5011               	movf	(ctoa@w+1)^0,w,c
  6844  002BAE  0A80               	xorlw	128
  6845  002BB0  580D               	subwfb	??_ctoa^0,w,c
  6846  002BB2  A0D8               	btfss	status,0,c
  6847  002BB4  EFDE  F015         	goto	u2251
  6848  002BB8  EFE0  F015         	goto	u2250
  6849  002BBC                     u2251:
  6850  002BBC  EFC5  F015         	goto	l2454
  6851  002BC0                     u2250:
  6852  002BC0                     
  6853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  6854  002BC0  0100               	movlb	0	; () banked
  6855  002BC2  B192               	btfsc	_flags& (0+255),0,b
  6856  002BC4  EFE6  F015         	goto	u2261
  6857  002BC8  EFE8  F015         	goto	u2260
  6858  002BCC                     u2261:
  6859  002BCC  EFF1  F015         	goto	l2462
  6860  002BD0                     u2260:
  6861  002BD0                     
  6862                           ; BSR set to: 0
  6863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  6864  002BD0  C00C  F001         	movff	ctoa@c,fputc@c
  6865  002BD4  6A02               	clrf	(fputc@c+1)^0,c
  6866  002BD6  C00A  F003         	movff	ctoa@fp,fputc@fp
  6867  002BDA  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  6868  002BDE  EC60  F016         	call	_fputc	;wreg free
  6869  002BE2                     l2462:
  6870                           
  6871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  6872  002BE2  0E01               	movlw	1
  6873  002BE4  240E               	addwf	ctoa@l^0,w,c
  6874  002BE6  6E0A               	movwf	?_ctoa^0,c
  6875  002BE8  0E00               	movlw	0
  6876  002BEA  200F               	addwfc	(ctoa@l+1)^0,w,c
  6877  002BEC  6E0B               	movwf	(?_ctoa+1)^0,c
  6878  002BEE  0012               	return		;funcret
  6879  002BF0                     __end_of_ctoa:
  6880                           	callstack 0
  6881                           
  6882 ;; *************** function _fputc *****************
  6883 ;; Defined at:
  6884 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  c               2    0[COMRAM] int 
  6887 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6888 ;;		 -> vsnprintf@f(6), 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;		None
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  2    0[COMRAM] int 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6900 ;;      Params:         4       0       0       0       0       0       0
  6901 ;;      Locals:         0       0       0       0       0       0       0
  6902 ;;      Temps:          5       0       0       0       0       0       0
  6903 ;;      Totals:         9       0       0       0       0       0       0
  6904 ;;Total ram usage:        9 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:    1
  6907 ;; This function calls:
  6908 ;;		_putch
  6909 ;; This function is called by:
  6910 ;;		_pad
  6911 ;;		_ctoa
  6912 ;;		_stoa
  6913 ;;		_vfpfcnvrt
  6914 ;;		_fputs
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text24
  6919  002CC0                     __ptext24:
  6920                           	callstack 0
  6921  002CC0                     _fputc:
  6922                           	callstack 22
  6923  002CC0  5003               	movf	fputc@fp^0,w,c
  6924  002CC2  1004               	iorwf	(fputc@fp+1)^0,w,c
  6925  002CC4  B4D8               	btfsc	status,2,c
  6926  002CC6  EF67  F016         	goto	u1781
  6927  002CCA  EF69  F016         	goto	u1780
  6928  002CCE                     u1781:
  6929  002CCE  EF72  F016         	goto	l2222
  6930  002CD2                     u1780:
  6931  002CD2  5003               	movf	fputc@fp^0,w,c
  6932  002CD4  1004               	iorwf	(fputc@fp+1)^0,w,c
  6933  002CD6  A4D8               	btfss	status,2,c
  6934  002CD8  EF70  F016         	goto	u1791
  6935  002CDC  EF72  F016         	goto	u1790
  6936  002CE0                     u1791:
  6937  002CE0  EF77  F016         	goto	l2224
  6938  002CE4                     u1790:
  6939  002CE4                     l2222:
  6940  002CE4  5001               	movf	fputc@c^0,w,c
  6941  002CE6  EC99  F019         	call	_putch
  6942  002CEA  EFC4  F016         	goto	l1147
  6943  002CEE                     l2224:
  6944  002CEE  EE20 F004          	lfsr	2,4
  6945  002CF2  5003               	movf	fputc@fp^0,w,c
  6946  002CF4  26D9               	addwf	fsr2l,f,c
  6947  002CF6  5004               	movf	(fputc@fp+1)^0,w,c
  6948  002CF8  22DA               	addwfc	fsr2h,f,c
  6949  002CFA  50DE               	movf	postinc2,w,c
  6950  002CFC  10DE               	iorwf	postinc2,w,c
  6951  002CFE  B4D8               	btfsc	status,2,c
  6952  002D00  EF84  F016         	goto	u1801
  6953  002D04  EF86  F016         	goto	u1800
  6954  002D08                     u1801:
  6955  002D08  EFA1  F016         	goto	l2228
  6956  002D0C                     u1800:
  6957  002D0C  EE20 F004          	lfsr	2,4
  6958  002D10  5003               	movf	fputc@fp^0,w,c
  6959  002D12  26D9               	addwf	fsr2l,f,c
  6960  002D14  5004               	movf	(fputc@fp+1)^0,w,c
  6961  002D16  22DA               	addwfc	fsr2h,f,c
  6962  002D18  EE10 F002          	lfsr	1,2
  6963  002D1C  5003               	movf	fputc@fp^0,w,c
  6964  002D1E  26E1               	addwf	fsr1l,f,c
  6965  002D20  5004               	movf	(fputc@fp+1)^0,w,c
  6966  002D22  22E2               	addwfc	fsr1h,f,c
  6967  002D24  50DE               	movf	postinc2,w,c
  6968  002D26  5CE6               	subwf	postinc1,w,c
  6969  002D28  50E6               	movf	postinc1,w,c
  6970  002D2A  0A80               	xorlw	128
  6971  002D2C  6E09               	movwf	(??_fputc+4)^0,c
  6972  002D2E  50DE               	movf	postinc2,w,c
  6973  002D30  0A80               	xorlw	128
  6974  002D32  5809               	subwfb	(??_fputc+4)^0,w,c
  6975  002D34  B0D8               	btfsc	status,0,c
  6976  002D36  EF9F  F016         	goto	u1811
  6977  002D3A  EFA1  F016         	goto	u1810
  6978  002D3E                     u1811:
  6979  002D3E  EFC4  F016         	goto	l1147
  6980  002D42                     u1810:
  6981  002D42                     l2228:
  6982  002D42  EE20 F002          	lfsr	2,2
  6983  002D46  5003               	movf	fputc@fp^0,w,c
  6984  002D48  26D9               	addwf	fsr2l,f,c
  6985  002D4A  5004               	movf	(fputc@fp+1)^0,w,c
  6986  002D4C  22DA               	addwfc	fsr2h,f,c
  6987  002D4E  CFDE F005          	movff	postinc2,??_fputc
  6988  002D52  CFDD F006          	movff	postdec2,??_fputc+1
  6989  002D56  C003  FFD9         	movff	fputc@fp,fsr2l
  6990  002D5A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6991  002D5E  CFDE F007          	movff	postinc2,??_fputc+2
  6992  002D62  CFDD F008          	movff	postdec2,??_fputc+3
  6993  002D66  5005               	movf	??_fputc^0,w,c
  6994  002D68  2407               	addwf	(??_fputc+2)^0,w,c
  6995  002D6A  6ED9               	movwf	fsr2l,c
  6996  002D6C  5006               	movf	(??_fputc+1)^0,w,c
  6997  002D6E  2008               	addwfc	(??_fputc+3)^0,w,c
  6998  002D70  6EDA               	movwf	fsr2h,c
  6999  002D72  C001  FFDF         	movff	fputc@c,indf2
  7000  002D76  EE20 F002          	lfsr	2,2
  7001  002D7A  5003               	movf	fputc@fp^0,w,c
  7002  002D7C  26D9               	addwf	fsr2l,f,c
  7003  002D7E  5004               	movf	(fputc@fp+1)^0,w,c
  7004  002D80  22DA               	addwfc	fsr2h,f,c
  7005  002D82  2ADE               	incf	postinc2,f,c
  7006  002D84  0E00               	movlw	0
  7007  002D86  22DD               	addwfc	postdec2,f,c
  7008  002D88                     l1147:
  7009  002D88  0012               	return		;funcret
  7010  002D8A                     __end_of_fputc:
  7011                           	callstack 0
  7012                           
  7013 ;; *************** function _putch *****************
  7014 ;; Defined at:
  7015 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  c               1    wreg     unsigned char 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  c               1    0[COMRAM] unsigned char 
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7029 ;;      Params:         0       0       0       0       0       0       0
  7030 ;;      Locals:         0       0       0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0
  7032 ;;      Totals:         0       0       0       0       0       0       0
  7033 ;;Total ram usage:        0 bytes
  7034 ;; Hardware stack levels used:    1
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_fputc
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text25
  7043  003332                     __ptext25:
  7044                           	callstack 0
  7045  003332                     _putch:
  7046                           	callstack 22
  7047  003332  0012               	return		;funcret
  7048  003334                     __end_of_putch:
  7049                           	callstack 0
  7050                           
  7051 ;; *************** function _atoi *****************
  7052 ;; Defined at:
  7053 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7056 ;;		 -> STR_2(9), 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  n               2   20[COMRAM] int 
  7059 ;;  neg             2   13[COMRAM] int 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  2    7[COMRAM] int 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7069 ;;      Params:         2       0       0       0       0       0       0
  7070 ;;      Locals:         9       0       0       0       0       0       0
  7071 ;;      Temps:          4       0       0       0       0       0       0
  7072 ;;      Totals:        15       0       0       0       0       0       0
  7073 ;;Total ram usage:       15 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; Hardware stack levels required when called:    1
  7076 ;; This function calls:
  7077 ;;		___wmul
  7078 ;;		_isdigit
  7079 ;;		_isspace
  7080 ;; This function is called by:
  7081 ;;		_vfpfcnvrt
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text26
  7086  00222C                     __ptext26:
  7087                           	callstack 0
  7088  00222C                     _atoi:
  7089                           	callstack 25
  7090  00222C  0E00               	movlw	0
  7091  00222E  6E16               	movwf	(atoi@n+1)^0,c
  7092  002230  0E00               	movlw	0
  7093  002232  6E15               	movwf	atoi@n^0,c
  7094  002234  0E00               	movlw	0
  7095  002236  6E0F               	movwf	(atoi@neg+1)^0,c
  7096  002238  0E00               	movlw	0
  7097  00223A  6E0E               	movwf	atoi@neg^0,c
  7098  00223C  EF22  F011         	goto	l2724
  7099  002240                     l2722:
  7100  002240  4A08               	infsnz	atoi@s^0,f,c
  7101  002242  2A09               	incf	(atoi@s+1)^0,f,c
  7102  002244                     l2724:
  7103  002244  0E01               	movlw	1
  7104  002246  6E14               	movwf	_atoi$1304^0,c
  7105  002248  C008  FFF6         	movff	atoi@s,tblptrl
  7106  00224C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7107  002250                     	if	0	;tblptru may be non-zero
  7108  002250                     	endif
  7109  002250                     	if	0	;tblptru may be non-zero
  7110  002250                     	endif
  7111  002250  0008               	tblrd		*
  7112  002252  50F5               	movf	tablat,w,c
  7113  002254  0A20               	xorlw	32
  7114  002256  B4D8               	btfsc	status,2,c
  7115  002258  EF30  F011         	goto	u2851
  7116  00225C  EF32  F011         	goto	u2850
  7117  002260                     u2851:
  7118  002260  EF4F  F011         	goto	l2732
  7119  002264                     u2850:
  7120  002264  0EF7               	movlw	247
  7121  002266  6E0A               	movwf	??_atoi^0,c
  7122  002268  0EFF               	movlw	255
  7123  00226A  6E0B               	movwf	(??_atoi+1)^0,c
  7124  00226C  C008  FFF6         	movff	atoi@s,tblptrl
  7125  002270  C009  FFF7         	movff	atoi@s+1,tblptrh
  7126  002274                     	if	0	;tblptru may be non-zero
  7127  002274                     	endif
  7128  002274                     	if	0	;tblptru may be non-zero
  7129  002274                     	endif
  7130  002274  0008               	tblrd		*
  7131  002276  50F5               	movf	tablat,w,c
  7132  002278  6E0C               	movwf	(??_atoi+2)^0,c
  7133  00227A  6A0D               	clrf	(??_atoi+3)^0,c
  7134  00227C  500A               	movf	??_atoi^0,w,c
  7135  00227E  260C               	addwf	(??_atoi+2)^0,f,c
  7136  002280  500B               	movf	(??_atoi+1)^0,w,c
  7137  002282  220D               	addwfc	(??_atoi+3)^0,f,c
  7138  002284  500D               	movf	(??_atoi+3)^0,w,c
  7139  002286  E109               	bnz	u2860
  7140  002288  0E05               	movlw	5
  7141  00228A  5C0C               	subwf	(??_atoi+2)^0,w,c
  7142  00228C  A0D8               	btfss	status,0,c
  7143  00228E  EF4B  F011         	goto	u2861
  7144  002292  EF4D  F011         	goto	u2860
  7145  002296                     u2861:
  7146  002296  EF4F  F011         	goto	l2732
  7147  00229A                     u2860:
  7148  00229A  0E00               	movlw	0
  7149  00229C  6E14               	movwf	_atoi$1304^0,c
  7150  00229E                     l2732:
  7151  00229E  C014  F010         	movff	_atoi$1304,_atoi$1303
  7152  0022A2  6A11               	clrf	(_atoi$1303+1)^0,c
  7153  0022A4  5010               	movf	_atoi$1303^0,w,c
  7154  0022A6  1011               	iorwf	(_atoi$1303+1)^0,w,c
  7155  0022A8  A4D8               	btfss	status,2,c
  7156  0022AA  EF59  F011         	goto	u2871
  7157  0022AE  EF5B  F011         	goto	u2870
  7158  0022B2                     u2871:
  7159  0022B2  EF20  F011         	goto	l2722
  7160  0022B6                     u2870:
  7161  0022B6  EF65  F011         	goto	l2742
  7162  0022BA                     l2738:
  7163  0022BA  0E00               	movlw	0
  7164  0022BC  6E0F               	movwf	(atoi@neg+1)^0,c
  7165  0022BE  0E01               	movlw	1
  7166  0022C0  6E0E               	movwf	atoi@neg^0,c
  7167  0022C2                     l2740:
  7168  0022C2  4A08               	infsnz	atoi@s^0,f,c
  7169  0022C4  2A09               	incf	(atoi@s+1)^0,f,c
  7170  0022C6  EF9A  F011         	goto	l2748
  7171  0022CA                     l2742:
  7172  0022CA  C008  FFF6         	movff	atoi@s,tblptrl
  7173  0022CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7174  0022D2                     	if	0	;tblptru may be non-zero
  7175  0022D2                     	endif
  7176  0022D2                     	if	0	;tblptru may be non-zero
  7177  0022D2                     	endif
  7178  0022D2  0008               	tblrd		*
  7179  0022D4  50F5               	movf	tablat,w,c
  7180  0022D6  6E0A               	movwf	??_atoi^0,c
  7181  0022D8  6A0B               	clrf	(??_atoi+1)^0,c
  7182                           
  7183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7184                           ; Switch size 1, requested type "simple"
  7185                           ; Number of cases is 1, Range of values is 0 to 0
  7186                           ; switch strategies available:
  7187                           ; Name         Instructions Cycles
  7188                           ; simple_byte            4     3 (average)
  7189                           ;	Chosen strategy is simple_byte
  7190  0022DA  500B               	movf	(??_atoi+1)^0,w,c
  7191  0022DC  0A00               	xorlw	0	; case 0
  7192  0022DE  B4D8               	btfsc	status,2,c
  7193  0022E0  EF74  F011         	goto	l3282
  7194  0022E4  EF9A  F011         	goto	l2748
  7195  0022E8                     l3282:
  7196                           
  7197                           ; Switch size 1, requested type "simple"
  7198                           ; Number of cases is 2, Range of values is 43 to 45
  7199                           ; switch strategies available:
  7200                           ; Name         Instructions Cycles
  7201                           ; simple_byte            7     4 (average)
  7202                           ;	Chosen strategy is simple_byte
  7203  0022E8  500A               	movf	??_atoi^0,w,c
  7204  0022EA  0A2B               	xorlw	43	; case 43
  7205  0022EC  B4D8               	btfsc	status,2,c
  7206  0022EE  EF61  F011         	goto	l2740
  7207  0022F2  0A06               	xorlw	6	; case 45
  7208  0022F4  B4D8               	btfsc	status,2,c
  7209  0022F6  EF5D  F011         	goto	l2738
  7210  0022FA  EF9A  F011         	goto	l2748
  7211  0022FE                     l2744:
  7212  0022FE  C015  F001         	movff	atoi@n,___wmul@multiplier
  7213  002302  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7214  002306  0E00               	movlw	0
  7215  002308  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7216  00230A  0E0A               	movlw	10
  7217  00230C  6E03               	movwf	___wmul@multiplicand^0,c
  7218  00230E  EC54  F019         	call	___wmul	;wreg free
  7219  002312  C008  FFF6         	movff	atoi@s,tblptrl
  7220  002316  C009  FFF7         	movff	atoi@s+1,tblptrh
  7221  00231A                     	if	0	;tblptru may be non-zero
  7222  00231A                     	endif
  7223  00231A                     	if	0	;tblptru may be non-zero
  7224  00231A                     	endif
  7225  00231A  0008               	tblrd		*
  7226  00231C  50F5               	movf	tablat,w,c
  7227  00231E  5E01               	subwf	?___wmul^0,f,c
  7228  002320  0E00               	movlw	0
  7229  002322  5A02               	subwfb	(?___wmul+1)^0,f,c
  7230  002324  0E30               	movlw	48
  7231  002326  2401               	addwf	?___wmul^0,w,c
  7232  002328  6E15               	movwf	atoi@n^0,c
  7233  00232A  0E00               	movlw	0
  7234  00232C  2002               	addwfc	(?___wmul+1)^0,w,c
  7235  00232E  6E16               	movwf	(atoi@n+1)^0,c
  7236  002330  EF61  F011         	goto	l2740
  7237  002334                     l2748:
  7238  002334  0ED0               	movlw	208
  7239  002336  6E0A               	movwf	??_atoi^0,c
  7240  002338  0EFF               	movlw	255
  7241  00233A  6E0B               	movwf	(??_atoi+1)^0,c
  7242  00233C  C008  FFF6         	movff	atoi@s,tblptrl
  7243  002340  C009  FFF7         	movff	atoi@s+1,tblptrh
  7244  002344                     	if	0	;tblptru may be non-zero
  7245  002344                     	endif
  7246  002344                     	if	0	;tblptru may be non-zero
  7247  002344                     	endif
  7248  002344  0008               	tblrd		*
  7249  002346  50F5               	movf	tablat,w,c
  7250  002348  6E0C               	movwf	(??_atoi+2)^0,c
  7251  00234A  6A0D               	clrf	(??_atoi+3)^0,c
  7252  00234C  500A               	movf	??_atoi^0,w,c
  7253  00234E  260C               	addwf	(??_atoi+2)^0,f,c
  7254  002350  500B               	movf	(??_atoi+1)^0,w,c
  7255  002352  220D               	addwfc	(??_atoi+3)^0,f,c
  7256  002354  500D               	movf	(??_atoi+3)^0,w,c
  7257  002356  E10A               	bnz	u2880
  7258  002358  0E0A               	movlw	10
  7259  00235A  5C0C               	subwf	(??_atoi+2)^0,w,c
  7260  00235C  A0D8               	btfss	status,0,c
  7261  00235E  EFB3  F011         	goto	u2881
  7262  002362  EFB6  F011         	goto	u2880
  7263  002366                     u2881:
  7264  002366  0E01               	movlw	1
  7265  002368  EFB7  F011         	goto	u2890
  7266  00236C                     u2880:
  7267  00236C  0E00               	movlw	0
  7268  00236E                     u2890:
  7269  00236E  6E12               	movwf	_atoi$1305^0,c
  7270  002370  6A13               	clrf	(_atoi$1305+1)^0,c
  7271  002372  5012               	movf	_atoi$1305^0,w,c
  7272  002374  1013               	iorwf	(_atoi$1305+1)^0,w,c
  7273  002376  A4D8               	btfss	status,2,c
  7274  002378  EFC0  F011         	goto	u2901
  7275  00237C  EFC2  F011         	goto	u2900
  7276  002380                     u2901:
  7277  002380  EF7F  F011         	goto	l2744
  7278  002384                     u2900:
  7279  002384  500E               	movf	atoi@neg^0,w,c
  7280  002386  100F               	iorwf	(atoi@neg+1)^0,w,c
  7281  002388  A4D8               	btfss	status,2,c
  7282  00238A  EFC9  F011         	goto	u2911
  7283  00238E  EFCB  F011         	goto	u2910
  7284  002392                     u2911:
  7285  002392  EFD9  F011         	goto	l1104
  7286  002396                     u2910:
  7287  002396  C015  F00A         	movff	atoi@n,??_atoi
  7288  00239A  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7289  00239E  1E0A               	comf	??_atoi^0,f,c
  7290  0023A0  1E0B               	comf	(??_atoi+1)^0,f,c
  7291  0023A2  4A0A               	infsnz	??_atoi^0,f,c
  7292  0023A4  2A0B               	incf	(??_atoi+1)^0,f,c
  7293  0023A6  C00A  F008         	movff	??_atoi,?_atoi
  7294  0023AA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7295  0023AE  EFDD  F011         	goto	l1107
  7296  0023B2                     l1104:
  7297  0023B2  C015  F008         	movff	atoi@n,?_atoi
  7298  0023B6  C016  F009         	movff	atoi@n+1,?_atoi+1
  7299  0023BA                     l1107:
  7300  0023BA  0012               	return		;funcret
  7301  0023BC                     __end_of_atoi:
  7302                           	callstack 0
  7303                           
  7304 ;; *************** function _isspace *****************
  7305 ;; Defined at:
  7306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  c               2    0[COMRAM] int 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;		None
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  2    0[COMRAM] int 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7320 ;;      Params:         2       0       0       0       0       0       0
  7321 ;;      Locals:         1       0       0       0       0       0       0
  7322 ;;      Temps:          4       0       0       0       0       0       0
  7323 ;;      Totals:         7       0       0       0       0       0       0
  7324 ;;Total ram usage:        7 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		_atoi
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text27
  7334  00300C                     __ptext27:
  7335                           	callstack 0
  7336  00300C                     _isspace:
  7337                           	callstack 25
  7338  00300C  0E01               	movlw	1
  7339  00300E  6E07               	movwf	_isspace$1331^0,c
  7340  003010  0E20               	movlw	32
  7341  003012  1801               	xorwf	isspace@c^0,w,c
  7342  003014  1002               	iorwf	(isspace@c+1)^0,w,c
  7343  003016  B4D8               	btfsc	status,2,c
  7344  003018  EF10  F018         	goto	u2201
  7345  00301C  EF12  F018         	goto	u2200
  7346  003020                     u2201:
  7347  003020  EF2B  F018         	goto	l2434
  7348  003024                     u2200:
  7349  003024  0EF7               	movlw	247
  7350  003026  6E03               	movwf	??_isspace^0,c
  7351  003028  0EFF               	movlw	255
  7352  00302A  6E04               	movwf	(??_isspace+1)^0,c
  7353  00302C  C001  F005         	movff	isspace@c,??_isspace+2
  7354  003030  C002  F006         	movff	isspace@c+1,??_isspace+3
  7355  003034  5003               	movf	??_isspace^0,w,c
  7356  003036  2605               	addwf	(??_isspace+2)^0,f,c
  7357  003038  5004               	movf	(??_isspace+1)^0,w,c
  7358  00303A  2206               	addwfc	(??_isspace+3)^0,f,c
  7359  00303C  5006               	movf	(??_isspace+3)^0,w,c
  7360  00303E  E109               	bnz	u2210
  7361  003040  0E05               	movlw	5
  7362  003042  5C05               	subwf	(??_isspace+2)^0,w,c
  7363  003044  A0D8               	btfss	status,0,c
  7364  003046  EF27  F018         	goto	u2211
  7365  00304A  EF29  F018         	goto	u2210
  7366  00304E                     u2211:
  7367  00304E  EF2B  F018         	goto	l2434
  7368  003052                     u2210:
  7369  003052  0E00               	movlw	0
  7370  003054  6E07               	movwf	_isspace$1331^0,c
  7371  003056                     l2434:
  7372  003056  C007  F001         	movff	_isspace$1331,?_isspace
  7373  00305A  6A02               	clrf	(?_isspace+1)^0,c
  7374  00305C  0012               	return		;funcret
  7375  00305E                     __end_of_isspace:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function _isdigit *****************
  7379 ;; Defined at:
  7380 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  c               2    0[COMRAM] int 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;		None
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  2    0[COMRAM] int 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7394 ;;      Params:         2       0       0       0       0       0       0
  7395 ;;      Locals:         0       0       0       0       0       0       0
  7396 ;;      Temps:          4       0       0       0       0       0       0
  7397 ;;      Totals:         6       0       0       0       0       0       0
  7398 ;;Total ram usage:        6 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_vfpfcnvrt
  7404 ;;		_atoi
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text28
  7409  00320A                     __ptext28:
  7410                           	callstack 0
  7411  00320A                     _isdigit:
  7412                           	callstack 26
  7413  00320A  0ED0               	movlw	208
  7414  00320C  6E03               	movwf	??_isdigit^0,c
  7415  00320E  0EFF               	movlw	255
  7416  003210  6E04               	movwf	(??_isdigit+1)^0,c
  7417  003212  C001  F005         	movff	isdigit@c,??_isdigit+2
  7418  003216  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7419  00321A  5003               	movf	??_isdigit^0,w,c
  7420  00321C  2605               	addwf	(??_isdigit+2)^0,f,c
  7421  00321E  5004               	movf	(??_isdigit+1)^0,w,c
  7422  003220  2206               	addwfc	(??_isdigit+3)^0,f,c
  7423  003222  5006               	movf	(??_isdigit+3)^0,w,c
  7424  003224  E10A               	bnz	u2180
  7425  003226  0E0A               	movlw	10
  7426  003228  5C05               	subwf	(??_isdigit+2)^0,w,c
  7427  00322A  A0D8               	btfss	status,0,c
  7428  00322C  EF1A  F019         	goto	u2181
  7429  003230  EF1D  F019         	goto	u2180
  7430  003234                     u2181:
  7431  003234  0E01               	movlw	1
  7432  003236  EF1E  F019         	goto	u2190
  7433  00323A                     u2180:
  7434  00323A  0E00               	movlw	0
  7435  00323C                     u2190:
  7436  00323C  6E01               	movwf	?_isdigit^0,c
  7437  00323E  6A02               	clrf	(?_isdigit+1)^0,c
  7438  003240  0012               	return		;funcret
  7439  003242                     __end_of_isdigit:
  7440                           	callstack 0
  7441                           
  7442 ;; *************** function ___wmul *****************
  7443 ;; Defined at:
  7444 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  multiplier      2    0[COMRAM] unsigned int 
  7447 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  product         2    4[COMRAM] unsigned int 
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  2    0[COMRAM] unsigned int 
  7452 ;; Registers used:
  7453 ;;		wreg, status,2, status,0, prodl, prodh
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7459 ;;      Params:         4       0       0       0       0       0       0
  7460 ;;      Locals:         2       0       0       0       0       0       0
  7461 ;;      Temps:          0       0       0       0       0       0       0
  7462 ;;      Totals:         6       0       0       0       0       0       0
  7463 ;;Total ram usage:        6 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_atoi
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text29
  7473  0032A8                     __ptext29:
  7474                           	callstack 0
  7475  0032A8                     ___wmul:
  7476                           	callstack 25
  7477  0032A8  5001               	movf	___wmul@multiplier^0,w,c
  7478  0032AA  0203               	mulwf	___wmul@multiplicand^0,c
  7479  0032AC  CFF3 F005          	movff	prodl,___wmul@product
  7480  0032B0  CFF4 F006          	movff	prodh,___wmul@product+1
  7481  0032B4  5001               	movf	___wmul@multiplier^0,w,c
  7482  0032B6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7483  0032B8  50F3               	movf	243,w,c
  7484  0032BA  2606               	addwf	(___wmul@product+1)^0,f,c
  7485  0032BC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7486  0032BE  0203               	mulwf	___wmul@multiplicand^0,c
  7487  0032C0  50F3               	movf	243,w,c
  7488  0032C2  2606               	addwf	(___wmul@product+1)^0,f,c
  7489  0032C4  C005  F001         	movff	___wmul@product,?___wmul
  7490  0032C8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7491  0032CC  0012               	return		;funcret
  7492  0032CE                     __end_of___wmul:
  7493                           	callstack 0
  7494                           
  7495 ;; *************** function _UART_send_string *****************
  7496 ;; Defined at:
  7497 ;;		line 54 in file "hw_uart.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;  st_pt           2    1[COMRAM] PTR unsigned char 
  7500 ;;		 -> main@_adc_str(20), STR_1(19), 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;		None
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7512 ;;      Params:         2       0       0       0       0       0       0
  7513 ;;      Locals:         0       0       0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0
  7515 ;;      Totals:         2       0       0       0       0       0       0
  7516 ;;Total ram usage:        2 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:    1
  7519 ;; This function calls:
  7520 ;;		_UART_send_char
  7521 ;; This function is called by:
  7522 ;;		_main
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text30
  7527  002FAE                     __ptext30:
  7528                           	callstack 0
  7529  002FAE                     _UART_send_string:
  7530                           	callstack 29
  7531  002FAE                     
  7532                           ;hw_uart.c: 54: void UART_send_string(char* st_pt);hw_uart.c: 55: {;hw_uart.c: 56:     w
      +                          hile(*st_pt)
  7533  002FAE  EFED  F017         	goto	l3186
  7534  002FB2                     l3182:
  7535                           
  7536                           ;hw_uart.c: 57:         UART_send_char(*st_pt++);
  7537  002FB2  C002  FFF6         	movff	UART_send_string@st_pt,tblptrl
  7538  002FB6  C003  FFF7         	movff	UART_send_string@st_pt+1,tblptrh
  7539  002FBA  6AF8               	clrf	tblptru,c
  7540  002FBC  0E05               	movlw	(high __ramtop+-1)
  7541  002FBE  64F7               	cpfsgt	tblptrh,c
  7542  002FC0  D003               	bra	u3497
  7543  002FC2  0008               	tblrd		*
  7544  002FC4  50F5               	movf	tablat,w,c
  7545  002FC6  D005               	bra	u3490
  7546  002FC8                     u3497:
  7547  002FC8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7548  002FCC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7549  002FD0  50E7               	movf	indf1,w,c
  7550  002FD2                     u3490:
  7551  002FD2  EC77  F019         	call	_UART_send_char
  7552  002FD6  4A02               	infsnz	UART_send_string@st_pt^0,f,c
  7553  002FD8  2A03               	incf	(UART_send_string@st_pt+1)^0,f,c
  7554  002FDA                     l3186:
  7555                           
  7556                           ;hw_uart.c: 56:     while(*st_pt)
  7557  002FDA  C002  FFF6         	movff	UART_send_string@st_pt,tblptrl
  7558  002FDE  C003  FFF7         	movff	UART_send_string@st_pt+1,tblptrh
  7559  002FE2  6AF8               	clrf	tblptru,c
  7560  002FE4  0E05               	movlw	(high __ramtop+-1)
  7561  002FE6  64F7               	cpfsgt	tblptrh,c
  7562  002FE8  D003               	bra	u3507
  7563  002FEA  0008               	tblrd		*
  7564  002FEC  50F5               	movf	tablat,w,c
  7565  002FEE  D005               	bra	u3500
  7566  002FF0                     u3507:
  7567  002FF0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7568  002FF4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7569  002FF8  50E7               	movf	indf1,w,c
  7570  002FFA                     u3500:
  7571  002FFA  0900               	iorlw	0
  7572  002FFC  A4D8               	btfss	status,2,c
  7573  002FFE  EF03  F018         	goto	u3511
  7574  003002  EF05  F018         	goto	u3510
  7575  003006                     u3511:
  7576  003006  EFD9  F017         	goto	l3182
  7577  00300A                     u3510:
  7578  00300A  0012               	return		;funcret
  7579  00300C                     __end_of_UART_send_string:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _UART_send_char *****************
  7583 ;; Defined at:
  7584 ;;		line 27 in file "hw_uart.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  bt              1    wreg     unsigned char 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  bt              1    0[COMRAM] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7598 ;;      Params:         0       0       0       0       0       0       0
  7599 ;;      Locals:         1       0       0       0       0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0
  7601 ;;      Totals:         1       0       0       0       0       0       0
  7602 ;;Total ram usage:        1 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; This function calls:
  7605 ;;		Nothing
  7606 ;; This function is called by:
  7607 ;;		_UART_send_string
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text31
  7612  0032EE                     __ptext31:
  7613                           	callstack 0
  7614  0032EE                     _UART_send_char:
  7615                           	callstack 29
  7616                           
  7617                           ;incstack = 0
  7618                           ;UART_send_char@bt stored from wreg
  7619  0032EE  6E01               	movwf	UART_send_char@bt^0,c
  7620  0032F0                     l69:
  7621  0032F0  A89E               	btfss	3998,4,c	;volatile
  7622  0032F2  EF7D  F019         	goto	u3431
  7623  0032F6  EF7F  F019         	goto	u3430
  7624  0032FA                     u3431:
  7625  0032FA  EF78  F019         	goto	l69
  7626  0032FE                     u3430:
  7627  0032FE                     
  7628                           ;hw_uart.c: 30:     TXREG = bt;
  7629  0032FE  C001  FFAD         	movff	UART_send_char@bt,4013	;volatile
  7630  003302  0012               	return		;funcret
  7631  003304                     __end_of_UART_send_char:
  7632                           	callstack 0
  7633                           
  7634 ;; *************** function _UART_Init *****************
  7635 ;; Defined at:
  7636 ;;		line 10 in file "hw_uart.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  baud_rate       3    0[COMRAM] unsigned um
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;		None
  7641 ;; Return value:  Size  Location     Type
  7642 ;;                  1    wreg      void 
  7643 ;; Registers used:
  7644 ;;		wreg, status,2
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7650 ;;      Params:         3       0       0       0       0       0       0
  7651 ;;      Locals:         0       0       0       0       0       0       0
  7652 ;;      Temps:          0       0       0       0       0       0       0
  7653 ;;      Totals:         3       0       0       0       0       0       0
  7654 ;;Total ram usage:        3 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; This function calls:
  7657 ;;		Nothing
  7658 ;; This function is called by:
  7659 ;;		_main
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text32
  7664  003304                     __ptext32:
  7665                           	callstack 0
  7666  003304                     _UART_Init:
  7667                           	callstack 30
  7668  003304                     
  7669                           ;hw_uart.c: 10: void UART_Init(uint24_t baud_rate);hw_uart.c: 11: {;hw_uart.c: 13:    TX
      +                          STAbits.TXEN = 1;
  7670  003304  8AAC               	bsf	172,5,c	;volatile
  7671                           
  7672                           ;hw_uart.c: 15:    TXSTAbits.SYNC = 0;
  7673  003306  98AC               	bcf	172,4,c	;volatile
  7674                           
  7675                           ;hw_uart.c: 17:    TXSTAbits.BRGH = 0;
  7676  003308  94AC               	bcf	172,2,c	;volatile
  7677                           
  7678                           ;hw_uart.c: 19:    BAUDCONbits.BRG16 = 0;
  7679  00330A  96B8               	bcf	184,3,c	;volatile
  7680                           
  7681                           ;hw_uart.c: 21:    RCSTAbits.SPEN = 1;
  7682  00330C  8EAB               	bsf	171,7,c	;volatile
  7683  00330E                     
  7684                           ;hw_uart.c: 23:    SPBRGH = 0x00;
  7685  00330E  0E00               	movlw	0
  7686  003310  6EB0               	movwf	176,c	;volatile
  7687                           
  7688                           ;hw_uart.c: 24:    SPBRG = 0x0C;
  7689  003312  0E0C               	movlw	12
  7690  003314  6EAF               	movwf	175,c	;volatile
  7691  003316  0012               	return		;funcret
  7692  003318                     __end_of_UART_Init:
  7693                           	callstack 0
  7694                           
  7695 ;; *************** function _Read_ADC *****************
  7696 ;; Defined at:
  7697 ;;		line 22 in file "hw_adc.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;		None
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  _voltage        2    4[COMRAM] unsigned int 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  2    0[COMRAM] unsigned int 
  7704 ;; Registers used:
  7705 ;;		wreg, status,2, status,0
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7711 ;;      Params:         2       0       0       0       0       0       0
  7712 ;;      Locals:         2       0       0       0       0       0       0
  7713 ;;      Temps:          2       0       0       0       0       0       0
  7714 ;;      Totals:         6       0       0       0       0       0       0
  7715 ;;Total ram usage:        6 bytes
  7716 ;; Hardware stack levels used:    1
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_main
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           	psect	text33
  7725  003160                     __ptext33:
  7726                           	callstack 0
  7727  003160                     _Read_ADC:
  7728                           	callstack 30
  7729  003160                     
  7730                           ;hw_adc.c: 29:        ADCON0bits.CHS = 0001;
  7731  003160  50C2               	movf	194,w,c	;volatile
  7732  003162  0BC3               	andlw	-61
  7733  003164  0904               	iorlw	4
  7734  003166  6EC2               	movwf	194,c	;volatile
  7735  003168                     
  7736                           ;hw_adc.c: 30:        ADCON0bits.GO = 1;
  7737  003168  82C2               	bsf	194,1,c	;volatile
  7738  00316A                     l115:
  7739  00316A  B2C2               	btfsc	194,1,c	;volatile
  7740  00316C  EFBA  F018         	goto	u3521
  7741  003170  EFBC  F018         	goto	u3520
  7742  003174                     u3521:
  7743  003174  EFB5  F018         	goto	l115
  7744  003178                     u3520:
  7745  003178                     
  7746                           ;hw_adc.c: 33:         _voltage = (ADRESH << 8) | (ADRESL);
  7747  003178  50C3               	movf	195,w,c	;volatile
  7748  00317A  CFC4 F003          	movff	4036,??_Read_ADC	;volatile
  7749  00317E  6A04               	clrf	(??_Read_ADC+1)^0,c
  7750  003180  C003  F004         	movff	??_Read_ADC,??_Read_ADC+1
  7751  003184  6A03               	clrf	??_Read_ADC^0,c
  7752  003186  1003               	iorwf	??_Read_ADC^0,w,c
  7753  003188  6E05               	movwf	Read_ADC@_voltage^0,c
  7754  00318A  5004               	movf	(??_Read_ADC+1)^0,w,c
  7755  00318C  6E06               	movwf	(Read_ADC@_voltage+1)^0,c
  7756  00318E                     
  7757                           ;hw_adc.c: 34:         PIR1bits.ADIF = 0;
  7758  00318E  9C9E               	bcf	158,6,c	;volatile
  7759  003190                     
  7760                           ;hw_adc.c: 46:     return _voltage;
  7761  003190  C005  F001         	movff	Read_ADC@_voltage,?_Read_ADC
  7762  003194  C006  F002         	movff	Read_ADC@_voltage+1,?_Read_ADC+1
  7763  003198  0012               	return		;funcret
  7764  00319A                     __end_of_Read_ADC:
  7765                           	callstack 0
  7766                           
  7767 ;; *************** function _PORT_Initialize *****************
  7768 ;; Defined at:
  7769 ;;		line 89 in file "Test.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		None
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7783 ;;      Params:         0       0       0       0       0       0       0
  7784 ;;      Locals:         0       0       0       0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0
  7786 ;;      Totals:         0       0       0       0       0       0       0
  7787 ;;Total ram usage:        0 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_main
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text34
  7797  00332C                     __ptext34:
  7798                           	callstack 0
  7799  00332C                     _PORT_Initialize:
  7800                           	callstack 30
  7801  00332C                     
  7802                           ;Test.c: 91:    TRISC6 = 1;
  7803  00332C  8C94               	bsf	3988,6,c	;volatile
  7804                           
  7805                           ;Test.c: 92:    TRISC7 = 1;
  7806  00332E  8E94               	bsf	3988,7,c	;volatile
  7807  003330  0012               	return		;funcret
  7808  003332                     __end_of_PORT_Initialize:
  7809                           	callstack 0
  7810                           
  7811 ;; *************** function _CLK_intialize *****************
  7812 ;; Defined at:
  7813 ;;		line 77 in file "Test.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;		None
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;		None
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      void 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7827 ;;      Params:         0       0       0       0       0       0       0
  7828 ;;      Locals:         0       0       0       0       0       0       0
  7829 ;;      Temps:          0       0       0       0       0       0       0
  7830 ;;      Totals:         0       0       0       0       0       0       0
  7831 ;;Total ram usage:        0 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		_main
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text35
  7841  003318                     __ptext35:
  7842                           	callstack 0
  7843  003318                     _CLK_intialize:
  7844                           	callstack 30
  7845  003318                     
  7846                           ;Test.c: 83:     OSCCONbits.IRCF = 0b111;
  7847  003318  0E70               	movlw	112
  7848  00331A  12D3               	iorwf	211,f,c	;volatile
  7849  00331C                     
  7850                           ;Test.c: 85:     OSCCONbits.IDLEN = 0b0;
  7851  00331C  9ED3               	bcf	211,7,c	;volatile
  7852                           
  7853                           ;Test.c: 86:     OSCCONbits.SCS = 0b11 ;
  7854  00331E  0E03               	movlw	3
  7855  003320  12D3               	iorwf	211,f,c	;volatile
  7856  003322  0012               	return		;funcret
  7857  003324                     __end_of_CLK_intialize:
  7858                           	callstack 0
  7859                           
  7860 ;; *************** function _ADC_intialize *****************
  7861 ;; Defined at:
  7862 ;;		line 49 in file "hw_adc.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7876 ;;      Params:         0       0       0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0
  7879 ;;      Totals:         0       0       0       0       0       0       0
  7880 ;;Total ram usage:        0 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		_main
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text36
  7890  0032CE                     __ptext36:
  7891                           	callstack 0
  7892  0032CE                     _ADC_intialize:
  7893                           	callstack 30
  7894  0032CE                     
  7895                           ;hw_adc.c: 56:    TRISA = 0xff;
  7896  0032CE  6892               	setf	146,c	;volatile
  7897  0032D0                     
  7898                           ;hw_adc.c: 60:     ADCON1bits.PCFG = 0b1101;
  7899  0032D0  50C1               	movf	193,w,c	;volatile
  7900  0032D2  0BF0               	andlw	-16
  7901  0032D4  090D               	iorlw	13
  7902  0032D6  6EC1               	movwf	193,c	;volatile
  7903  0032D8                     
  7904                           ;hw_adc.c: 61:     ADCON1bits.VCFG0 = 0;
  7905  0032D8  98C1               	bcf	193,4,c	;volatile
  7906  0032DA                     
  7907                           ;hw_adc.c: 62:     ADCON1bits.VCFG1 = 0 ;
  7908  0032DA  9AC1               	bcf	193,5,c	;volatile
  7909                           
  7910                           ;hw_adc.c: 65:      ADCON2bits.ADCS = 0b110;
  7911  0032DC  50C0               	movf	192,w,c	;volatile
  7912  0032DE  0BF8               	andlw	-8
  7913  0032E0  0906               	iorlw	6
  7914  0032E2  6EC0               	movwf	192,c	;volatile
  7915                           
  7916                           ;hw_adc.c: 66:      ADCON2bits.ACQT = 0b111;
  7917  0032E4  0E38               	movlw	56
  7918  0032E6  12C0               	iorwf	192,f,c	;volatile
  7919  0032E8                     
  7920                           ;hw_adc.c: 67:      ADCON2bits.ADFM = 0;
  7921  0032E8  9EC0               	bcf	192,7,c	;volatile
  7922  0032EA                     
  7923                           ;hw_adc.c: 70:     ADCON0bits.ADON = 1 ;
  7924  0032EA  80C2               	bsf	194,0,c	;volatile
  7925  0032EC  0012               	return		;funcret
  7926  0032EE                     __end_of_ADC_intialize:
  7927                           	callstack 0
  7928                           
  7929                           	psect	rparam
  7930  0000                     
  7931                           	psect	idloc
  7932                           
  7933                           ;Config register IDLOC0 @ 0x200000
  7934                           ;	unspecified, using default values
  7935  200000                     	org	2097152
  7936  200000  FF                 	db	255
  7937                           
  7938                           ;Config register IDLOC1 @ 0x200001
  7939                           ;	unspecified, using default values
  7940  200001                     	org	2097153
  7941  200001  FF                 	db	255
  7942                           
  7943                           ;Config register IDLOC2 @ 0x200002
  7944                           ;	unspecified, using default values
  7945  200002                     	org	2097154
  7946  200002  FF                 	db	255
  7947                           
  7948                           ;Config register IDLOC3 @ 0x200003
  7949                           ;	unspecified, using default values
  7950  200003                     	org	2097155
  7951  200003  FF                 	db	255
  7952                           
  7953                           ;Config register IDLOC4 @ 0x200004
  7954                           ;	unspecified, using default values
  7955  200004                     	org	2097156
  7956  200004  FF                 	db	255
  7957                           
  7958                           ;Config register IDLOC5 @ 0x200005
  7959                           ;	unspecified, using default values
  7960  200005                     	org	2097157
  7961  200005  FF                 	db	255
  7962                           
  7963                           ;Config register IDLOC6 @ 0x200006
  7964                           ;	unspecified, using default values
  7965  200006                     	org	2097158
  7966  200006  FF                 	db	255
  7967                           
  7968                           ;Config register IDLOC7 @ 0x200007
  7969                           ;	unspecified, using default values
  7970  200007                     	org	2097159
  7971  200007  FF                 	db	255
  7972                           
  7973                           	psect	config
  7974                           
  7975                           ; Padding undefined space
  7976  300000                     	org	3145728
  7977  300000  FF                 	db	255
  7978                           
  7979                           ;Config register CONFIG1H @ 0x300001
  7980                           ;	Oscillator Selection bits
  7981                           ;	OSC = INTIO7, Internal oscillator block, CLKO function on RA6, port function on RA7
  7982                           ;	Fail-Safe Clock Monitor Enable bit
  7983                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7984                           ;	Internal/External Oscillator Switchover bit
  7985                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7986  300001                     	org	3145729
  7987  300001  09                 	db	9
  7988                           
  7989                           ;Config register CONFIG2L @ 0x300002
  7990                           ;	Power-up Timer Enable bit
  7991                           ;	PWRT = OFF, PWRT disabled
  7992                           ;	Brown-out Reset Enable bits
  7993                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7994                           ;	Brown Out Reset Voltage bits
  7995                           ;	BORV = 3, Minimum setting
  7996  300002                     	org	3145730
  7997  300002  1F                 	db	31
  7998                           
  7999                           ;Config register CONFIG2H @ 0x300003
  8000                           ;	Watchdog Timer Enable bit
  8001                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8002                           ;	Watchdog Timer Postscale Select bits
  8003                           ;	WDTPS = 32768, 1:32768
  8004  300003                     	org	3145731
  8005  300003  1E                 	db	30
  8006                           
  8007                           ; Padding undefined space
  8008  300004                     	org	3145732
  8009  300004  FF                 	db	255
  8010                           
  8011                           ;Config register CONFIG3H @ 0x300005
  8012                           ;	CCP2 MUX bit
  8013                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8014                           ;	PORTB A/D Enable bit
  8015                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8016                           ;	Low-Power Timer1 Oscillator Enable bit
  8017                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8018                           ;	MCLR Pin Enable bit
  8019                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8020  300005                     	org	3145733
  8021  300005  83                 	db	131
  8022                           
  8023                           ;Config register CONFIG4L @ 0x300006
  8024                           ;	Stack Full/Underflow Reset Enable bit
  8025                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8026                           ;	Single-Supply ICSP Enable bit
  8027                           ;	LVP = ON, Single-Supply ICSP enabled
  8028                           ;	Extended Instruction Set Enable bit
  8029                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8030                           ;	Background Debugger Enable bit
  8031                           ;	DEBUG = 0x1, unprogrammed default
  8032  300006                     	org	3145734
  8033  300006  85                 	db	133
  8034                           
  8035                           ; Padding undefined space
  8036  300007                     	org	3145735
  8037  300007  FF                 	db	255
  8038                           
  8039                           ;Config register CONFIG5L @ 0x300008
  8040                           ;	Code Protection bit
  8041                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8042                           ;	Code Protection bit
  8043                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8044                           ;	Code Protection bit
  8045                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8046                           ;	Code Protection bit
  8047                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8048  300008                     	org	3145736
  8049  300008  0F                 	db	15
  8050                           
  8051                           ;Config register CONFIG5H @ 0x300009
  8052                           ;	Boot Block Code Protection bit
  8053                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8054                           ;	Data EEPROM Code Protection bit
  8055                           ;	CPD = OFF, Data EEPROM not code-protected
  8056  300009                     	org	3145737
  8057  300009  C0                 	db	192
  8058                           
  8059                           ;Config register CONFIG6L @ 0x30000A
  8060                           ;	Write Protection bit
  8061                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8062                           ;	Write Protection bit
  8063                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8064                           ;	Write Protection bit
  8065                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8066                           ;	Write Protection bit
  8067                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8068  30000A                     	org	3145738
  8069  30000A  0F                 	db	15
  8070                           
  8071                           ;Config register CONFIG6H @ 0x30000B
  8072                           ;	Configuration Register Write Protection bit
  8073                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8074                           ;	Boot Block Write Protection bit
  8075                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8076                           ;	Data EEPROM Write Protection bit
  8077                           ;	WRTD = OFF, Data EEPROM not write-protected
  8078  30000B                     	org	3145739
  8079  30000B  E0                 	db	224
  8080                           
  8081                           ;Config register CONFIG7L @ 0x30000C
  8082                           ;	Table Read Protection bit
  8083                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8084                           ;	Table Read Protection bit
  8085                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8086                           ;	Table Read Protection bit
  8087                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8088                           ;	Table Read Protection bit
  8089                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8090  30000C                     	org	3145740
  8091  30000C  0F                 	db	15
  8092                           
  8093                           ;Config register CONFIG7H @ 0x30000D
  8094                           ;	Boot Block Table Read Protection bit
  8095                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8096  30000D                     	org	3145741
  8097  30000D  40                 	db	64
  8098                           tosu	equ	0xFFF
  8099                           tosh	equ	0xFFE
  8100                           tosl	equ	0xFFD
  8101                           stkptr	equ	0xFFC
  8102                           pclatu	equ	0xFFB
  8103                           pclath	equ	0xFFA
  8104                           pcl	equ	0xFF9
  8105                           tblptru	equ	0xFF8
  8106                           tblptrh	equ	0xFF7
  8107                           tblptrl	equ	0xFF6
  8108                           tablat	equ	0xFF5
  8109                           prodh	equ	0xFF4
  8110                           prodl	equ	0xFF3
  8111                           indf0	equ	0xFEF
  8112                           postinc0	equ	0xFEE
  8113                           postdec0	equ	0xFED
  8114                           preinc0	equ	0xFEC
  8115                           plusw0	equ	0xFEB
  8116                           fsr0h	equ	0xFEA
  8117                           fsr0l	equ	0xFE9
  8118                           wreg	equ	0xFE8
  8119                           indf1	equ	0xFE7
  8120                           postinc1	equ	0xFE6
  8121                           postdec1	equ	0xFE5
  8122                           preinc1	equ	0xFE4
  8123                           plusw1	equ	0xFE3
  8124                           fsr1h	equ	0xFE2
  8125                           fsr1l	equ	0xFE1
  8126                           bsr	equ	0xFE0
  8127                           indf2	equ	0xFDF
  8128                           postinc2	equ	0xFDE
  8129                           postdec2	equ	0xFDD
  8130                           preinc2	equ	0xFDC
  8131                           plusw2	equ	0xFDB
  8132                           fsr2h	equ	0xFDA
  8133                           fsr2l	equ	0xFD9
  8134                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    0
    Data        7
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     126
    BANK0           128     44     107
    BANK1           256      0      36
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_86(CODE[3]), 
		 -> STR_81(CODE[4]), STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), 
		 -> STR_62(CODE[4]), STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), 
		 -> STR_42(CODE[3]), STR_37(CODE[3]), STR_32(CODE[4]), STR_27(CODE[3]), 
		 -> STR_23(CODE[3]), STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), 
		 -> STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_86(CODE[3]), 
		 -> STR_81(CODE[4]), STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), 
		 -> STR_62(CODE[4]), STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), 
		 -> STR_42(CODE[3]), STR_37(CODE[3]), STR_32(CODE[4]), STR_27(CODE[3]), 
		 -> STR_23(CODE[3]), STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), 
		 -> STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    S1017_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   47526
                                            124 COMRAM     2     2      0
                                             22 BANK0     22    22      0
                      _ADC_intialize
                      _CLK_intialize
                    _PORT_Initialize
                           _Read_ADC
                          _UART_Init
                   _UART_send_string
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   47133
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           23    15      8   46759
                                            111 COMRAM    13     5      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45996
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45535
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7759
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6799
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2595
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    6244
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7398
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5293
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2147
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2101
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1746
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     0      2     219
                                              1 COMRAM     2     0      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            3     0      3      76
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             6     4      2      24
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _PORT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLK_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_intialize
   _CLK_intialize
   _PORT_Initialize
   _Read_ADC
   _UART_Init
   _UART_send_string
     _UART_send_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      24       7       14.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2C      6B       5       83.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10D      15        0.0%
DATA                 0      0     10D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 14:39:37 2021

                        _i 0096                         l25 3322                         l28 3330  
                       l72 3302                         l66 3316                         l69 32F0  
                       l85 300A        ___wmul@multiplicand 0003             ?_CLK_intialize 0001  
                      l121 32EC                        l115 316A                        l124 32CC  
                      l118 3198                        l251 282C                        l238 2542  
                      _ADC 0080                        l562 2A18                        l810 2948  
                      l802 32A6                        l572 2C9E                        l910 207E  
                      l903 1B62                        l815 2928                        l569 2A38  
                      l579 2CBE                        l908 2076                        l861 2E4E  
                      l917 21C4                        l942 26C8                        l926 25C4  
                      l919 222A                        l872 2B7E                        l856 2DD0  
                      l928 25CC                        l937 2676                        l938 26C0  
                      l962 1B9C                        l875 2BC0                        l859 2E12  
                      l883 1922                        l947 1E74                        l971 1C38  
                      l964 1BA4                        l877 2BEE                        l885 192A  
                      l957 203C                        l949 1E7C                        l985 1DD6  
                      l987 1E3A                        _abs 30E4                        _pad 2D8A  
                      wreg 000FE8                       l1001 074C                       l1104 23B2  
                     l1112 315E                       l1024 1880                       l1107 23BA  
                     ?_abs 0013                       l1132 3208                       l1118 3240  
                     l1126 305C                       l3000 12AC                       l1073 311A  
                     l1147 2D88                       l1155 30A0                       l2220 2CD2  
                     l2300 2522                       l1076 3122                       l1164 3276  
                     l3020 13DC                       l3012 136A                       l3004 12E4  
                     l3100 184A                       l1068 2F46                       l1069 2F4E  
                     l1158 3332                       l2222 2CE4                       l2310 26FC  
                     l3102 186E                       l3030 1498                       l3022 1412  
                     l3014 138E                       l3006 131A                       l1183 2FAC  
                     l2224 2CEE                       l2320 2754                       l2312 2700  
                     l2304 26CA                       l2400 30E4                       l2232 305E  
                     l2240 3242                       l1168 2B16                       l3032 14CE  
                     l3120 2F2A                       l3200 3278                       l3122 32F0  
                     l2226 2D0C                       l2218 2CC0                       l2330 27D6  
                     l2322 2768                       l2314 270E                       l2306 26CE  
                     l2402 30FE                       l2234 306A                       l2242 324E  
                     l2250 319A                       l1178 2FA4                       l3050 1618  
                     l3034 14F4                       l3042 1576                       l3114 2EEE  
                     l3130 284A                       l3202 3282                       l3210 2E58  
                     l3124 32FE                       l2228 2D42                       l2260 23BC  
                     l2324 2776                       l2332 27DC                       l2316 272E  
                     l2308 26DC                       l2236 307C                       l2244 3252  
                     l2500 1A60                       l2340 294A                       l2404 31D2  
                     l2412 2F50                       l3060 16A0                       l3044 15AC  
                     l3036 1504                       l3028 1462                       l3116 2EF6  
                     l3140 288A                       l3220 2E90                       l3212 2E68  
                     l1189 31D0                       l2254 32A8                       l2422 320A  
                     l2430 3024                       l2270 2400                       l2262 23C0  
                     l2334 27EC                       l2326 27A4                       l2318 274C  
                     l2238 3080                       l2246 326A                       l2502 1A7A  
                     l2510 1ADC                       l2350 299E                       l2342 2956  
                     l3062 16B6                       l3070 1704                       l3046 15E2  
                     l3038 153A                       l3118 2F04                       l3150 2918  
                     l3142 289C                       l3134 2852                       l3126 282E  
                     l3222 2EA6                       l3214 2E6C                       l3206 2E50  
                     l3160 331C                       l2256 32C4                       l2432 3052  
                     l2440 2B2C                       l2280 2456                       l2272 2420  
                     l2264 23CE                       l2336 280C                       l2328 27C4  
                     l2520 1B22                       l2512 1AEE                       l2504 1A98  
                     l2600 2626                       l2360 2A12                       l2352 29B0  
                     l2344 2974                       l2408 3124                       l2416 2F86  
                     l3072 173A                       l3064 16C4                       l3048 1608  
                     l3056 1658                       l3152 2930                       l3144 28C0  
                     l3136 2870                       l3128 2840                       l3224 2EA8  
                     l3216 2E78                       l3208 2E50                       l3170 32D0  
                     l3162 332C                       l2434 3056                       l2426 300C  
                     l2442 2B38                       l2290 24D8                       l2282 246A  
                     l2274 2424                       l2266 23EE                       l2522 1B2A  
                     l2514 1AFE                       l2506 1AB2                       l2530 204E  
                     l2602 2632                       l2354 29DE                       l2346 297C  
                     l2370 2C38                       l2362 2BF0                       l2418 2F98  
                     l3090 182C                       l3074 1770                       l3058 167C  
                     l3146 28D2                       l3154 2940                       l3138 287E  
                     l3226 2EB4                       l3218 2E8E                       l3172 32D8  
                     l3164 3304                       l3180 2FAE                       l2428 3010  
                     l2460 2BD0                       l2452 2B76                       l2444 2B44  
                     l2292 24DA                       l2284 2478                       l2276 2430  
                     l2268 23F2                       l2380 2D9A                       l2516 1B04  
                     l2524 1B3A                       l2508 1ACC                       l2540 20B2  
                     l2532 2050                       l2612 268A                       l2604 2650  
                     l2356 29FE                       l2348 2990                       l2372 2C66  
                     l2364 2C0E                       l2620 1E4C                       l2700 1D58  
                     l3076 1796                       l3084 17E6                       l3148 28E2  
                     l3228 2EDA                       l3174 32DA                       l3158 3318  
                     l3190 3168                       l3166 330E                       l3182 2FB2  
                     l2462 2BE2                       l2454 2B8A                       l2446 2B52  
                     l2438 2B18                       l2294 24EC                       l2286 248A  
                     l2278 244E                       l2390 2DF0                       l2382 2DAE  
                     l2518 1B16                       l2470 18CA                       l2550 20E4  
                     l2542 20BE                       l2534 206A                       l2614 269E  
                     l2606 2654                       l2358 2A00                       l2374 2C86  
                     l2366 2C16                       l2630 1EB4                       l2622 1E4E  
                     l2710 1DE6                       l2702 1D74                       l3086 180A  
                     l3094 1838                       l3078 17A6                       l3176 32E8  
                     l3168 32CE                       l3192 3178                       l3184 2FD6  
                     l2720 222C                       l2456 2B9E                       l2448 2B64  
                     l2288 24B8                       l2296 24F2                       l2392 2DF4  
                     l2384 2DBC                       l2480 1932                       l2472 18EA  
                     l2560 219A                       l2552 20EA                       l2544 20C4  
                     l2536 20A6                       l2528 203E                       l2616 26A2  
                     l2608 2658                       l2376 2C98                       l2368 2C2A  
                     l2632 1EBA                       l2640 1FA0                       l2624 1E68  
                     l2712 1DEC                       l2704 1D92                       l3088 1818  
                     l3280 070C                       l2800 06C2                       l3178 32EA  
                     l3194 318E                       l3186 2FDA                       l3282 22E8  
                     l2730 229A                       l2722 2240                       l2458 2BA2  
                     l2298 2502                       l2394 2E22                       l2386 2DC8  
                     l2378 2D8A                       l2490 1968                       l2482 1944  
                     l2474 18FA                       l2466 1882                       l2570 21FC  
                     l2562 21B4                       l2546 20CC                       l2554 2148  
                     l2538 20AE                       l2642 1FB2                       l2650 2014  
                     l2634 1F30                       l2626 1EA4                       l2618 1E3C  
                     l2714 1DFC                       l2706 1DAC                       l3196 3190  
                     l3188 3160                       l2740 22C2                       l2732 229E  
                     l2724 2244                       l2396 2E36                       l2388 2DDC  
                     l2492 196E                       l2484 1952                       l2476 18FC  
                     l2468 18A2                       l2564 21D4                       l2572 2202  
                     l2556 2162                       l2548 20DE                       l2580 255E  
                     l2644 1FD0                       l2636 1F36                       l2628 1EAC  
                     l2716 1E12                       l2708 1DC6                       l2660 1B90  
                     l2900 0C5C                       l2820 075C                       l2812 06DA  
                     l2804 06CA                       l2742 22CA                       l2726 2248  
                     l2494 19F0                       l2486 1958                       l2478 1916  
                     l2566 21E6                       l2558 2180                       l2590 25A2  
                     l2582 2570                       l2646 1FEA                       l2638 1F3C  
                     l2670 1BF2                       l2662 1BBA                       l2654 1B64  
                     l2910 0D18                       l2902 0C92                       l2830 07D4  
                     l2822 075E                       l2752 2372                       l2744 22FE  
                     l2736 22A4                       l2728 2264                       l2496 19F6  
                     l2488 1960                       l2568 21EC                       l2584 2578  
                     l2576 2544                       l2648 2004                       l2672 1BF8  
                     l2664 1BC2                       l2656 1B74                       l2912 0D5E  
                     l2832 07F4                       l2840 085A                       l2824 0782  
                     l2816 06E6                       l2808 06D2                       l2754 2384  
                     l2738 22BA                       l2498 19FC                       l2594 25F0  
                     l2586 258C                       l2578 2556                       l2770 2A7E  
                     l2762 2A3A                       l2690 1CCA                       l2682 1C6C  
                     l2674 1C00                       l2666 1BE2                       l2658 1B76  
                     l2850 08F4                       l2842 087E                       l2834 0802  
                     l2826 07B8                       l2818 073A                       l2756 2396  
                     l2748 2334                       l2596 2604                       l2588 2594  
                     l2772 2A9A                       l2764 2A64                       l2684 1C7E  
                     l2692 1CDE                       l2676 1C1C                       l2668 1BEA  
                     l2940 0F14                       l2932 0E8E                       l2924 0E1C  
                     l2916 0D96                       l2908 0CE2                       l2852 0914  
                     l2844 0888                       l2860 097A                       l2828 07C6  
                     l2598 2608                       l2774 2AB6                       l2694 1CEE  
                     l2678 1C2C                       l2942 0F4A                       l2950 0F9A  
                     l2934 0EC4                       l2926 0E40                       l2918 0DCC  
                     l2870 0A22                       l2862 099E                       l2854 0922  
                     l2846 0896                       l2838 0848                       l2790 0698  
                     l2782 0650                       ?_pad 0011                       l2776 2AC8  
                     l2768 2A70                       l2696 1CF4                       l2688 1CB8  
                     l2952 0FD0                       l2960 101C                       l2944 0F82  
                     l2880 0B0E                       l2872 0A58                       l2864 09D0  
                     l2848 08BA                       l2792 06A4                       l2784 0674  
                     l2778 2AF2                       l2698 1CFA                       l2962 1040  
                     l2970 108A                       l2954 1008                       l2946 0F8E  
                     l2890 0BB6                       l2882 0B44                       l2874 0AA0  
                     l2858 0968                       l2794 06A8                       l2786 0682  
                     l2972 10C0                       l2980 110C                       l2964 1076  
                     l2892 0BDA                       l2868 09EC                       l2796 06BA  
                     l2788 0694                       l2990 11DA                       l2982 1130  
                     l2974 10F8                       l2878 0AD8                       l2992 1210  
                     l2984 117A                       l2888 0B92                       l2898 0C26  
                     l2996 1230                       l2988 11B6                       l2998 1266  
                     STR_1 0601                       STR_2 0614                       STR_3 0621  
                     STR_5 0621                       STR_7 0625                       STR_9 0625  
                     u2000 2974                       u2001 2970                       u2010 299E  
                     u2011 299A                       u2100 30FE                       u2020 29DE  
                     u2101 30FA                       u2021 29DA                       u2030 2C0E  
                     u2110 3202                       u2031 2C0A                       u2111 31FC  
                     u2200 3024                       u2040 2C38                       u2120 3204  
                     u3000 0782                       u2201 3020                       u2041 2C34  
                     u3001 077E                       u2210 3052                       u2050 2C66  
                     u2130 3158                       u3010 07C6                       u2211 304E  
                     u2051 2C62                       u2131 3152                       u3011 07C2  
                     u2220 2B2C                       u2060 2D9A                       u2300 18FA  
                     u2140 315A                       u3100 099E                       u3020 0842  
                     u2221 2B28                       u2061 2D96                       u2301 18F6  
                     u3101 099A                       u3021 083C                       u2230 2B52  
                     u2070 2DBC                       u2310 1916                       u2150 2F80  
                     u3110 0A22                       u3030 0844                       u2231 2B4E  
                     u2071 2DB8                       u2311 1912                       u2151 2F7A  
                     u3111 0A1E                       u2240 2B72                       u2080 2E12  
                     u2400 1AFE                       u2320 1944                       u2160 2F82  
                     u3200 0DCC                       u3120 0A58                       u3040 085A  
                     u2241 2B6E                       u2081 2E0E                       u2401 1AFA  
                     u2321 1940                       u3201 0DC8                       u3121 0A54  
                     u3041 0856                       u2250 2BC0                       u2090 2E22  
                     u2410 1B16                       u2330 1952                       u2170 2F98  
                     u3210 0E40                       u3130 0B0E                       u3050 087E  
                     u2251 2BBC                       u2091 2E1E                       u2411 1B12  
                     u2331 194E                       u2171 2F94                       u3211 0E3C  
                     u3131 0B0A                       u3051 087A                       u2180 323A  
                     u2260 2BD0                       u2340 1A7A                       u2500 21D4  
                     u2420 204E                       u3300 131A                       u3220 0EC4  
                     u3140 0B44                       u3060 08BA                       u2181 3234  
                     u2261 2BCC                       u2341 1A76                       u2501 21D0  
                     u2421 204A                       u3301 1316                       u3221 0EC0  
                     u3141 0B40                       u3061 08B6                       u2190 323C  
                     u2350 1A98                       u2270 18B2                       u2510 21E6  
                     u2430 206A                       u3310 138E                       u3230 0F4A  
                     u3150 0BB6                       u3070 0962                       u2351 1A94  
                     u2271 18AC                       u2511 21E2                       u2431 2066  
                     u3311 138A                       u3231 0F46                       u3151 0BB2  
                     u3071 095C                       u1800 2D0C                       u2360 1AB2  
                     u2280 18B4                       u2440 2122                       u2600 26C0  
                     u3400 1770                       u3320 1412                       u3240 0FD0  
                     u3160 0BDA                       u3080 0964                       u1801 2D08  
                     u2361 1AAE                       u2601 26BC                       u2521 254E  
                     u3401 176C                       u3321 140E                       u3241 0FCC  
                     u3161 0BD6                       u1810 2D42                       u2370 1ACC  
                     u2290 18CA                       u2450 2162                       u2530 2570  
                     u2610 1E4C                       u3410 180A                       u3330 1498  
                     u3250 1040                       u3170 0C5C                       u3090 097A  
                     u1811 2D3E                       u2371 1AC8                       u2291 18C6  
                     u2451 215E                       u2531 256C                       u2611 1E48  
                     u3411 1806                       u3331 1494                       u3251 103C  
                     u3171 0C58                       u3091 0976                       u3500 2FFA  
                     u1900 2478                       u1820 30A0                       u2380 1ADC  
                     u2460 2180                       u2540 25A2                       u2620 1E68  
                     u2700 1BBA                       u3340 14CE                       u3260 10C0  
                     u3180 0C92                       u3420 2F46                       u1901 2474  
                     u1821 309C                       u2381 1AD8                       u2461 217C  
                     u2445 2110                       u2541 259E                       u2621 1E64  
                     u2701 1BB6                       u3341 14CA                       u3261 10BC  
                     u3181 0C8E                       u3421 2F42                       u3430 32FE  
                     u3510 300A                       u1910 24B8                       u1830 326A  
                     u2390 1AEE                       u2470 219A                       u2550 25C0  
                     u2630 1FB2                       u2710 1C1C                       u3350 15AC  
                     u3270 1130                       u3190 0D18                       u3431 32FA  
                     u3511 3006                       u1911 24B4                       u1831 3266  
                     u2391 1AEA                       u2471 2196                       u2551 25BC  
                     u2631 1FAE                       u2711 1C18                       u3351 15A8  
                     u3271 112C                       u3191 0D14                       u3520 3178  
                     u1920 2502                       u2480 21B4                       u2560 25EC  
                     u2640 1FD0                       u1840 31CA                       u2800 1D92  
                     u2720 1C66                       u3360 15E2                       u3280 11DA  
                     u3440 2840                       u3521 3174                       u1921 24FE  
                     u2481 21B0                       u2561 25E8                       u2641 1FCC  
                     u1841 31C4                       u2801 1D8E                       u2721 1C60  
                     u3361 15DE                       u3281 11D6                       u3441 283C  
                     u1930 26DC                       u2490 21C4                       u2570 2626  
                     u2650 1FEA                       u1850 31CC                       u2810 1DAC  
                     u2730 1C68                       u3370 167C                       u3290 1266  
                     u3450 2870                       u3507 2FF0                       u1931 26D8  
                     u2491 21C0                       u2571 2622                       u2651 1FE6  
                     u2811 1DA8                       u3371 1678                       u3291 1262  
                     u3451 286C                       u2900 2384                       u1780 2CD2  
                     u1860 23CE                       u1940 270E                       u2580 2676  
                     u2660 2004                       u2820 1DC6                       u2740 1C7E  
                     u3380 16A0                       u3460 28D2                       u2901 2380  
                     u1781 2CCE                       u1861 23CA                       u1941 270A  
                     u2581 2672                       u2661 2000                       u2821 1DC2  
                     u2741 1C7A                       u3381 169C                       u3461 28CE  
                     u2910 2396                       u1790 2CE4                       u1870 2400  
                     u1950 274C                       u2590 2686                       u2670 2014  
                     u2830 1DD6                       u2750 1CB2                       u3390 173A  
                     u3470 28E2                       u2911 2392                       u1791 2CE0  
                     u1871 23FC                       u1951 2748                       u2591 2682  
                     u2671 2010                       u2831 1DD2                       u2751 1CAC  
                     u3391 1736                       u3471 28DE                       u1960 2776  
                     u2920 2A64                       u2840 1DE6                       u2760 1CB4  
                     u2680 1B74                       u3480 2918                       u1881 242A  
                     u1961 2772                       u2921 2A60                       u2841 1DE2  
                     u2681 1B70                       u3481 2914                       u3537 2E82  
                     u3490 2FD2                       u2850 2264                       u1890 244E  
                     u1970 27A4                       u2930 2A9A                       u2770 1CCA  
                     u2690 1B90                       u2851 2260                       u1891 244A  
                     u1971 27A0                       u2931 2A96                       u2771 1CC6  
                     u2691 1B8C                       u3547 2E9A                       u2860 229A  
                     u1980 27EC                       u2940 2AB6                       u2780 1D32  
                     u2861 2296                       u1981 27E8                       u2941 2AB2  
                     u2870 22B6                       u2950 2AC8                       u2790 1D74  
                     u2871 22B2                       u2951 2AC4                       u1991 2950  
                     u2791 1D70                       u2880 236C                       u2960 2AF2  
                     u3497 2FC8                       u2881 2366                       u2961 2AEE  
                     u2785 1D20                       u2890 236E                       u2970 0674  
                     u2971 0670                       u2980 074C                       _RCIF 007CF5  
                     u2981 0748                       u2990 075C                       u2991 0758  
                     _TXIF 007CF4                       abs@a 0013                       _dbuf 0098  
                     _atoi 222C                       _ctoa 2B18                       _main 2E50  
                     _dtoa 1882               main@_adc_str 00CE                       _prec 0090  
                     _otoa 203E                       _nout 008C                       pad@i 0018  
                     pad@p 0015                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf1 000FE7                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001A                       fsr2l 000FD9                       _stoa 2544  
                     _utoa 1E3C                       _xtoa 1B64                       prodh 000FF4  
                     prodl 000FF3                       start 0000               ___param_bank 000000  
                    ??_abs 0015  __size_of_UART_send_string 005E                      ??_pad 0017  
          __end_of___aodiv 2544                      ?_atoi 0008                      ?_ctoa 000A  
                    ?_main 0001                      ?_dtoa 001C            __end_of___aomod 282E  
                    STR_21 063C                      STR_14 0622                      STR_30 062D  
                    STR_23 063C                      STR_32 062D                      STR_40 0645  
                    STR_25 063F                      STR_18 0626                      STR_42 0645  
                    STR_27 063F                      STR_52 062A                      STR_60 0631  
                    STR_37 062E                      STR_45 0629                      STR_62 0631  
                    STR_70 0648                      STR_47 0629                      STR_55 0642  
                    STR_72 0648                      STR_81 061D                      STR_57 0642  
                    STR_90 061E                      STR_67 0632                      STR_75 0635  
                    STR_77 0635                      STR_93 064B                      STR_86 0636  
                    STR_95 064B                      STR_79 061D                      STR_97 0639  
                    ?_otoa 001C                      STR_99 0639                      ?_stoa 000A  
                    ?_utoa 001C            __end_of___lodiv 2A3A                      ?_xtoa 001C  
                    _LATA4 007C4C                      _LATA5 007C4D                      _LATA6 007C4E  
          __end_of___lomod 2CC0                      _RCREG 000FAE               vfpfcnvrt@fmt 0045  
             vfpfcnvrt@llu 0060                      _SPBRG 000FAF                      _TRISA 000F92  
                    _TXREG 000FAD         __size_of_UART_Init 0014                      _flags 0092  
                    _errno 0094                      _fputc 2CC0            __end_of_isalpha 3160  
                    _fputs 305E            __end_of_isdigit 3242                      _value 0084  
                    atoi@n 0015                      pad@fp 0011                      atoi@s 0008  
                    _width 008E                      ctoa@c 000C                      _putch 3332  
                    ctoa@l 000E                      ctoa@w 0010                      dtoa@d 001E  
                    dtoa@i 003E                      dtoa@n 0036                      dtoa@p 0030  
                    dtoa@s 0034                      dtoa@w 0032            __end_of_islower 31D2  
          __end_of_isspace 305E            __end_of_isupper 320A                      tablat 000FF5  
                    otoa@d 001E                      otoa@i 003C                      otoa@n 0034  
                    otoa@p 002E                      otoa@t 0030                      otoa@w 0032  
                    plusw1 000FE3                      plusw2 000FDB                      stoa@i 0016  
                    stoa@l 001E                      stoa@p 001C                      stoa@s 000C  
                    stoa@w 0018                      utoa@d 001E                      utoa@i 003A  
                    utoa@n 0032                      utoa@p 002E                      utoa@w 0030  
                    status 000FD8                      xtoa@c 0041                      xtoa@d 001E  
                    xtoa@i 003F                      xtoa@n 0037                      xtoa@p 0033  
                    xtoa@w 0035                      xtoa@x 0026            __end_of_strncmp 2B18  
          __end_of_toupper 2FAE           ___lodiv@dividend 0001          ??_PORT_Initialize 0001  
             _toupper$1391 000D            __initialization 30A2               __end_of_atoi 23BC  
             __end_of_ctoa 2BF0               __end_of_main 2EEE               __end_of_dtoa 1B64  
             __end_of_otoa 222C               __end_of_stoa 26CA               __end_of_utoa 203E  
             __end_of_xtoa 1E3C           __end_of_Read_ADC 319A            ??_CLK_intialize 0001  
                   ??_atoi 000A                     ??_ctoa 000D                     ??_main 007D  
                   ??_dtoa 0026                     ??_otoa 0026                     ??_stoa 000E  
                   ??_utoa 0026                     ??_xtoa 0027              __activetblptr 000002  
         ___lodiv@quotient 0011                     ?_fputc 0001                     ?_fputs 000A  
                   _ADRESH 000FC4                     _ADRESL 000FC3                     ?_putch 0001  
            vfpfcnvrt@done 004F                     _SPBRGH 000FB0                     _TRISB1 007C99  
                   _TRISC6 007CA6                     _TRISC7 007CA7               vfprintf@cfmt 006E  
        __end_of_UART_Init 3318                  ??___aodiv 0011                  ??___aomod 0011  
                   ___wmul 32A8                  ??___lodiv 0011                  ??___lomod 0011  
                   _buffer 0100                     clear_0 30C8                     clear_1 30D4  
                   pad@buf 0013                     ctoa@fp 000A                     dtoa@fp 001C  
                   _strlen 3242                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_isalpha 0003  
                ??_isdigit 0003                  ??_islower 0003               __mediumconst 0000  
                ??_isspace 0003                     otoa@fp 001C                     tblptrh 000FF7  
                ??_isupper 0003                     tblptrl 000FF6                     tblptru 000FF8  
                   stoa@cp 001A                     stoa@fp 000A                     putch@c 0001  
         __end_of_vfprintf 2F50                     utoa@fp 001C           __end_of_snprintf 32A8  
                   xtoa@fp 001C                  ??_strncmp 0007                  ??_toupper 0009  
               __accesstop 0080    __end_of__initialization 30DA              ___rparam_used 000001  
           __pcstackCOMRAM 0001               __pidataBANK0 3324           _UART_send_string 2FAE  
            __end_of_fputc 2D8A              __end_of_fputs 30A2              __end_of_putch 3334  
                  ??_fputc 0005                    ??_fputs 000E                    ??_putch 0001  
               __pbssBANK0 0080                 __pbssBANK1 0100                  ?_Read_ADC 0001  
   __size_of_ADC_intialize 0020                    ?___wmul 0001                    ?_strlen 0001  
       __size_of_vfpfcnvrt 1232            _PORT_Initialize 332C    __size_of_UART_send_char 0016  
         ___lomod@dividend 0001                 ??_Read_ADC 0003                    __Hparam 0000  
                  __Lparam 0000         __size_of_vsnprintf 011C                    ___aodiv 23BC  
                  ___aomod 26CA            __size_of___wmul 0026                    ___lodiv 294A  
                  ___lomod 2BF0                  ?_vfprintf 0068               __psmallconst 0600  
                ?_snprintf 00C2                    __pcinit 30A2              _ADC_intialize 32CE  
                  __ramtop 0600                    __ptext0 2E50                    __ptext1 3278  
                  __ptext2 282E                    __ptext3 2EEE                    __ptext4 0650  
                  __ptext5 1B64                    __ptext6 2F50                    __ptext7 319A  
                  __ptext8 31D2                    __ptext9 3124           Read_ADC@_voltage 0005  
          __size_of_strlen 0036               __size_of_abs 0040               __size_of_pad 00C6  
                  _isalpha 3124                    _isdigit 320A                    _islower 319A  
                  _isspace 300C                    _isupper 31D2                    atoi@neg 000E  
                  main@adc 00E2                    _voltage 0088                    _strncmp 2A3A  
                  _toupper 2F50       end_of_initialization 30DA                    fputc@fp 0003  
            __Lmediumconst 0000                    fputs@fp 000C          __end_of_vfpfcnvrt 1882  
                _RCSTAbits 000FAB                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 006E             ?_ADC_intialize 0001                 ??_snprintf 007D  
                  strlen@a 0003                    strlen@s 0001                  _UART_Init 3304  
  __end_of_PORT_Initialize 3332      __end_of_CLK_intialize 3324         UART_Init@baud_rate 0001  
        __end_of_vsnprintf 294A   __end_of_UART_send_string 300C                  _TXSTAbits 000FAC  
              vfpfcnvrt@ap 0047                vfpfcnvrt@cp 004D                vfpfcnvrt@fp 0043  
              vfpfcnvrt@ll 0055             __end_of___wmul 32CE                vfpfcnvrt@vp 005D  
              _BAUDCONbits 000FB8                 ?_UART_Init 0001             __end_of_strlen 3278  
      start_initialization 30A2            ___lodiv@divisor 0009            ___lodiv@counter 0019  
           _UART_send_char 32EE                __end_of_abs 3124                __end_of_pad 2E50  
        __size_of_Read_ADC 003A                vfprintf@fmt 006A            ??_ADC_intialize 0001  
                 ??___wmul 0005                __pdataBANK0 00E4           ?_PORT_Initialize 0001  
                 ??_strlen 0003     __end_of_UART_send_char 3304               vsnprintf@cnt 00BA  
             vsnprintf@fmt 0074              __pcstackBANK0 00B8           ___aodiv@dividend 0001  
              snprintf@fmt 00C6                  _atoi$1303 0010                  _atoi$1304 0014  
                _atoi$1305 0012                  _dtoa$1126 002E                   ?___aodiv 0001  
                 ?___aomod 0001           ___aodiv@quotient 0013                   ?___lodiv 0001  
                 ?___lomod 0001                ??_UART_Init 0004           UART_send_char@bt 0001  
        __size_of_vfprintf 0062          __size_of_snprintf 0030            ___lomod@divisor 0009  
              __smallconst 0600            ?_UART_send_char 0001            ___lomod@counter 0011  
                 ?_isalpha 0001                   ?_isdigit 0001                   ?_islower 0001  
                 ?_isspace 0001                   ?_isupper 0001             __size_of_fputc 00CA  
           __size_of_fputs 0044                   ?_strncmp 0001                   ?_toupper 0007  
           __size_of_putch 0002             ___wmul@product 0005                   _PIR1bits 000F9E  
                _vfpfcnvrt 0650                  _xtoa$1163 002F                  _xtoa$1164 0031  
               _ADCON0bits 000FC2                 _ADCON1bits 000FC1                 _ADCON2bits 000FC0  
        ___wmul@multiplier 0001      UART_send_string@st_pt 0002               _isspace$1331 0007  
               vfpfcnvrt@c 005F                  copy_data0 30B6          ?_UART_send_string 0002  
                _vsnprintf 282E                   _Read_ADC 3160         ??_UART_send_string 0004  
                 __Hrparam 0000                 vfprintf@ap 006C                   __Lrparam 0000  
               vfprintf@fp 0068           __size_of___aodiv 0188           __size_of___aomod 0164  
              vsnprintf@ap 0076           __size_of___lodiv 00F0           __size_of___lomod 00D0  
               ?_vfpfcnvrt 0043                 snprintf@ap 00CC            ___aodiv@divisor 0009  
          ___aodiv@counter 0011           __size_of_isalpha 003C           __size_of_isdigit 0038  
         __size_of_islower 0038           __size_of_isspace 0052                   __ptext10 1E3C  
                 __ptext11 2BF0                   __ptext20 30E4                   __ptext12 294A  
                 __ptext21 26CA                   __ptext13 2A3A                   __ptext30 2FAE  
                 __ptext22 23BC                   __ptext14 2544                   __ptext31 32EE  
                 __ptext23 2B18                   __ptext15 203E                   __ptext32 3304  
                 __ptext24 2CC0                   __ptext16 1882                   __ptext33 3160  
                 __ptext25 3332                   __ptext17 2D8A                   __ptext34 332C  
                 __ptext26 222C                   __ptext18 3242                   __ptext35 3318  
                 __ptext27 300C                   __ptext19 305E                   __ptext36 32CE  
                 __ptext28 320A                   __ptext29 32A8           __size_of_isupper 0038  
         __size_of_strncmp 00DE           __size_of_toupper 005E                 ?_vsnprintf 0070  
            __size_of_atoi 0190              __size_of_ctoa 00D8              __size_of_main 009E  
            __size_of_dtoa 02E2              __size_of_otoa 01EE              __size_of_stoa 0186  
            __size_of_utoa 0202              __size_of_xtoa 02D8     __size_of_CLK_intialize 000C  
                stoa@F1154 00E4                   _vfprintf 2EEE                   _snprintf 3278  
         ___aomod@dividend 0001             _vfpfcnvrt$1178 0051             _vfpfcnvrt$1179 0053  
               _INTCONbits 000FF2                   isalpha@c 0001                   isdigit@c 0001  
               vsnprintf@f 00BC                 vsnprintf@n 0072                 vsnprintf@s 0070  
                snprintf@n 00C4                  snprintf@s 00C2                   islower@c 0001  
                 isspace@c 0001                   isupper@c 0001                  strncmp@_l 0001  
                strncmp@_r 0003                 _OSCCONbits 000FD3           ??_UART_send_char 0001  
          ___aomod@divisor 0009      __end_of_ADC_intialize 32EE                ??_vfpfcnvrt 0049  
                 stoa@nuls 000F            ___aomod@counter 0011              _CLK_intialize 3318  
           _vsnprintf$1041 00B8                   strncmp@l 0008                   strncmp@n 0005  
                 strncmp@r 000A                   toupper@c 0007   __size_of_PORT_Initialize 0006  
             ___aodiv@sign 0012                ??_vsnprintf 0078               ___aomod@sign 0012  
