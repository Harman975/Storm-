

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 16 10:22:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F2520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	smallconst
    66  000600                     __psmallconst:
    67                           	callstack 0
    68  000600  00                 	db	0
    69  000601                     _dpowers:
    70                           	callstack 0
    71  000601  0001               	dw	1
    72  000603  000A               	dw	10
    73  000605  0064               	dw	100
    74  000607  03E8               	dw	1000
    75  000609  2710               	dw	10000
    76  00060B                     __end_of_dpowers:
    77                           	callstack 0
    78  0000                     _SSPBUF	set	4041
    79  0000                     _SSPCON2	set	4037
    80  0000                     _SSPCON1bits	set	4038
    81  0000                     _SSPSTAT	set	4039
    82  0000                     _SSPADD	set	4040
    83  0000                     _ADRESL	set	4035
    84  0000                     _ADRESH	set	4036
    85  0000                     _ADCON0bits	set	4034
    86  0000                     _ADCON2bits	set	4032
    87  0000                     _ADCON1bits	set	4033
    88  0000                     _RCREG	set	4014
    89  0000                     _TXREG	set	4013
    90  0000                     _SPBRG	set	4015
    91  0000                     _SPBRGH	set	4016
    92  0000                     _RCSTAbits	set	4011
    93  0000                     _BAUDCONbits	set	4024
    94  0000                     _TXSTAbits	set	4012
    95  0000                     _INTCONbits	set	4082
    96  0000                     _OSCCONbits	set	4051
    97  0000                     _ACKEN	set	32300
    98  0000                     _ACKDT	set	32301
    99  0000                     _RCEN	set	32299
   100  0000                     _PEN	set	32298
   101  0000                     _RSEN	set	32297
   102  0000                     _SEN	set	32296
   103  0000                     _SSPIF	set	31987
   104  0000                     _TRISC4	set	31908
   105  0000                     _TRISC3	set	31907
   106  0000                     _TRISA2	set	31890
   107  0000                     _TRISA1	set	31889
   108  0000                     _RCIF	set	31989
   109  0000                     _LATA6	set	31822
   110  0000                     _LATA5	set	31821
   111  0000                     _LATA4	set	31820
   112  0000                     _TXIF	set	31988
   113  0000                     _TRISB1	set	31897
   114  0000                     _TRISC7	set	31911
   115  0000                     _TRISC6	set	31910
   116  00060B                     STR_1:
   117  00060B  44                 	db	68	;'D'
   118  00060C  61                 	db	97	;'a'
   119  00060D  76                 	db	118	;'v'
   120  00060E  65                 	db	101	;'e'
   121  00060F  20                 	db	32
   122  000610  69                 	db	105	;'i'
   123  000611  73                 	db	115	;'s'
   124  000612  20                 	db	32
   125  000613  61                 	db	97	;'a'
   126  000614  20                 	db	32
   127  000615  6C                 	db	108	;'l'
   128  000616  65                 	db	101	;'e'
   129  000617  67                 	db	103	;'g'
   130  000618  65                 	db	101	;'e'
   131  000619  6E                 	db	110	;'n'
   132  00061A  64                 	db	100	;'d'
   133  00061B  21                 	db	33
   134  00061C  0A                 	db	10
   135  00061D  00                 	db	0
   136  00061E                     STR_3:
   137  00061E  48                 	db	72	;'H'
   138  00061F  55                 	db	85	;'U'
   139  000620  4D                 	db	77	;'M'
   140  000621  49                 	db	73	;'I'
   141  000622  44                 	db	68	;'D'
   142  000623  3A                 	db	58	;':'
   143  000624  20                 	db	32
   144  000625  25                 	db	37
   145  000626  75                 	db	117	;'u'
   146  000627  0A                 	db	10
   147  000628  00                 	db	0
   148  000629                     STR_2:
   149  000629  54                 	db	84	;'T'
   150  00062A  45                 	db	69	;'E'
   151  00062B  4D                 	db	77	;'M'
   152  00062C  50                 	db	80	;'P'
   153  00062D  3A                 	db	58	;':'
   154  00062E  20                 	db	32
   155  00062F  25                 	db	37
   156  000630  75                 	db	117	;'u'
   157  000631  0A                 	db	10
   158  000632  00                 	db	0
   159  000633  00                 	db	0	; dummy byte at the end
   160  0000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164  000AB6                     __pcinit:
   165                           	callstack 0
   166  000AB6                     start_initialization:
   167                           	callstack 0
   168  000AB6                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Clear objects allocated to COMRAM (14 bytes)
   172  000AB6  EE00  F034         	lfsr	0,__pbssCOMRAM
   173  000ABA  0E0E               	movlw	14
   174  000ABC                     clear_0:
   175  000ABC  6AEE               	clrf	postinc0,c
   176  000ABE  06E8               	decf	wreg,f,c
   177  000AC0  E1FD               	bnz	clear_0
   178  000AC2                     end_of_initialization:
   179                           	callstack 0
   180  000AC2                     __end_of__initialization:
   181                           	callstack 0
   182  000AC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  000AC4  6EF8               	movwf	tblptru,c
   184  000AC6  0100               	movlb	0
   185  000AC8  EFCC  F003         	goto	_main	;jump to C main() function
   186                           
   187                           	psect	bssCOMRAM
   188  000034                     __pbssCOMRAM:
   189                           	callstack 0
   190  000034                     _ADC:
   191                           	callstack 0
   192  000034                     	ds	4
   193  000038                     _value:
   194                           	callstack 0
   195  000038                     	ds	4
   196  00003C                     _voltage:
   197                           	callstack 0
   198  00003C                     	ds	4
   199  000040                     _i:
   200                           	callstack 0
   201  000040                     	ds	2
   202                           
   203                           	psect	cstackCOMRAM
   204  000001                     __pcstackCOMRAM:
   205                           	callstack 0
   206  000001                     ??_I2C_Master_Wait:
   207  000001                     ?_Read_ADC:
   208                           	callstack 0
   209  000001                     ?___lwdiv:
   210                           	callstack 0
   211  000001                     UART_send_char@bt:
   212                           	callstack 0
   213  000001                     UART_Init@baud_rate:
   214                           	callstack 0
   215  000001                     ___lwdiv@dividend:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x0
   219  000001                     	ds	1
   220  000002                     UART_send_string@st_pt:
   221                           	callstack 0
   222  000002                     I2C_Master_Write@d:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x1
   226  000002                     	ds	1
   227  000003                     ??_Read_ADC:
   228  000003                     ___lwdiv@divisor:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x2
   232  000003                     	ds	1
   233  000004                     
   234                           ; 1 bytes @ 0x3
   235  000004                     	ds	1
   236  000005                     Read_ADC@result:
   237                           	callstack 0
   238  000005                     ___lwdiv@quotient:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x4
   242  000005                     	ds	2
   243  000007                     Read_ADC@channel:
   244                           	callstack 0
   245  000007                     ___lwdiv@counter:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x6
   249  000007                     	ds	1
   250  000008                     ?___lwmod:
   251                           	callstack 0
   252  000008                     ___lwmod@dividend:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x7
   256  000008                     	ds	2
   257  00000A                     ___lwmod@divisor:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x9
   261  00000A                     	ds	2
   262  00000C                     ___lwmod@counter:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0xB
   266  00000C                     	ds	1
   267  00000D                     ?_sprintf:
   268                           	callstack 0
   269  00000D                     sprintf@sp:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0xC
   273  00000D                     	ds	2
   274  00000F                     sprintf@f:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0xE
   278  00000F                     	ds	4
   279  000013                     sprintf@flag:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x12
   283  000013                     	ds	1
   284  000014                     sprintf@ap:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x13
   288  000014                     	ds	2
   289  000016                     sprintf@val:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x15
   293  000016                     	ds	2
   294  000018                     sprintf@prec:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x17
   298  000018                     	ds	1
   299  000019                     sprintf@c:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x18
   303  000019                     	ds	1
   304  00001A                     ??_main:
   305                           
   306                           ; 1 bytes @ 0x19
   307  00001A                     	ds	2
   308  00001C                     main@_adc_str:
   309                           	callstack 0
   310                           
   311                           ; 20 bytes @ 0x1B
   312  00001C                     	ds	20
   313  000030                     main@temp_adc:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x2F
   317  000030                     	ds	2
   318  000032                     main@humid_adc:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x31
   322  000032                     	ds	2
   323                           
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 109 in file "Test.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;  _adc_str       20   27[COMRAM] unsigned char [20]
   334 ;;  _adc_buf       20    0        unsigned char [20]
   335 ;;  time           10    0        unsigned char [10]
   336 ;;  humid_adc       2   49[COMRAM] unsigned int 
   337 ;;  temp_adc        2   47[COMRAM] unsigned int 
   338 ;;  i2c_val         1    0        unsigned char 
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   348 ;;      Params:         0       0       0       0       0       0       0
   349 ;;      Locals:        24       0       0       0       0       0       0
   350 ;;      Temps:          2       0       0       0       0       0       0
   351 ;;      Totals:        26       0       0       0       0       0       0
   352 ;;Total ram usage:       26 bytes
   353 ;; Hardware stack levels required when called:    2
   354 ;; This function calls:
   355 ;;		_ADC_intialize
   356 ;;		_CLK_intialize
   357 ;;		_I2C_Master_Start
   358 ;;		_I2C_Master_Stop
   359 ;;		_I2C_Master_Write
   360 ;;		_InitI2C
   361 ;;		_PORT_Initialize
   362 ;;		_Read_ADC
   363 ;;		_UART_Init
   364 ;;		_UART_send_string
   365 ;;		_sprintf
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text0
   372  000798                     __ptext0:
   373                           	callstack 0
   374  000798                     _main:
   375                           	callstack 29
   376  000798                     
   377                           ;Test.c: 113: unsigned int humid_adc = 0;
   378  000798  0E00               	movlw	0
   379  00079A  6E33               	movwf	(main@humid_adc+1)^0,c
   380  00079C  0E00               	movlw	0
   381  00079E  6E32               	movwf	main@humid_adc^0,c
   382  0007A0                     
   383                           ;Test.c: 115: char _adc_str[20];;Test.c: 116: char _adc_buf[20];;Test.c: 118: CLK_intial
      +                          ize();
   384  0007A0  EC7B  F005         	call	_CLK_intialize	;wreg free
   385                           
   386                           ;Test.c: 119: PORT_Initialize();
   387  0007A4  EC8E  F005         	call	_PORT_Initialize	;wreg free
   388  0007A8                     
   389                           ;Test.c: 120: UART_Init(9600);
   390  0007A8  0E25               	movlw	37
   391  0007AA  6E02               	movwf	(UART_Init@baud_rate+1)^0,c
   392  0007AC  0E80               	movlw	128
   393  0007AE  6E01               	movwf	UART_Init@baud_rate^0,c
   394  0007B0  EC71  F005         	call	_UART_Init	;wreg free
   395  0007B4                     
   396                           ;Test.c: 121: ADC_intialize();
   397  0007B4  EC3D  F005         	call	_ADC_intialize	;wreg free
   398  0007B8                     
   399                           ;Test.c: 123: InitI2C();
   400  0007B8  EC4E  F005         	call	_InitI2C	;wreg free
   401  0007BC                     l1324:
   402                           
   403                           ;Test.c: 130: {;Test.c: 134: _delay((unsigned long)((500)*(8000000/4000.0)));
   404  0007BC  0E06               	movlw	6
   405  0007BE  6E1B               	movwf	(??_main+1)^0,c
   406  0007C0  0E13               	movlw	19
   407  0007C2  6E1A               	movwf	??_main^0,c
   408  0007C4  0EAE               	movlw	174
   409  0007C6                     u427:
   410  0007C6  2EE8               	decfsz	wreg,f,c
   411  0007C8  D7FE               	bra	u427
   412  0007CA  2E1A               	decfsz	??_main^0,f,c
   413  0007CC  D7FC               	bra	u427
   414  0007CE  2E1B               	decfsz	(??_main+1)^0,f,c
   415  0007D0  D7FA               	bra	u427
   416  0007D2                     
   417                           ;Test.c: 135: TRISB1 = 0;
   418  0007D2  9293               	bcf	3987,1,c	;volatile
   419  0007D4                     
   420                           ;Test.c: 136: _delay((unsigned long)((500)*(8000000/4000.0)));
   421  0007D4  0E06               	movlw	6
   422  0007D6  6E1B               	movwf	(??_main+1)^0,c
   423  0007D8  0E13               	movlw	19
   424  0007DA  6E1A               	movwf	??_main^0,c
   425  0007DC  0EAE               	movlw	174
   426  0007DE                     u437:
   427  0007DE  2EE8               	decfsz	wreg,f,c
   428  0007E0  D7FE               	bra	u437
   429  0007E2  2E1A               	decfsz	??_main^0,f,c
   430  0007E4  D7FC               	bra	u437
   431  0007E6  2E1B               	decfsz	(??_main+1)^0,f,c
   432  0007E8  D7FA               	bra	u437
   433  0007EA                     
   434                           ;Test.c: 137: TRISB1 = 1;
   435  0007EA  8293               	bsf	3987,1,c	;volatile
   436  0007EC                     
   437                           ;Test.c: 138: UART_send_string ("Dave is a legend!\n");
   438  0007EC  0E0B               	movlw	low STR_1
   439  0007EE  6E02               	movwf	UART_send_string@st_pt^0,c
   440  0007F0  0E06               	movlw	high STR_1
   441  0007F2  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   442  0007F4  ECFB  F004         	call	_UART_send_string	;wreg free
   443  0007F8                     
   444                           ;Test.c: 141: temp_adc = Read_ADC (0);
   445  0007F8  0E00               	movlw	0
   446  0007FA  ECCA  F004         	call	_Read_ADC
   447  0007FE  C001  F030         	movff	?_Read_ADC,main@temp_adc
   448  000802  C002  F031         	movff	?_Read_ADC+1,main@temp_adc+1
   449  000806                     
   450                           ;Test.c: 143: sprintf(_adc_str,"TEMP: %u\n", temp_adc);
   451  000806  0E1C               	movlw	low main@_adc_str
   452  000808  6E0D               	movwf	sprintf@sp^0,c
   453  00080A  0E00               	movlw	high main@_adc_str
   454  00080C  6E0E               	movwf	(sprintf@sp+1)^0,c
   455  00080E  0E29               	movlw	low STR_2
   456  000810  6E0F               	movwf	sprintf@f^0,c
   457  000812  0E06               	movlw	high STR_2
   458  000814  6E10               	movwf	(sprintf@f+1)^0,c
   459  000816  C030  F011         	movff	main@temp_adc,?_sprintf+4
   460  00081A  C031  F012         	movff	main@temp_adc+1,?_sprintf+5
   461  00081E  EC1A  F003         	call	_sprintf	;wreg free
   462  000822                     
   463                           ;Test.c: 144: UART_send_string(_adc_str);
   464  000822  0E1C               	movlw	low main@_adc_str
   465  000824  6E02               	movwf	UART_send_string@st_pt^0,c
   466  000826  0E00               	movlw	high main@_adc_str
   467  000828  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   468  00082A  ECFB  F004         	call	_UART_send_string	;wreg free
   469  00082E                     
   470                           ;Test.c: 146: _delay((unsigned long)((100)*(8000000/4000.0)));
   471  00082E  0E02               	movlw	2
   472  000830  6E1B               	movwf	(??_main+1)^0,c
   473  000832  0E04               	movlw	4
   474  000834  6E1A               	movwf	??_main^0,c
   475  000836  0EBA               	movlw	186
   476  000838                     u447:
   477  000838  2EE8               	decfsz	wreg,f,c
   478  00083A  D7FE               	bra	u447
   479  00083C  2E1A               	decfsz	??_main^0,f,c
   480  00083E  D7FC               	bra	u447
   481  000840  2E1B               	decfsz	(??_main+1)^0,f,c
   482  000842  D7FA               	bra	u447
   483  000844  D000               	nop2	
   484  000846                     
   485                           ;Test.c: 148: humid_adc = Read_ADC (1);
   486  000846  0E01               	movlw	1
   487  000848  ECCA  F004         	call	_Read_ADC
   488  00084C  C001  F032         	movff	?_Read_ADC,main@humid_adc
   489  000850  C002  F033         	movff	?_Read_ADC+1,main@humid_adc+1
   490  000854                     
   491                           ;Test.c: 149: sprintf(_adc_str, "HUMID: %u\n", humid_adc);
   492  000854  0E1C               	movlw	low main@_adc_str
   493  000856  6E0D               	movwf	sprintf@sp^0,c
   494  000858  0E00               	movlw	high main@_adc_str
   495  00085A  6E0E               	movwf	(sprintf@sp+1)^0,c
   496  00085C  0E1E               	movlw	low STR_3
   497  00085E  6E0F               	movwf	sprintf@f^0,c
   498  000860  0E06               	movlw	high STR_3
   499  000862  6E10               	movwf	(sprintf@f+1)^0,c
   500  000864  C032  F011         	movff	main@humid_adc,?_sprintf+4
   501  000868  C033  F012         	movff	main@humid_adc+1,?_sprintf+5
   502  00086C  EC1A  F003         	call	_sprintf	;wreg free
   503  000870                     
   504                           ;Test.c: 150: UART_send_string(_adc_str);
   505  000870  0E1C               	movlw	low main@_adc_str
   506  000872  6E02               	movwf	UART_send_string@st_pt^0,c
   507  000874  0E00               	movlw	high main@_adc_str
   508  000876  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   509  000878  ECFB  F004         	call	_UART_send_string	;wreg free
   510  00087C                     
   511                           ;Test.c: 152: _delay((unsigned long)((100)*(8000000/4000.0)));
   512  00087C  0E02               	movlw	2
   513  00087E  6E1B               	movwf	(??_main+1)^0,c
   514  000880  0E04               	movlw	4
   515  000882  6E1A               	movwf	??_main^0,c
   516  000884  0EBA               	movlw	186
   517  000886                     u457:
   518  000886  2EE8               	decfsz	wreg,f,c
   519  000888  D7FE               	bra	u457
   520  00088A  2E1A               	decfsz	??_main^0,f,c
   521  00088C  D7FC               	bra	u457
   522  00088E  2E1B               	decfsz	(??_main+1)^0,f,c
   523  000890  D7FA               	bra	u457
   524  000892  D000               	nop2	
   525  000894                     
   526                           ;Test.c: 155: I2C_Master_Start();
   527  000894  EC8A  F005         	call	_I2C_Master_Start	;wreg free
   528  000898                     
   529                           ;Test.c: 156: I2C_Master_Write(0xDE);
   530  000898  0E00               	movlw	0
   531  00089A  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
   532  00089C  0EDE               	movlw	222
   533  00089E  6E02               	movwf	I2C_Master_Write@d^0,c
   534  0008A0  EC81  F005         	call	_I2C_Master_Write	;wreg free
   535  0008A4                     
   536                           ;Test.c: 157: I2C_Master_Write(0x00);
   537  0008A4  0E00               	movlw	0
   538  0008A6  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
   539  0008A8  0E00               	movlw	0
   540  0008AA  6E02               	movwf	I2C_Master_Write@d^0,c
   541  0008AC  EC81  F005         	call	_I2C_Master_Write	;wreg free
   542  0008B0                     
   543                           ;Test.c: 158: I2C_Master_Stop();
   544  0008B0  EC86  F005         	call	_I2C_Master_Stop	;wreg free
   545  0008B4  EFDE  F003         	goto	l1324
   546  0008B8  EF00  F000         	goto	start
   547  0008BC                     __end_of_main:
   548                           	callstack 0
   549                           
   550 ;; *************** function _sprintf *****************
   551 ;; Defined at:
   552 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  sp              2   12[COMRAM] PTR unsigned char 
   555 ;;		 -> main@_adc_str(20), 
   556 ;;  f               2   14[COMRAM] PTR const unsigned char 
   557 ;;		 -> STR_3(11), STR_2(10), 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  tmpval          4    0        struct .
   560 ;;  cp              3    0        PTR const unsigned char 
   561 ;;  val             2   21[COMRAM] unsigned int 
   562 ;;  ap              2   19[COMRAM] PTR void [1]
   563 ;;		 -> ?_sprintf(2), 
   564 ;;  len             2    0        unsigned int 
   565 ;;  c               1   24[COMRAM] unsigned char 
   566 ;;  prec            1   23[COMRAM] char 
   567 ;;  flag            1   18[COMRAM] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  2   12[COMRAM] int 
   570 ;; Registers used:
   571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   577 ;;      Params:         6       0       0       0       0       0       0
   578 ;;      Locals:         7       0       0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0
   580 ;;      Totals:        13       0       0       0       0       0       0
   581 ;;Total ram usage:       13 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    1
   584 ;; This function calls:
   585 ;;		___lwdiv
   586 ;;		___lwmod
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text1
   593  000634                     __ptext1:
   594                           	callstack 0
   595  000634                     _sprintf:
   596                           	callstack 29
   597  000634                     
   598                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
   599  000634  0E11               	movlw	low (?_sprintf+4)
   600  000636  6E14               	movwf	sprintf@ap^0,c
   601  000638  0E00               	movlw	high (?_sprintf+4)
   602  00063A  6E15               	movwf	(sprintf@ap+1)^0,c
   603                           
   604                           ;doprnt.c: 553: while((c = *f++)) {
   605  00063C  EFB4  F003         	goto	l1304
   606  000640                     l1264:
   607                           
   608                           ;doprnt.c: 555: if(c != '%')
   609  000640  0E25               	movlw	37
   610  000642  1819               	xorwf	sprintf@c^0,w,c
   611  000644  B4D8               	btfsc	status,2,c
   612  000646  EF27  F003         	goto	u371
   613  00064A  EF29  F003         	goto	u370
   614  00064E                     u371:
   615  00064E  EF33  F003         	goto	l1270
   616  000652                     u370:
   617  000652                     
   618                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   619  000652  C00D  FFD9         	movff	sprintf@sp,fsr2l
   620  000656  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   621  00065A  C019  FFDF         	movff	sprintf@c,indf2
   622  00065E  4A0D               	infsnz	sprintf@sp^0,f,c
   623  000660  2A0E               	incf	(sprintf@sp+1)^0,f,c
   624                           
   625                           ;doprnt.c: 559: continue;
   626  000662  EFB4  F003         	goto	l1304
   627  000666                     l1270:
   628                           
   629                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
   630  000666  0E00               	movlw	0
   631  000668  6E13               	movwf	sprintf@flag^0,c
   632                           
   633                           ;doprnt.c: 661: switch(c = *f++) {
   634  00066A  EF3B  F003         	goto	l1276
   635  00066E                     l1272:
   636                           
   637                           ;doprnt.c: 844: flag |= 0xC0;
   638  00066E  0EC0               	movlw	192
   639  000670  1213               	iorwf	sprintf@flag^0,f,c
   640                           
   641                           ;doprnt.c: 845: break;
   642  000672  EF4F  F003         	goto	l1278
   643  000676                     l1276:
   644  000676  C00F  FFF6         	movff	sprintf@f,tblptrl
   645  00067A  C010  FFF7         	movff	sprintf@f+1,tblptrh
   646  00067E  4A0F               	infsnz	sprintf@f^0,f,c
   647  000680  2A10               	incf	(sprintf@f+1)^0,f,c
   648  000682                     	if	0	;tblptru may be non-zero
   649  000682                     	endif
   650  000682                     	if	0	;tblptru may be non-zero
   651  000682                     	endif
   652  000682  0008               	tblrd		*
   653  000684  CFF5 F019          	movff	tablat,sprintf@c
   654  000688  5019               	movf	sprintf@c^0,w,c
   655                           
   656                           ; Switch size 1, requested type "simple"
   657                           ; Number of cases is 2, Range of values is 0 to 117
   658                           ; switch strategies available:
   659                           ; Name         Instructions Cycles
   660                           ; simple_byte            7     4 (average)
   661                           ;	Chosen strategy is simple_byte
   662  00068A  0A00               	xorlw	0	; case 0
   663  00068C  B4D8               	btfsc	status,2,c
   664  00068E  EFC5  F003         	goto	l1306
   665  000692  0A75               	xorlw	117	; case 117
   666  000694  B4D8               	btfsc	status,2,c
   667  000696  EF37  F003         	goto	l1272
   668  00069A  EFB4  F003         	goto	l1304
   669  00069E                     l1278:
   670                           
   671                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
   672  00069E  C014  FFD9         	movff	sprintf@ap,fsr2l
   673  0006A2  C015  FFDA         	movff	sprintf@ap+1,fsr2h
   674  0006A6  CFDE F016          	movff	postinc2,sprintf@val
   675  0006AA  CFDD F017          	movff	postdec2,sprintf@val+1
   676  0006AE  0E02               	movlw	2
   677  0006B0  2614               	addwf	sprintf@ap^0,f,c
   678  0006B2  0E00               	movlw	0
   679  0006B4  2215               	addwfc	(sprintf@ap+1)^0,f,c
   680  0006B6                     
   681                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
   682  0006B6  0E01               	movlw	1
   683  0006B8  6E19               	movwf	sprintf@c^0,c
   684  0006BA                     l1288:
   685                           
   686                           ;doprnt.c: 1332: if(val < dpowers[c])
   687  0006BA  5019               	movf	sprintf@c^0,w,c
   688  0006BC  0D02               	mullw	2
   689  0006BE  0E01               	movlw	low _dpowers
   690  0006C0  24F3               	addwf	243,w,c
   691  0006C2  6EF6               	movwf	tblptrl,c
   692  0006C4  0E06               	movlw	high _dpowers
   693  0006C6  20F4               	addwfc	244,w,c
   694  0006C8  6EF7               	movwf	tblptrh,c
   695  0006CA                     	if	0	;There are less than 3 active tblptr bytes
   696  0006CA                     	endif
   697  0006CA  0009               	tblrd		*+
   698  0006CC  50F5               	movf	tablat,w,c
   699  0006CE  5C16               	subwf	sprintf@val^0,w,c
   700  0006D0  0009               	tblrd		*+
   701  0006D2  50F5               	movf	tablat,w,c
   702  0006D4  5817               	subwfb	(sprintf@val+1)^0,w,c
   703  0006D6  B0D8               	btfsc	status,0,c
   704  0006D8  EF70  F003         	goto	u381
   705  0006DC  EF72  F003         	goto	u380
   706  0006E0                     u381:
   707  0006E0  EF74  F003         	goto	l1292
   708  0006E4                     u380:
   709  0006E4  EF7E  F003         	goto	l206
   710  0006E8                     l1292:
   711  0006E8  2A19               	incf	sprintf@c^0,f,c
   712  0006EA  0E05               	movlw	5
   713  0006EC  1819               	xorwf	sprintf@c^0,w,c
   714  0006EE  A4D8               	btfss	status,2,c
   715  0006F0  EF7C  F003         	goto	u391
   716  0006F4  EF7E  F003         	goto	u390
   717  0006F8                     u391:
   718  0006F8  EF5D  F003         	goto	l1288
   719  0006FC                     u390:
   720  0006FC                     l206:
   721                           
   722                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
   723  0006FC  C019  F018         	movff	sprintf@c,sprintf@prec
   724                           
   725                           ;doprnt.c: 1500: while(prec--) {
   726  000700  EFAB  F003         	goto	l1302
   727  000704                     l1296:
   728                           
   729                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
   730  000704  5018               	movf	sprintf@prec^0,w,c
   731  000706  0D02               	mullw	2
   732  000708  0E01               	movlw	low _dpowers
   733  00070A  24F3               	addwf	243,w,c
   734  00070C  6EF6               	movwf	tblptrl,c
   735  00070E  0E06               	movlw	high _dpowers
   736  000710  20F4               	addwfc	244,w,c
   737  000712  6EF7               	movwf	tblptrh,c
   738  000714                     	if	0	;There are less than 3 active tblptr bytes
   739  000714                     	endif
   740  000714  0009               	tblrd		*+
   741  000716  CFF5 F003          	movff	tablat,___lwdiv@divisor
   742  00071A  000A               	tblrd		*-
   743  00071C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   744  000720  C016  F001         	movff	sprintf@val,___lwdiv@dividend
   745  000724  C017  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   746  000728  EC5E  F004         	call	___lwdiv	;wreg free
   747  00072C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   748  000730  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   749  000734  0E00               	movlw	0
   750  000736  6E0B               	movwf	(___lwmod@divisor+1)^0,c
   751  000738  0E0A               	movlw	10
   752  00073A  6E0A               	movwf	___lwmod@divisor^0,c
   753  00073C  EC98  F004         	call	___lwmod	;wreg free
   754  000740  5008               	movf	?___lwmod^0,w,c
   755  000742  0F30               	addlw	48
   756  000744  6E19               	movwf	sprintf@c^0,c
   757  000746                     
   758                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
   759  000746  C00D  FFD9         	movff	sprintf@sp,fsr2l
   760  00074A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   761  00074E  C019  FFDF         	movff	sprintf@c,indf2
   762  000752  4A0D               	infsnz	sprintf@sp^0,f,c
   763  000754  2A0E               	incf	(sprintf@sp+1)^0,f,c
   764  000756                     l1302:
   765  000756  0618               	decf	sprintf@prec^0,f,c
   766  000758  2818               	incf	sprintf@prec^0,w,c
   767  00075A  A4D8               	btfss	status,2,c
   768  00075C  EFB2  F003         	goto	u401
   769  000760  EFB4  F003         	goto	u400
   770  000764                     u401:
   771  000764  EF82  F003         	goto	l1296
   772  000768                     u400:
   773  000768                     l1304:
   774  000768  C00F  FFF6         	movff	sprintf@f,tblptrl
   775  00076C  C010  FFF7         	movff	sprintf@f+1,tblptrh
   776  000770  4A0F               	infsnz	sprintf@f^0,f,c
   777  000772  2A10               	incf	(sprintf@f+1)^0,f,c
   778  000774                     	if	0	;tblptru may be non-zero
   779  000774                     	endif
   780  000774                     	if	0	;tblptru may be non-zero
   781  000774                     	endif
   782  000774  0008               	tblrd		*
   783  000776  CFF5 F019          	movff	tablat,sprintf@c
   784  00077A  5019               	movf	sprintf@c^0,w,c
   785  00077C  A4D8               	btfss	status,2,c
   786  00077E  EFC3  F003         	goto	u411
   787  000782  EFC5  F003         	goto	u410
   788  000786                     u411:
   789  000786  EF20  F003         	goto	l1264
   790  00078A                     u410:
   791  00078A                     l1306:
   792                           
   793                           ;doprnt.c: 1564: *sp = 0;
   794  00078A  C00D  FFD9         	movff	sprintf@sp,fsr2l
   795  00078E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   796  000792  0E00               	movlw	0
   797  000794  6EDF               	movwf	indf2,c
   798  000796  0012               	return		;funcret
   799  000798                     __end_of_sprintf:
   800                           	callstack 0
   801                           
   802 ;; *************** function ___lwmod *****************
   803 ;; Defined at:
   804 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  dividend        2    7[COMRAM] unsigned int 
   807 ;;  divisor         2    9[COMRAM] unsigned int 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  counter         1   11[COMRAM] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  2    7[COMRAM] unsigned int 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   819 ;;      Params:         4       0       0       0       0       0       0
   820 ;;      Locals:         1       0       0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0
   822 ;;      Totals:         5       0       0       0       0       0       0
   823 ;;Total ram usage:        5 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_sprintf
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text2
   833  000930                     __ptext2:
   834                           	callstack 0
   835  000930                     ___lwmod:
   836                           	callstack 29
   837  000930  500A               	movf	___lwmod@divisor^0,w,c
   838  000932  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
   839  000934  B4D8               	btfsc	status,2,c
   840  000936  EF9F  F004         	goto	u281
   841  00093A  EFA1  F004         	goto	u280
   842  00093E                     u281:
   843  00093E  EFC5  F004         	goto	l704
   844  000942                     u280:
   845  000942  0E01               	movlw	1
   846  000944  6E0C               	movwf	___lwmod@counter^0,c
   847  000946  EFA9  F004         	goto	l1222
   848  00094A                     l1220:
   849  00094A  90D8               	bcf	status,0,c
   850  00094C  360A               	rlcf	___lwmod@divisor^0,f,c
   851  00094E  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
   852  000950  2A0C               	incf	___lwmod@counter^0,f,c
   853  000952                     l1222:
   854  000952  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
   855  000954  EFAE  F004         	goto	u291
   856  000958  EFB0  F004         	goto	u290
   857  00095C                     u291:
   858  00095C  EFA5  F004         	goto	l1220
   859  000960                     u290:
   860  000960                     l1224:
   861  000960  500A               	movf	___lwmod@divisor^0,w,c
   862  000962  5C08               	subwf	___lwmod@dividend^0,w,c
   863  000964  500B               	movf	(___lwmod@divisor+1)^0,w,c
   864  000966  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
   865  000968  A0D8               	btfss	status,0,c
   866  00096A  EFB9  F004         	goto	u301
   867  00096E  EFBB  F004         	goto	u300
   868  000972                     u301:
   869  000972  EFBF  F004         	goto	l1228
   870  000976                     u300:
   871  000976  500A               	movf	___lwmod@divisor^0,w,c
   872  000978  5E08               	subwf	___lwmod@dividend^0,f,c
   873  00097A  500B               	movf	(___lwmod@divisor+1)^0,w,c
   874  00097C  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
   875  00097E                     l1228:
   876  00097E  90D8               	bcf	status,0,c
   877  000980  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
   878  000982  320A               	rrcf	___lwmod@divisor^0,f,c
   879  000984  2E0C               	decfsz	___lwmod@counter^0,f,c
   880  000986  EFB0  F004         	goto	l1224
   881  00098A                     l704:
   882  00098A  C008  F008         	movff	___lwmod@dividend,?___lwmod
   883  00098E  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
   884  000992  0012               	return		;funcret
   885  000994                     __end_of___lwmod:
   886                           	callstack 0
   887                           
   888 ;; *************** function ___lwdiv *****************
   889 ;; Defined at:
   890 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  dividend        2    0[COMRAM] unsigned int 
   893 ;;  divisor         2    2[COMRAM] unsigned int 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  quotient        2    4[COMRAM] unsigned int 
   896 ;;  counter         1    6[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  2    0[COMRAM] unsigned int 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   906 ;;      Params:         4       0       0       0       0       0       0
   907 ;;      Locals:         3       0       0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0
   909 ;;      Totals:         7       0       0       0       0       0       0
   910 ;;Total ram usage:        7 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_sprintf
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text3
   920  0008BC                     __ptext3:
   921                           	callstack 0
   922  0008BC                     ___lwdiv:
   923                           	callstack 29
   924  0008BC  0E00               	movlw	0
   925  0008BE  6E06               	movwf	(___lwdiv@quotient+1)^0,c
   926  0008C0  0E00               	movlw	0
   927  0008C2  6E05               	movwf	___lwdiv@quotient^0,c
   928  0008C4  5003               	movf	___lwdiv@divisor^0,w,c
   929  0008C6  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
   930  0008C8  B4D8               	btfsc	status,2,c
   931  0008CA  EF69  F004         	goto	u251
   932  0008CE  EF6B  F004         	goto	u250
   933  0008D2                     u251:
   934  0008D2  EF93  F004         	goto	l694
   935  0008D6                     u250:
   936  0008D6  0E01               	movlw	1
   937  0008D8  6E07               	movwf	___lwdiv@counter^0,c
   938  0008DA  EF73  F004         	goto	l1202
   939  0008DE                     l1200:
   940  0008DE  90D8               	bcf	status,0,c
   941  0008E0  3603               	rlcf	___lwdiv@divisor^0,f,c
   942  0008E2  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
   943  0008E4  2A07               	incf	___lwdiv@counter^0,f,c
   944  0008E6                     l1202:
   945  0008E6  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
   946  0008E8  EF78  F004         	goto	u261
   947  0008EC  EF7A  F004         	goto	u260
   948  0008F0                     u261:
   949  0008F0  EF6F  F004         	goto	l1200
   950  0008F4                     u260:
   951  0008F4                     l1204:
   952  0008F4  90D8               	bcf	status,0,c
   953  0008F6  3605               	rlcf	___lwdiv@quotient^0,f,c
   954  0008F8  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
   955  0008FA  5003               	movf	___lwdiv@divisor^0,w,c
   956  0008FC  5C01               	subwf	___lwdiv@dividend^0,w,c
   957  0008FE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   958  000900  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
   959  000902  A0D8               	btfss	status,0,c
   960  000904  EF86  F004         	goto	u271
   961  000908  EF88  F004         	goto	u270
   962  00090C                     u271:
   963  00090C  EF8D  F004         	goto	l1212
   964  000910                     u270:
   965  000910  5003               	movf	___lwdiv@divisor^0,w,c
   966  000912  5E01               	subwf	___lwdiv@dividend^0,f,c
   967  000914  5004               	movf	(___lwdiv@divisor+1)^0,w,c
   968  000916  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
   969  000918  8005               	bsf	___lwdiv@quotient^0,0,c
   970  00091A                     l1212:
   971  00091A  90D8               	bcf	status,0,c
   972  00091C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
   973  00091E  3203               	rrcf	___lwdiv@divisor^0,f,c
   974  000920  2E07               	decfsz	___lwdiv@counter^0,f,c
   975  000922  EF7A  F004         	goto	l1204
   976  000926                     l694:
   977  000926  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
   978  00092A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   979  00092E  0012               	return		;funcret
   980  000930                     __end_of___lwdiv:
   981                           	callstack 0
   982                           
   983 ;; *************** function _UART_send_string *****************
   984 ;; Defined at:
   985 ;;		line 54 in file "hw_uart.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  st_pt           2    1[COMRAM] PTR unsigned char 
   988 ;;		 -> main@_adc_str(20), STR_1(19), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1000 ;;      Params:         2       0       0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0
  1003 ;;      Totals:         2       0       0       0       0       0       0
  1004 ;;Total ram usage:        2 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    1
  1007 ;; This function calls:
  1008 ;;		_UART_send_char
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text4
  1015  0009F6                     __ptext4:
  1016                           	callstack 0
  1017  0009F6                     _UART_send_string:
  1018                           	callstack 29
  1019  0009F6                     
  1020                           ;hw_uart.c: 56: while(*st_pt)
  1021  0009F6  EF11  F005         	goto	l1242
  1022  0009FA                     l1238:
  1023                           
  1024                           ;hw_uart.c: 57: UART_send_char(*st_pt++);
  1025  0009FA  C002  FFF6         	movff	UART_send_string@st_pt,tblptrl
  1026  0009FE  C003  FFF7         	movff	UART_send_string@st_pt+1,tblptrh
  1027  000A02  6AF8               	clrf	tblptru,c
  1028  000A04  0E05               	movlw	(high __ramtop+-1)
  1029  000A06  64F7               	cpfsgt	tblptrh,c
  1030  000A08  D003               	bra	u317
  1031  000A0A  0008               	tblrd		*
  1032  000A0C  50F5               	movf	tablat,w,c
  1033  000A0E  D005               	bra	u310
  1034  000A10                     u317:
  1035  000A10  CFF6 FFE9          	movff	tblptrl,fsr0l
  1036  000A14  CFF7 FFEA          	movff	tblptrh,fsr0h
  1037  000A18  50EF               	movf	indf0,w,c
  1038  000A1A                     u310:
  1039  000A1A  EC66  F005         	call	_UART_send_char
  1040  000A1E  4A02               	infsnz	UART_send_string@st_pt^0,f,c
  1041  000A20  2A03               	incf	(UART_send_string@st_pt+1)^0,f,c
  1042  000A22                     l1242:
  1043  000A22  C002  FFF6         	movff	UART_send_string@st_pt,tblptrl
  1044  000A26  C003  FFF7         	movff	UART_send_string@st_pt+1,tblptrh
  1045  000A2A  6AF8               	clrf	tblptru,c
  1046  000A2C  0E05               	movlw	(high __ramtop+-1)
  1047  000A2E  64F7               	cpfsgt	tblptrh,c
  1048  000A30  D003               	bra	u327
  1049  000A32  0008               	tblrd		*
  1050  000A34  50F5               	movf	tablat,w,c
  1051  000A36  D005               	bra	u320
  1052  000A38                     u327:
  1053  000A38  CFF6 FFE9          	movff	tblptrl,fsr0l
  1054  000A3C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1055  000A40  50EF               	movf	indf0,w,c
  1056  000A42                     u320:
  1057  000A42  0900               	iorlw	0
  1058  000A44  A4D8               	btfss	status,2,c
  1059  000A46  EF27  F005         	goto	u331
  1060  000A4A  EF29  F005         	goto	u330
  1061  000A4E                     u331:
  1062  000A4E  EFFD  F004         	goto	l1238
  1063  000A52                     u330:
  1064  000A52  0012               	return		;funcret
  1065  000A54                     __end_of_UART_send_string:
  1066                           	callstack 0
  1067                           
  1068 ;; *************** function _UART_send_char *****************
  1069 ;; Defined at:
  1070 ;;		line 27 in file "hw_uart.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  bt              1    wreg     unsigned char 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  bt              1    0[COMRAM] unsigned char 
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1084 ;;      Params:         0       0       0       0       0       0       0
  1085 ;;      Locals:         1       0       0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0       0       0
  1087 ;;      Totals:         1       0       0       0       0       0       0
  1088 ;;Total ram usage:        1 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_UART_send_string
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text5
  1098  000ACC                     __ptext5:
  1099                           	callstack 0
  1100  000ACC                     _UART_send_char:
  1101                           	callstack 29
  1102                           
  1103                           ;incstack = 0
  1104                           ;UART_send_char@bt stored from wreg
  1105  000ACC  6E01               	movwf	UART_send_char@bt^0,c
  1106  000ACE                     l77:
  1107  000ACE  A89E               	btfss	3998,4,c	;volatile
  1108  000AD0  EF6C  F005         	goto	u11
  1109  000AD4  EF6E  F005         	goto	u10
  1110  000AD8                     u11:
  1111  000AD8  EF67  F005         	goto	l77
  1112  000ADC                     u10:
  1113  000ADC                     
  1114                           ;hw_uart.c: 30: TXREG = bt;
  1115  000ADC  C001  FFAD         	movff	UART_send_char@bt,4013	;volatile
  1116  000AE0  0012               	return		;funcret
  1117  000AE2                     __end_of_UART_send_char:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _UART_Init *****************
  1121 ;; Defined at:
  1122 ;;		line 10 in file "hw_uart.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  baud_rate       2    0[COMRAM] unsigned int 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1136 ;;      Params:         2       0       0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0
  1139 ;;      Totals:         2       0       0       0       0       0       0
  1140 ;;Total ram usage:        2 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text6
  1150  000AE2                     __ptext6:
  1151                           	callstack 0
  1152  000AE2                     _UART_Init:
  1153                           	callstack 30
  1154  000AE2                     
  1155                           ;hw_uart.c: 13: TXSTAbits.TXEN = 1;
  1156  000AE2  8AAC               	bsf	172,5,c	;volatile
  1157                           
  1158                           ;hw_uart.c: 15: TXSTAbits.SYNC = 0;
  1159  000AE4  98AC               	bcf	172,4,c	;volatile
  1160                           
  1161                           ;hw_uart.c: 17: TXSTAbits.BRGH = 0;
  1162  000AE6  94AC               	bcf	172,2,c	;volatile
  1163                           
  1164                           ;hw_uart.c: 19: BAUDCONbits.BRG16 = 0;
  1165  000AE8  96B8               	bcf	184,3,c	;volatile
  1166                           
  1167                           ;hw_uart.c: 21: RCSTAbits.SPEN = 1;
  1168  000AEA  8EAB               	bsf	171,7,c	;volatile
  1169  000AEC                     
  1170                           ;hw_uart.c: 23: SPBRGH = 0x00;
  1171  000AEC  0E00               	movlw	0
  1172  000AEE  6EB0               	movwf	176,c	;volatile
  1173                           
  1174                           ;hw_uart.c: 24: SPBRG = 0x0C;
  1175  000AF0  0E0C               	movlw	12
  1176  000AF2  6EAF               	movwf	175,c	;volatile
  1177  000AF4  0012               	return		;funcret
  1178  000AF6                     __end_of_UART_Init:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _Read_ADC *****************
  1182 ;; Defined at:
  1183 ;;		line 43 in file "hw_adc.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  channel         1    wreg     unsigned char 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  channel         1    6[COMRAM] unsigned char 
  1188 ;;  result          2    4[COMRAM] unsigned int 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2    0[COMRAM] unsigned int 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         2       0       0       0       0       0       0
  1199 ;;      Locals:         3       0       0       0       0       0       0
  1200 ;;      Temps:          2       0       0       0       0       0       0
  1201 ;;      Totals:         7       0       0       0       0       0       0
  1202 ;;Total ram usage:        7 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text7
  1212  000994                     __ptext7:
  1213                           	callstack 0
  1214  000994                     _Read_ADC:
  1215                           	callstack 30
  1216                           
  1217                           ;incstack = 0
  1218                           ;Read_ADC@channel stored from wreg
  1219  000994  6E07               	movwf	Read_ADC@channel^0,c
  1220  000996                     
  1221                           ;hw_adc.c: 47: if (channel == 0)
  1222  000996  5007               	movf	Read_ADC@channel^0,w,c
  1223  000998  A4D8               	btfss	status,2,c
  1224  00099A  EFD1  F004         	goto	u341
  1225  00099E  EFD3  F004         	goto	u340
  1226  0009A2                     u341:
  1227  0009A2  EFD7  F004         	goto	l1250
  1228  0009A6                     u340:
  1229  0009A6                     
  1230                           ;hw_adc.c: 48: {;hw_adc.c: 49: ADCON0bits.CHS = 0b0001;
  1231  0009A6  50C2               	movf	194,w,c	;volatile
  1232  0009A8  0BC3               	andlw	-61
  1233  0009AA  0904               	iorlw	4
  1234  0009AC  6EC2               	movwf	194,c	;volatile
  1235  0009AE                     l1250:
  1236                           
  1237                           ;hw_adc.c: 51: };hw_adc.c: 52: if (channel == 1)
  1238  0009AE  0407               	decf	Read_ADC@channel^0,w,c
  1239  0009B0  A4D8               	btfss	status,2,c
  1240  0009B2  EFDD  F004         	goto	u351
  1241  0009B6  EFDF  F004         	goto	u350
  1242  0009BA                     u351:
  1243  0009BA  EFE3  F004         	goto	l1254
  1244  0009BE                     u350:
  1245  0009BE                     
  1246                           ;hw_adc.c: 53: {;hw_adc.c: 55: ADCON0bits.CHS = 0b0010;
  1247  0009BE  50C2               	movf	194,w,c	;volatile
  1248  0009C0  0BC3               	andlw	-61
  1249  0009C2  0908               	iorlw	8
  1250  0009C4  6EC2               	movwf	194,c	;volatile
  1251  0009C6                     l1254:
  1252                           
  1253                           ;hw_adc.c: 57: };hw_adc.c: 59: ADCON0bits.GO = 1;
  1254  0009C6  82C2               	bsf	194,1,c	;volatile
  1255  0009C8                     l123:
  1256  0009C8  B2C2               	btfsc	194,1,c	;volatile
  1257  0009CA  EFE9  F004         	goto	u361
  1258  0009CE  EFEB  F004         	goto	u360
  1259  0009D2                     u361:
  1260  0009D2  EFE4  F004         	goto	l123
  1261  0009D6                     u360:
  1262  0009D6                     
  1263                           ;hw_adc.c: 61: result = (ADRESH << 8) | (ADRESL);
  1264  0009D6  50C3               	movf	195,w,c	;volatile
  1265  0009D8  CFC4 F003          	movff	4036,??_Read_ADC	;volatile
  1266  0009DC  6A04               	clrf	(??_Read_ADC+1)^0,c
  1267  0009DE  C003  F004         	movff	??_Read_ADC,??_Read_ADC+1
  1268  0009E2  6A03               	clrf	??_Read_ADC^0,c
  1269  0009E4  1003               	iorwf	??_Read_ADC^0,w,c
  1270  0009E6  6E05               	movwf	Read_ADC@result^0,c
  1271  0009E8  5004               	movf	(??_Read_ADC+1)^0,w,c
  1272  0009EA  6E06               	movwf	(Read_ADC@result+1)^0,c
  1273  0009EC                     
  1274                           ;hw_adc.c: 63: return result;
  1275  0009EC  C005  F001         	movff	Read_ADC@result,?_Read_ADC
  1276  0009F0  C006  F002         	movff	Read_ADC@result+1,?_Read_ADC+1
  1277  0009F4  0012               	return		;funcret
  1278  0009F6                     __end_of_Read_ADC:
  1279                           	callstack 0
  1280                           
  1281 ;; *************** function _PORT_Initialize *****************
  1282 ;; Defined at:
  1283 ;;		line 93 in file "Test.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		None
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1297 ;;      Params:         0       0       0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0
  1300 ;;      Totals:         0       0       0       0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text8
  1311  000B1C                     __ptext8:
  1312                           	callstack 0
  1313  000B1C                     _PORT_Initialize:
  1314                           	callstack 30
  1315  000B1C                     
  1316                           ;Test.c: 95: TRISC6 = 1;
  1317  000B1C  8C94               	bsf	3988,6,c	;volatile
  1318                           
  1319                           ;Test.c: 96: TRISC7 = 1;
  1320  000B1E  8E94               	bsf	3988,7,c	;volatile
  1321  000B20  0012               	return		;funcret
  1322  000B22                     __end_of_PORT_Initialize:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function _InitI2C *****************
  1326 ;; Defined at:
  1327 ;;		line 19 in file "hw_I2C.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1341 ;;      Params:         0       0       0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text9
  1355  000A9C                     __ptext9:
  1356                           	callstack 0
  1357  000A9C                     _InitI2C:
  1358                           	callstack 30
  1359  000A9C                     
  1360                           ;hw_I2C.c: 21: TRISC3 = 1;
  1361  000A9C  8694               	bsf	3988,3,c	;volatile
  1362                           
  1363                           ;hw_I2C.c: 22: TRISC4 = 1;
  1364  000A9E  8894               	bsf	3988,4,c	;volatile
  1365  000AA0                     
  1366                           ;hw_I2C.c: 24: SSPADD = 0x13;
  1367  000AA0  0E13               	movlw	19
  1368  000AA2  6EC8               	movwf	200,c	;volatile
  1369                           
  1370                           ;hw_I2C.c: 25: SSPSTAT = 0;
  1371  000AA4  0E00               	movlw	0
  1372  000AA6  6EC7               	movwf	199,c	;volatile
  1373  000AA8                     
  1374                           ;hw_I2C.c: 26: SSPCON1bits.SSPEN = 1;
  1375  000AA8  8AC6               	bsf	198,5,c	;volatile
  1376                           
  1377                           ;hw_I2C.c: 27: SSPCON1bits.SSPM = 0b1000;
  1378  000AAA  50C6               	movf	198,w,c	;volatile
  1379  000AAC  0BF0               	andlw	-16
  1380  000AAE  0908               	iorlw	8
  1381  000AB0  6EC6               	movwf	198,c	;volatile
  1382  000AB2                     
  1383                           ;hw_I2C.c: 28: SSPIF = 0;
  1384  000AB2  969E               	bcf	3998,3,c	;volatile
  1385  000AB4  0012               	return		;funcret
  1386  000AB6                     __end_of_InitI2C:
  1387                           	callstack 0
  1388                           
  1389 ;; *************** function _I2C_Master_Write *****************
  1390 ;; Defined at:
  1391 ;;		line 53 in file "hw_I2C.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  d               2    1[COMRAM] unsigned int 
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1405 ;;      Params:         2       0       0       0       0       0       0
  1406 ;;      Locals:         0       0       0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0       0       0
  1408 ;;      Totals:         2       0       0       0       0       0       0
  1409 ;;Total ram usage:        2 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    1
  1412 ;; This function calls:
  1413 ;;		_I2C_Master_Wait
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;;		_RTC_test_write
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text10
  1421  000B02                     __ptext10:
  1422                           	callstack 0
  1423  000B02                     _I2C_Master_Write:
  1424                           	callstack 29
  1425  000B02                     
  1426                           ;hw_I2C.c: 55: I2C_Master_Wait();
  1427  000B02  EC2A  F005         	call	_I2C_Master_Wait	;wreg free
  1428  000B06                     
  1429                           ;hw_I2C.c: 56: SSPBUF = d;
  1430  000B06  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1431  000B0A  0012               	return		;funcret
  1432  000B0C                     __end_of_I2C_Master_Write:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _I2C_Master_Stop *****************
  1436 ;; Defined at:
  1437 ;;		line 47 in file "hw_I2C.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1451 ;;      Params:         0       0       0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    1
  1458 ;; This function calls:
  1459 ;;		_I2C_Master_Wait
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;;		_RTC_test_write
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text11
  1467  000B0C                     __ptext11:
  1468                           	callstack 0
  1469  000B0C                     _I2C_Master_Stop:
  1470                           	callstack 29
  1471  000B0C                     
  1472                           ;hw_I2C.c: 49: I2C_Master_Wait();
  1473  000B0C  EC2A  F005         	call	_I2C_Master_Wait	;wreg free
  1474  000B10                     
  1475                           ;hw_I2C.c: 50: PEN = 1;
  1476  000B10  84C5               	bsf	4037,2,c	;volatile
  1477  000B12  0012               	return		;funcret
  1478  000B14                     __end_of_I2C_Master_Stop:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _I2C_Master_Start *****************
  1482 ;; Defined at:
  1483 ;;		line 35 in file "hw_I2C.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1497 ;;      Params:         0       0       0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    1
  1504 ;; This function calls:
  1505 ;;		_I2C_Master_Wait
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;;		_RTC_test_write
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text12
  1513  000B14                     __ptext12:
  1514                           	callstack 0
  1515  000B14                     _I2C_Master_Start:
  1516                           	callstack 29
  1517  000B14                     
  1518                           ;hw_I2C.c: 37: I2C_Master_Wait();
  1519  000B14  EC2A  F005         	call	_I2C_Master_Wait	;wreg free
  1520  000B18                     
  1521                           ;hw_I2C.c: 38: SEN = 1;
  1522  000B18  80C5               	bsf	4037,0,c	;volatile
  1523  000B1A  0012               	return		;funcret
  1524  000B1C                     __end_of_I2C_Master_Start:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _I2C_Master_Wait *****************
  1528 ;; Defined at:
  1529 ;;		line 31 in file "hw_I2C.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1543 ;;      Params:         0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0
  1545 ;;      Temps:          1       0       0       0       0       0       0
  1546 ;;      Totals:         1       0       0       0       0       0       0
  1547 ;;Total ram usage:        1 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; This function calls:
  1550 ;;		Nothing
  1551 ;; This function is called by:
  1552 ;;		_I2C_Master_Start
  1553 ;;		_I2C_Master_Stop
  1554 ;;		_I2C_Master_Write
  1555 ;;		_I2C_Master_RepeatedStart
  1556 ;;		_I2C_Master_Read
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text13
  1561  000A54                     __ptext13:
  1562                           	callstack 0
  1563  000A54                     _I2C_Master_Wait:
  1564                           	callstack 29
  1565  000A54                     l160:
  1566  000A54  B4C7               	btfsc	199,2,c	;volatile
  1567  000A56  EF2F  F005         	goto	u21
  1568  000A5A  EF31  F005         	goto	u20
  1569  000A5E                     u21:
  1570  000A5E  EF2A  F005         	goto	l160
  1571  000A62                     u20:
  1572  000A62  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1573  000A66  0E1F               	movlw	31
  1574  000A68  1601               	andwf	??_I2C_Master_Wait^0,f,c
  1575  000A6A  A4D8               	btfss	status,2,c
  1576  000A6C  EF3A  F005         	goto	u31
  1577  000A70  EF3C  F005         	goto	u30
  1578  000A74                     u31:
  1579  000A74  EF2A  F005         	goto	l160
  1580  000A78                     u30:
  1581  000A78  0012               	return		;funcret
  1582  000A7A                     __end_of_I2C_Master_Wait:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _CLK_intialize *****************
  1586 ;; Defined at:
  1587 ;;		line 81 in file "Test.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1601 ;;      Params:         0       0       0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0
  1604 ;;      Totals:         0       0       0       0       0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text14
  1615  000AF6                     __ptext14:
  1616                           	callstack 0
  1617  000AF6                     _CLK_intialize:
  1618                           	callstack 30
  1619  000AF6                     
  1620                           ;Test.c: 87: OSCCONbits.IRCF = 0b111;
  1621  000AF6  0E70               	movlw	112
  1622  000AF8  12D3               	iorwf	211,f,c	;volatile
  1623  000AFA                     
  1624                           ;Test.c: 89: OSCCONbits.IDLEN = 0b0;
  1625  000AFA  9ED3               	bcf	211,7,c	;volatile
  1626                           
  1627                           ;Test.c: 90: OSCCONbits.SCS = 0b11 ;
  1628  000AFC  0E03               	movlw	3
  1629  000AFE  12D3               	iorwf	211,f,c	;volatile
  1630  000B00  0012               	return		;funcret
  1631  000B02                     __end_of_CLK_intialize:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _ADC_intialize *****************
  1635 ;; Defined at:
  1636 ;;		line 18 in file "hw_adc.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1650 ;;      Params:         0       0       0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text15
  1664  000A7A                     __ptext15:
  1665                           	callstack 0
  1666  000A7A                     _ADC_intialize:
  1667                           	callstack 30
  1668  000A7A                     
  1669                           ;hw_adc.c: 25: TRISA1 = 1 ;
  1670  000A7A  8292               	bsf	3986,1,c	;volatile
  1671                           
  1672                           ;hw_adc.c: 26: TRISA2 = 1 ;
  1673  000A7C  8492               	bsf	3986,2,c	;volatile
  1674  000A7E                     
  1675                           ;hw_adc.c: 32: ADCON1bits.PCFG = 0b1100;
  1676  000A7E  50C1               	movf	193,w,c	;volatile
  1677  000A80  0BF0               	andlw	-16
  1678  000A82  090C               	iorlw	12
  1679  000A84  6EC1               	movwf	193,c	;volatile
  1680  000A86                     
  1681                           ;hw_adc.c: 33: ADCON1bits.VCFG0 = 0;
  1682  000A86  98C1               	bcf	193,4,c	;volatile
  1683  000A88                     
  1684                           ;hw_adc.c: 34: ADCON1bits.VCFG1 = 0 ;
  1685  000A88  9AC1               	bcf	193,5,c	;volatile
  1686                           
  1687                           ;hw_adc.c: 37: ADCON2bits.ADCS = 0b110;
  1688  000A8A  50C0               	movf	192,w,c	;volatile
  1689  000A8C  0BF8               	andlw	-8
  1690  000A8E  0906               	iorlw	6
  1691  000A90  6EC0               	movwf	192,c	;volatile
  1692                           
  1693                           ;hw_adc.c: 38: ADCON2bits.ACQT = 0b111;
  1694  000A92  0E38               	movlw	56
  1695  000A94  12C0               	iorwf	192,f,c	;volatile
  1696  000A96                     
  1697                           ;hw_adc.c: 39: ADCON2bits.ADFM = 1;
  1698  000A96  8EC0               	bsf	192,7,c	;volatile
  1699  000A98                     
  1700                           ;hw_adc.c: 40: ADCON0bits.ADON = 1 ;
  1701  000A98  80C2               	bsf	194,0,c	;volatile
  1702  000A9A  0012               	return		;funcret
  1703  000A9C                     __end_of_ADC_intialize:
  1704                           	callstack 0
  1705                           
  1706                           	psect	rparam
  1707  0000                     
  1708                           	psect	idloc
  1709                           
  1710                           ;Config register IDLOC0 @ 0x200000
  1711                           ;	unspecified, using default values
  1712  200000                     	org	2097152
  1713  200000  FF                 	db	255
  1714                           
  1715                           ;Config register IDLOC1 @ 0x200001
  1716                           ;	unspecified, using default values
  1717  200001                     	org	2097153
  1718  200001  FF                 	db	255
  1719                           
  1720                           ;Config register IDLOC2 @ 0x200002
  1721                           ;	unspecified, using default values
  1722  200002                     	org	2097154
  1723  200002  FF                 	db	255
  1724                           
  1725                           ;Config register IDLOC3 @ 0x200003
  1726                           ;	unspecified, using default values
  1727  200003                     	org	2097155
  1728  200003  FF                 	db	255
  1729                           
  1730                           ;Config register IDLOC4 @ 0x200004
  1731                           ;	unspecified, using default values
  1732  200004                     	org	2097156
  1733  200004  FF                 	db	255
  1734                           
  1735                           ;Config register IDLOC5 @ 0x200005
  1736                           ;	unspecified, using default values
  1737  200005                     	org	2097157
  1738  200005  FF                 	db	255
  1739                           
  1740                           ;Config register IDLOC6 @ 0x200006
  1741                           ;	unspecified, using default values
  1742  200006                     	org	2097158
  1743  200006  FF                 	db	255
  1744                           
  1745                           ;Config register IDLOC7 @ 0x200007
  1746                           ;	unspecified, using default values
  1747  200007                     	org	2097159
  1748  200007  FF                 	db	255
  1749                           
  1750                           	psect	config
  1751                           
  1752                           ; Padding undefined space
  1753  300000                     	org	3145728
  1754  300000  FF                 	db	255
  1755                           
  1756                           ;Config register CONFIG1H @ 0x300001
  1757                           ;	Oscillator Selection bits
  1758                           ;	OSC = INTIO7, Internal oscillator block, CLKO function on RA6, port function on RA7
  1759                           ;	Fail-Safe Clock Monitor Enable bit
  1760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1761                           ;	Internal/External Oscillator Switchover bit
  1762                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1763  300001                     	org	3145729
  1764  300001  09                 	db	9
  1765                           
  1766                           ;Config register CONFIG2L @ 0x300002
  1767                           ;	Power-up Timer Enable bit
  1768                           ;	PWRT = OFF, PWRT disabled
  1769                           ;	Brown-out Reset Enable bits
  1770                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1771                           ;	Brown Out Reset Voltage bits
  1772                           ;	BORV = 3, Minimum setting
  1773  300002                     	org	3145730
  1774  300002  1F                 	db	31
  1775                           
  1776                           ;Config register CONFIG2H @ 0x300003
  1777                           ;	Watchdog Timer Enable bit
  1778                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1779                           ;	Watchdog Timer Postscale Select bits
  1780                           ;	WDTPS = 32768, 1:32768
  1781  300003                     	org	3145731
  1782  300003  1E                 	db	30
  1783                           
  1784                           ; Padding undefined space
  1785  300004                     	org	3145732
  1786  300004  FF                 	db	255
  1787                           
  1788                           ;Config register CONFIG3H @ 0x300005
  1789                           ;	CCP2 MUX bit
  1790                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1791                           ;	PORTB A/D Enable bit
  1792                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1793                           ;	Low-Power Timer1 Oscillator Enable bit
  1794                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1795                           ;	MCLR Pin Enable bit
  1796                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1797  300005                     	org	3145733
  1798  300005  83                 	db	131
  1799                           
  1800                           ;Config register CONFIG4L @ 0x300006
  1801                           ;	Stack Full/Underflow Reset Enable bit
  1802                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1803                           ;	Single-Supply ICSP Enable bit
  1804                           ;	LVP = ON, Single-Supply ICSP enabled
  1805                           ;	Extended Instruction Set Enable bit
  1806                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1807                           ;	Background Debugger Enable bit
  1808                           ;	DEBUG = 0x1, unprogrammed default
  1809  300006                     	org	3145734
  1810  300006  85                 	db	133
  1811                           
  1812                           ; Padding undefined space
  1813  300007                     	org	3145735
  1814  300007  FF                 	db	255
  1815                           
  1816                           ;Config register CONFIG5L @ 0x300008
  1817                           ;	Code Protection bit
  1818                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1819                           ;	Code Protection bit
  1820                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1821                           ;	Code Protection bit
  1822                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1823                           ;	Code Protection bit
  1824                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1825  300008                     	org	3145736
  1826  300008  0F                 	db	15
  1827                           
  1828                           ;Config register CONFIG5H @ 0x300009
  1829                           ;	Boot Block Code Protection bit
  1830                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1831                           ;	Data EEPROM Code Protection bit
  1832                           ;	CPD = OFF, Data EEPROM not code-protected
  1833  300009                     	org	3145737
  1834  300009  C0                 	db	192
  1835                           
  1836                           ;Config register CONFIG6L @ 0x30000A
  1837                           ;	Write Protection bit
  1838                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1839                           ;	Write Protection bit
  1840                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1841                           ;	Write Protection bit
  1842                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1843                           ;	Write Protection bit
  1844                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1845  30000A                     	org	3145738
  1846  30000A  0F                 	db	15
  1847                           
  1848                           ;Config register CONFIG6H @ 0x30000B
  1849                           ;	Configuration Register Write Protection bit
  1850                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1851                           ;	Boot Block Write Protection bit
  1852                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1853                           ;	Data EEPROM Write Protection bit
  1854                           ;	WRTD = OFF, Data EEPROM not write-protected
  1855  30000B                     	org	3145739
  1856  30000B  E0                 	db	224
  1857                           
  1858                           ;Config register CONFIG7L @ 0x30000C
  1859                           ;	Table Read Protection bit
  1860                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1861                           ;	Table Read Protection bit
  1862                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1863                           ;	Table Read Protection bit
  1864                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1865                           ;	Table Read Protection bit
  1866                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1867  30000C                     	org	3145740
  1868  30000C  0F                 	db	15
  1869                           
  1870                           ;Config register CONFIG7H @ 0x30000D
  1871                           ;	Boot Block Table Read Protection bit
  1872                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1873  30000D                     	org	3145741
  1874  30000D  40                 	db	64
  1875                           tosu	equ	0xFFF
  1876                           tosh	equ	0xFFE
  1877                           tosl	equ	0xFFD
  1878                           stkptr	equ	0xFFC
  1879                           pclatu	equ	0xFFB
  1880                           pclath	equ	0xFFA
  1881                           pcl	equ	0xFF9
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           prodh	equ	0xFF4
  1887                           prodl	equ	0xFF3
  1888                           indf0	equ	0xFEF
  1889                           postinc0	equ	0xFEE
  1890                           postdec0	equ	0xFED
  1891                           preinc0	equ	0xFEC
  1892                           plusw0	equ	0xFEB
  1893                           fsr0h	equ	0xFEA
  1894                           fsr0l	equ	0xFE9
  1895                           wreg	equ	0xFE8
  1896                           indf1	equ	0xFE7
  1897                           postinc1	equ	0xFE6
  1898                           postdec1	equ	0xFE5
  1899                           preinc1	equ	0xFE4
  1900                           plusw1	equ	0xFE3
  1901                           fsr1h	equ	0xFE2
  1902                           fsr1l	equ	0xFE1
  1903                           bsr	equ	0xFE0
  1904                           indf2	equ	0xFDF
  1905                           postinc2	equ	0xFDE
  1906                           postdec2	equ	0xFDD
  1907                           preinc2	equ	0xFDC
  1908                           plusw2	equ	0xFDB
  1909                           fsr2h	equ	0xFDA
  1910                           fsr2l	equ	0xFD9
  1911                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    10
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51      65
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(COMRAM[20]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_send_string->_UART_send_char
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0    2218
                                             25 COMRAM    26    26      0
                      _ADC_intialize
                      _CLK_intialize
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _InitI2C
                    _PORT_Initialize
                           _Read_ADC
                          _UART_Init
                   _UART_send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    16      6    1316
                                             12 COMRAM    13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     0      2     288
                                              1 COMRAM     2     0      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             7     5      2      68
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _PORT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     326
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CLK_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_intialize
   _CLK_intialize
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _InitI2C
   _PORT_Initialize
   _Read_ADC
   _UART_Init
   _UART_send_string
     _UART_send_char
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      41       1       51.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      15        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 16 10:22:31 2021

                        _i 0040                         l33 0B00                         l36 0B20  
                       l80 0AE0                         l74 0AF4                         l77 0ACE  
                       l93 0A52                         u10 0ADC                         u11 0AD8  
                       u20 0A62                         u21 0A5E                         u30 0A78  
                       u31 0A74             ?_CLK_intialize 0001                        l123 09C8  
                      l212 0796                        l118 0A9A                        l126 09F4  
                      l206 06FC                        l160 0A54                        l163 0A78  
                      l172 0B12                        l157 0AB4                        l166 0B1A  
                      l175 0B0A                        _ADC 0034                        l701 092E  
                      l711 0992                        l704 098A                        l694 0926  
                      l960 0ACE                        l962 0ADC                        l964 0A54  
                      l966 0A62                        u300 0976                        u301 0972  
                      u310 0A1A                        u320 0A42                        u400 0768  
                      u401 0764                        u330 0A52                        u250 08D6  
                      u410 078A                        u331 0A4E                        u251 08D2  
                      u411 0786                        u340 09A6                        u260 08F4  
                      u341 09A2                        u317 0A10                        u261 08F0  
                      u350 09BE                        u270 0910                        u351 09BA  
                      u327 0A38                        u271 090C                        u360 09D6  
                      u280 0942                        _PEN 007E2A                        u361 09D2  
                      u281 093E                        u290 0960                        u370 0652  
                      u291 095C                        u371 064E                        u427 07C6  
                      u380 06E4                        u381 06E0                        u437 07DE  
                      u390 06FC                        u391 06F8                        u447 0838  
                      u457 0886                        _SEN 007E28                        wreg 000FE8  
                     l1010 0B1C                       l1020 0A86                       l1022 0A88  
                     l1006 0AF6                       l1110 0B14                       l1030 0AA0  
                     l1024 0A96                       l1016 0A7A                       l1008 0AFA  
                     l1112 0B18                       l1120 0B10                       l1032 0AA8  
                     l1200 08DE                       l1026 0A98                       l1018 0A7E  
                     l1034 0AB2                       l1210 0918                       l1202 08E6  
                     l1028 0A9C                       l1212 091A                       l1204 08F4  
                     l1220 094A                       l1300 0752                       l1118 0B0C  
                     l1310 0B02                       l1214 0920                       l1206 08FA  
                     l1230 0984                       l1222 0952                       l1302 0756  
                     l1312 0B06                       l1232 0AE2                       l1240 0A1E  
                     l1208 0910                       l1224 0960                       l1216 0930  
                     l1304 0768                       l1320 07B4                       l1250 09AE  
                     l1234 0AEC                       l1242 0A22                       l1226 0976  
                     l1218 0942                       l1306 078A                       l1330 07EA  
                     l1322 07B8                       l1314 0798                       l1252 09BE  
                     l1244 0996                       l1236 09F6                       l1228 097E  
                     l1340 082E                       l1332 07EC                       l1324 07BC  
                     l1316 07A0                       l1254 09C6                       l1246 0996  
                     l1238 09FA                       l1270 0666                       l1262 0634  
                     l1350 0894                       l1342 0846                       l1334 07F8  
                     l1326 07D2                       l1318 07A8                       l1256 09D6  
                     l1248 09A6                       l1280 06AE                       l1272 066E  
                     l1264 0640                       l1352 0898                       l1344 0854  
                     l1336 0806                       l1328 07D4                       l1258 09EC  
                     l1194 08BC                       l1282 06B6                       l1266 0652  
                     l1354 08A4                       l1346 0870                       l1338 0822  
                     l1196 08C4                       l1292 06E8                       l1276 0676  
                     l1268 065E                       l1356 08B0                       l1348 087C  
                     l1198 08D6                       l1294 06EA                       l1278 069E  
                     l1296 0704                       l1288 06BA                       l1298 0746  
                     STR_1 060B                       STR_2 0629                       STR_3 061E  
                     _RCIF 007CF5                       _RCEN 007E2B                       _RSEN 007E29  
                     _TXIF 007CF4                       _main 0798               main@_adc_str 001C  
                     fsr0h 000FEA                       indf0 000FEF                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr2l 000FD9  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
             ___param_bank 000000            __end_of_InitI2C 0AB6  __size_of_UART_send_string 005E  
         ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001                      ?_main 0001  
                    _ACKEN 007E2C                      _ACKDT 007E2D                      _LATA4 007C4C  
                    _LATA5 007C4D                      _LATA6 007C4E            __end_of___lwdiv 0930  
          __end_of___lwmod 0994                      _RCREG 000FAE                      _SPBRG 000FAF  
                    _SSPIF 007CF3                      _TXREG 000FAD         __size_of_UART_Init 0014  
          __end_of_dpowers 060B                      _value 0038               main@temp_adc 0030  
                    tablat 000FF5                      status 000FD8            __end_of_sprintf 0798  
        ??_PORT_Initialize 0001            __initialization 0AB6               __end_of_main 08BC  
         __end_of_Read_ADC 09F6            ??_CLK_intialize 0001                     ??_main 001A  
            __activetblptr 000002          ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0002  
       ??_I2C_Master_Start 0002         ??_I2C_Master_Write 0004                     _ADRESH 000FC4  
                   _ADRESL 000FC3                     _SPBRGH 000FB0                     _SSPADD 000FC8  
                   _TRISA1 007C91                     _TRISA2 007C92                     _TRISB1 007C99  
                   _TRISC3 007CA3                     _TRISC4 007CA4                     _TRISC6 007CA6  
                   _TRISC7 007CA7                     _SSPBUF 000FC9                  ??_InitI2C 0001  
            main@humid_adc 0032          __end_of_UART_Init 0AF6            Read_ADC@channel 0007  
                ??___lwdiv 0005                  ??___lwmod 000C                     clear_0 0ABC  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_sprintf 0013                 __accesstop 0080  
  __end_of__initialization 0AC2              ___rparam_used 000001             __pcstackCOMRAM 0001  
         _UART_send_string 09F6                  ?_Read_ADC 0001     __size_of_ADC_intialize 0022  
          _PORT_Initialize 0B1C    __size_of_UART_send_char 0016                    _SSPCON2 000FC5  
                  _SSPSTAT 000FC7                 ??_Read_ADC 0003                    _InitI2C 0A9C  
                  __Hparam 0000                    __Lparam 0000                    ___lwdiv 08BC  
                  ___lwmod 0930               __psmallconst 0600                    __pcinit 0AB6  
            _ADC_intialize 0A7A                    __ramtop 0600                    __ptext0 0798  
                  __ptext1 0634                    __ptext2 0930                    __ptext3 08BC  
                  __ptext4 09F6                    __ptext5 0ACC                    __ptext6 0AE2  
                  __ptext7 0994                    __ptext8 0B1C                    __ptext9 0A9C  
                  _dpowers 0601   __size_of_I2C_Master_Wait 0026   __size_of_I2C_Master_Stop 0008  
                  _sprintf 0634                    _voltage 003C       end_of_initialization 0AC2  
            __Lmediumconst 0000  __size_of_I2C_Master_Start 0008  __size_of_I2C_Master_Write 000A  
                _RCSTAbits 000FAB                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE             ?_ADC_intialize 0001                  _UART_Init 0AE2  
  __end_of_PORT_Initialize 0B22      __end_of_CLK_intialize 0B02         UART_Init@baud_rate 0001  
 __end_of_UART_send_string 0A54                  _TXSTAbits 000FAC                _BAUDCONbits 000FB8  
               ?_UART_Init 0001        start_initialization 0AB6             _UART_send_char 0ACC  
        ??_I2C_Master_Wait 0001          ??_I2C_Master_Stop 0002          __size_of_Read_ADC 0062  
          ??_ADC_intialize 0001             Read_ADC@result 0005           ?_PORT_Initialize 0001  
   __end_of_UART_send_char 0AE2                __pbssCOMRAM 0034                sprintf@flag 0013  
              sprintf@prec 0018                   ?_InitI2C 0001           _I2C_Master_Start 0B14  
         _I2C_Master_Write 0B02           ___lwdiv@dividend 0001                   ?___lwdiv 0001  
                 ?___lwmod 0008                ??_UART_Init 0003           UART_send_char@bt 0001  
              __smallconst 0600            ?_UART_send_char 0001           ___lwdiv@quotient 0005  
                 ?_sprintf 000D                 _ADCON0bits 000FC2                 _ADCON1bits 000FC1  
               _ADCON2bits 000FC0      UART_send_string@st_pt 0002          ?_UART_send_string 0002  
                 _Read_ADC 0994         ??_UART_send_string 0004           __size_of_InitI2C 001A  
                 __Hrparam 0000                   __Lrparam 0000           __size_of___lwdiv 0074  
         __size_of___lwmod 0064                 sprintf@val 0016            _I2C_Master_Wait 0A54  
          _I2C_Master_Stop 0B0C            ___lwdiv@divisor 0003            ___lwdiv@counter 0007  
                 __ptext10 0B02                   __ptext11 0B0C                   __ptext12 0B14  
                 __ptext13 0A54                   __ptext14 0AF6                   __ptext15 0A7A  
         __size_of_sprintf 0164              __size_of_main 0124     __size_of_CLK_intialize 000C  
 __end_of_I2C_Master_Start 0B1C   __end_of_I2C_Master_Write 0B0C                 _INTCONbits 000FF2  
                sprintf@ap 0014                  sprintf@sp 000D           ___lwmod@dividend 0008  
               _OSCCONbits 000FD3           ??_UART_send_char 0001      __end_of_ADC_intialize 0A9C  
  __end_of_I2C_Master_Wait 0A7A    __end_of_I2C_Master_Stop 0B14                   sprintf@c 0019  
                 sprintf@f 000F              _CLK_intialize 0AF6          I2C_Master_Write@d 0002  
          ___lwmod@divisor 000A            ___lwmod@counter 000C                _SSPCON1bits 000FC6  
 __size_of_PORT_Initialize 0006  
