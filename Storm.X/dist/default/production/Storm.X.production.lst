

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 11:17:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F2520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F2520 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	idataBANK0
    90  003392                     __pidataBANK0:
    91                           	callstack 0
    92                           
    93                           ;initializer for stoa@F1154
    94  003392  28                 	db	40
    95  003393  6E                 	db	110
    96  003394  75                 	db	117
    97  003395  6C                 	db	108
    98  003396  6C                 	db	108
    99  003397  29                 	db	41
   100  003398  00                 	db	0
   101  0000                     _ADCON2bits	set	4032
   102  0000                     _ADCON1bits	set	4033
   103  0000                     _ADRESL	set	4035
   104  0000                     _ADRESH	set	4036
   105  0000                     _ADCON0bits	set	4034
   106  0000                     _RCREG	set	4014
   107  0000                     _TXREG	set	4013
   108  0000                     _SPBRG	set	4015
   109  0000                     _SPBRGH	set	4016
   110  0000                     _RCSTAbits	set	4011
   111  0000                     _BAUDCONbits	set	4024
   112  0000                     _TXSTAbits	set	4012
   113  0000                     _INTCONbits	set	4082
   114  0000                     _OSCCONbits	set	4051
   115  0000                     _TRISA1	set	31889
   116  0000                     _RCIF	set	31989
   117  0000                     _LATA6	set	31822
   118  0000                     _LATA5	set	31821
   119  0000                     _LATA4	set	31820
   120  0000                     _TXIF	set	31988
   121  0000                     _TRISB1	set	31897
   122  0000                     _TRISC7	set	31911
   123  0000                     _TRISC6	set	31910
   124                           
   125                           	psect	smallconst
   126  000600                     __psmallconst:
   127                           	callstack 0
   128  000600  00                 	db	0
   129  000601                     STR_1:
   130  000601  44                 	db	68	;'D'
   131  000602  61                 	db	97	;'a'
   132  000603  76                 	db	118	;'v'
   133  000604  65                 	db	101	;'e'
   134  000605  20                 	db	32
   135  000606  69                 	db	105	;'i'
   136  000607  73                 	db	115	;'s'
   137  000608  20                 	db	32
   138  000609  61                 	db	97	;'a'
   139  00060A  20                 	db	32
   140  00060B  6C                 	db	108	;'l'
   141  00060C  65                 	db	101	;'e'
   142  00060D  67                 	db	103	;'g'
   143  00060E  65                 	db	101	;'e'
   144  00060F  6E                 	db	110	;'n'
   145  000610  64                 	db	100	;'d'
   146  000611  21                 	db	33
   147  000612  0A                 	db	10
   148  000613  00                 	db	0
   149  000614                     STR_3:
   150  000614  48                 	db	72	;'H'
   151  000615  55                 	db	85	;'U'
   152  000616  4D                 	db	77	;'M'
   153  000617  49                 	db	73	;'I'
   154  000618  44                 	db	68	;'D'
   155  000619  3A                 	db	58	;':'
   156  00061A  20                 	db	32
   157  00061B  25                 	db	37
   158  00061C  75                 	db	117	;'u'
   159  00061D  0A                 	db	10
   160  00061E  00                 	db	0
   161  00061F                     STR_2:
   162  00061F  54                 	db	84	;'T'
   163  000620  45                 	db	69	;'E'
   164  000621  4D                 	db	77	;'M'
   165  000622  50                 	db	80	;'P'
   166  000623  3A                 	db	58	;':'
   167  000624  20                 	db	32
   168  000625  25                 	db	37
   169  000626  75                 	db	117	;'u'
   170  000627  0A                 	db	10
   171  000628  00                 	db	0
   172  000629                     STR_80:
   173  000629  68                 	db	104	;'h'
   174  00062A  68                 	db	104	;'h'
   175  00062B  58                 	db	88	;'X'
   176  00062C  00                 	db	0
   177  00062D                     STR_4:
   178  00062D  68                 	db	104	;'h'
   179  00062E  68                 	db	104	;'h'
   180  00062F  64                 	db	100	;'d'
   181  000630  00                 	db	0
   182  000631                     STR_8:
   183  000631  68                 	db	104	;'h'
   184  000632  68                 	db	104	;'h'
   185  000633  69                 	db	105	;'i'
   186  000634  00                 	db	0
   187  000635                     STR_46:
   188  000635  68                 	db	104	;'h'
   189  000636  68                 	db	104	;'h'
   190  000637  6E                 	db	110	;'n'
   191  000638  00                 	db	0
   192  000639                     STR_31:
   193  000639  68                 	db	104	;'h'
   194  00063A  68                 	db	104	;'h'
   195  00063B  6F                 	db	111	;'o'
   196  00063C  00                 	db	0
   197  00063D                     STR_61:
   198  00063D  68                 	db	104	;'h'
   199  00063E  68                 	db	104	;'h'
   200  00063F  75                 	db	117	;'u'
   201  000640  00                 	db	0
   202  000641                     STR_76:
   203  000641  68                 	db	104	;'h'
   204  000642  68                 	db	104	;'h'
   205  000643  78                 	db	120	;'x'
   206  000644  00                 	db	0
   207  000645                     STR_98:
   208  000645  7A                 	db	122	;'z'
   209  000646  58                 	db	88	;'X'
   210  000647  00                 	db	0
   211  000648                     STR_22:
   212  000648  7A                 	db	122	;'z'
   213  000649  64                 	db	100	;'d'
   214  00064A  00                 	db	0
   215  00064B                     STR_26:
   216  00064B  7A                 	db	122	;'z'
   217  00064C  69                 	db	105	;'i'
   218  00064D  00                 	db	0
   219  00064E                     STR_56:
   220  00064E  7A                 	db	122	;'z'
   221  00064F  6E                 	db	110	;'n'
   222  000650  00                 	db	0
   223  000651                     STR_41:
   224  000651  7A                 	db	122	;'z'
   225  000652  6F                 	db	111	;'o'
   226  000653  00                 	db	0
   227  000654                     STR_71:
   228  000654  7A                 	db	122	;'z'
   229  000655  75                 	db	117	;'u'
   230  000656  00                 	db	0
   231  000657                     STR_94:
   232  000657  7A                 	db	122	;'z'
   233  000658  78                 	db	120	;'x'
   234  000659  00                 	db	0
   235  00065A  00                 	db	0	; dummy byte at the end
   236  0000                     
   237                           ; #config settings
   238                           
   239                           	psect	cinit
   240  00327A                     __pcinit:
   241                           	callstack 0
   242  00327A                     start_initialization:
   243                           	callstack 0
   244  00327A                     __initialization:
   245                           	callstack 0
   246                           
   247                           ; Initialize objects allocated to BANK0 (7 bytes)
   248                           ; load TBLPTR registers with __pidataBANK0
   249  00327A  0E92               	movlw	low __pidataBANK0
   250  00327C  6EF6               	movwf	tblptrl,c
   251  00327E  0E33               	movlw	high __pidataBANK0
   252  003280  6EF7               	movwf	tblptrh,c
   253  003282  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   254  003284  6EF8               	movwf	tblptru,c
   255  003286  EE00  F0E6         	lfsr	0,__pdataBANK0
   256  00328A  EE10 F007          	lfsr	1,7
   257  00328E                     copy_data0:
   258  00328E  0009               	tblrd		*+
   259  003290  CFF5 FFEE          	movff	tablat,postinc0
   260  003294  50E5               	movf	postdec1,w,c
   261  003296  50E1               	movf	fsr1l,w,c
   262  003298  E1FA               	bnz	copy_data0
   263                           
   264                           ; Clear objects allocated to BANK0 (56 bytes)
   265  00329A  EE00  F080         	lfsr	0,__pbssBANK0
   266  00329E  0E38               	movlw	56
   267  0032A0                     clear_0:
   268  0032A0  6AEE               	clrf	postinc0,c
   269  0032A2  06E8               	decf	wreg,f,c
   270  0032A4  E1FD               	bnz	clear_0
   271  0032A6                     end_of_initialization:
   272                           	callstack 0
   273  0032A6                     __end_of__initialization:
   274                           	callstack 0
   275  0032A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  0032A8  6EF8               	movwf	tblptru,c
   277  0032AA  0100               	movlb	0
   278  0032AC  EFAB  F014         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssBANK0
   281  000080                     __pbssBANK0:
   282                           	callstack 0
   283  000080                     _ADC:
   284                           	callstack 0
   285  000080                     	ds	4
   286  000084                     _value:
   287                           	callstack 0
   288  000084                     	ds	4
   289  000088                     _voltage:
   290                           	callstack 0
   291  000088                     	ds	4
   292  00008C                     _nout:
   293                           	callstack 0
   294  00008C                     	ds	2
   295  00008E                     _width:
   296                           	callstack 0
   297  00008E                     	ds	2
   298  000090                     _prec:
   299                           	callstack 0
   300  000090                     	ds	2
   301  000092                     _flags:
   302                           	callstack 0
   303  000092                     	ds	2
   304  000094                     _errno:
   305                           	callstack 0
   306  000094                     	ds	2
   307  000096                     _i:
   308                           	callstack 0
   309  000096                     	ds	2
   310  000098                     _dbuf:
   311                           	callstack 0
   312  000098                     	ds	32
   313                           
   314                           	psect	dataBANK0
   315  0000E6                     __pdataBANK0:
   316                           	callstack 0
   317  0000E6                     stoa@F1154:
   318                           	callstack 0
   319  0000E6                     	ds	7
   320                           
   321                           	psect	cstackBANK0
   322  0000B8                     __pcstackBANK0:
   323                           	callstack 0
   324  0000B8                     _vsnprintf$1009:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x0
   328  0000B8                     	ds	2
   329  0000BA                     vsnprintf@cnt:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x2
   333  0000BA                     	ds	2
   334  0000BC                     vsnprintf@f:
   335                           	callstack 0
   336                           
   337                           ; 6 bytes @ 0x4
   338  0000BC                     	ds	6
   339  0000C2                     ?_snprintf:
   340                           	callstack 0
   341  0000C2                     snprintf@s:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0xA
   345  0000C2                     	ds	2
   346  0000C4                     snprintf@n:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xC
   350  0000C4                     	ds	2
   351  0000C6                     snprintf@fmt:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0xE
   355  0000C6                     	ds	6
   356  0000CC                     snprintf@ap:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x14
   360  0000CC                     	ds	2
   361  0000CE                     main@_adc_str:
   362                           	callstack 0
   363                           
   364                           ; 20 bytes @ 0x16
   365  0000CE                     	ds	20
   366  0000E2                     main@temp_adc:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x2A
   370  0000E2                     	ds	2
   371  0000E4                     main@humid_adc:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x2C
   375  0000E4                     	ds	2
   376                           
   377                           	psect	cstackCOMRAM
   378  000001                     __pcstackCOMRAM:
   379                           	callstack 0
   380  000001                     ?_Read_ADC:
   381                           	callstack 0
   382  000001                     ?_strlen:
   383                           	callstack 0
   384  000001                     ?_isupper:
   385                           	callstack 0
   386  000001                     ?_isalpha:
   387                           	callstack 0
   388  000001                     ?_isdigit:
   389                           	callstack 0
   390  000001                     ?_strncmp:
   391                           	callstack 0
   392  000001                     ?_isspace:
   393                           	callstack 0
   394  000001                     ?_islower:
   395                           	callstack 0
   396  000001                     ?___wmul:
   397                           	callstack 0
   398  000001                     ?___aodiv:
   399                           	callstack 0
   400  000001                     ?___aomod:
   401                           	callstack 0
   402  000001                     ?___lodiv:
   403                           	callstack 0
   404  000001                     ?___lomod:
   405                           	callstack 0
   406  000001                     UART_send_char@bt:
   407                           	callstack 0
   408  000001                     ___wmul@multiplier:
   409                           	callstack 0
   410  000001                     isalpha@c:
   411                           	callstack 0
   412  000001                     isdigit@c:
   413                           	callstack 0
   414  000001                     isspace@c:
   415                           	callstack 0
   416  000001                     isupper@c:
   417                           	callstack 0
   418  000001                     fputc@c:
   419                           	callstack 0
   420  000001                     strlen@s:
   421                           	callstack 0
   422  000001                     strncmp@_l:
   423                           	callstack 0
   424  000001                     islower@c:
   425                           	callstack 0
   426  000001                     UART_Init@baud_rate:
   427                           	callstack 0
   428  000001                     ___aodiv@dividend:
   429                           	callstack 0
   430  000001                     ___aomod@dividend:
   431                           	callstack 0
   432  000001                     ___lodiv@dividend:
   433                           	callstack 0
   434  000001                     ___lomod@dividend:
   435                           	callstack 0
   436                           
   437                           ; 8 bytes @ 0x0
   438  000001                     	ds	1
   439  000002                     UART_send_string@st_pt:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x1
   443  000002                     	ds	1
   444  000003                     ??_Read_ADC:
   445  000003                     ??_isupper:
   446  000003                     ??_isalpha:
   447  000003                     ??_isdigit:
   448  000003                     ??_isspace:
   449  000003                     ??_islower:
   450  000003                     ___wmul@multiplicand:
   451                           	callstack 0
   452  000003                     fputc@fp:
   453                           	callstack 0
   454  000003                     strlen@a:
   455                           	callstack 0
   456  000003                     strncmp@_r:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2
   460  000003                     	ds	1
   461  000004                     
   462                           ; 1 bytes @ 0x3
   463  000004                     	ds	1
   464  000005                     ??_fputc:
   465  000005                     Read_ADC@channel:
   466                           	callstack 0
   467  000005                     ___wmul@product:
   468                           	callstack 0
   469  000005                     strncmp@n:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x4
   473  000005                     	ds	1
   474  000006                     Read_ADC@result:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x5
   478  000006                     	ds	1
   479  000007                     ??_strncmp:
   480  000007                     ?_toupper:
   481                           	callstack 0
   482  000007                     _isspace$1299:
   483                           	callstack 0
   484  000007                     toupper@c:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x6
   488  000007                     	ds	1
   489  000008                     ?_atoi:
   490                           	callstack 0
   491  000008                     atoi@s:
   492                           	callstack 0
   493  000008                     strncmp@l:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x7
   497  000008                     	ds	1
   498  000009                     ??_toupper:
   499  000009                     ___aodiv@divisor:
   500                           	callstack 0
   501  000009                     ___aomod@divisor:
   502                           	callstack 0
   503  000009                     ___lodiv@divisor:
   504                           	callstack 0
   505  000009                     ___lomod@divisor:
   506                           	callstack 0
   507                           
   508                           ; 8 bytes @ 0x8
   509  000009                     	ds	1
   510  00000A                     ??_atoi:
   511  00000A                     ?_ctoa:
   512                           	callstack 0
   513  00000A                     ?_stoa:
   514                           	callstack 0
   515  00000A                     ctoa@fp:
   516                           	callstack 0
   517  00000A                     stoa@fp:
   518                           	callstack 0
   519  00000A                     fputs@s:
   520                           	callstack 0
   521  00000A                     strncmp@r:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x9
   525  00000A                     	ds	2
   526  00000C                     ctoa@c:
   527                           	callstack 0
   528  00000C                     stoa@s:
   529                           	callstack 0
   530  00000C                     fputs@fp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xB
   534  00000C                     	ds	1
   535  00000D                     ??_ctoa:
   536  00000D                     _toupper$1359:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xC
   540  00000D                     	ds	1
   541  00000E                     ??_stoa:
   542  00000E                     fputs@c:
   543                           	callstack 0
   544  00000E                     ctoa@l:
   545                           	callstack 0
   546  00000E                     atoi@neg:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0xD
   550  00000E                     	ds	1
   551  00000F                     fputs@i:
   552                           	callstack 0
   553  00000F                     stoa@nuls:
   554                           	callstack 0
   555                           
   556                           ; 7 bytes @ 0xE
   557  00000F                     	ds	1
   558  000010                     ctoa@w:
   559                           	callstack 0
   560  000010                     _atoi$1271:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0xF
   564  000010                     	ds	1
   565  000011                     ?_pad:
   566                           	callstack 0
   567  000011                     ___aodiv@counter:
   568                           	callstack 0
   569  000011                     ___aomod@counter:
   570                           	callstack 0
   571  000011                     ___lomod@counter:
   572                           	callstack 0
   573  000011                     pad@fp:
   574                           	callstack 0
   575  000011                     ___lodiv@quotient:
   576                           	callstack 0
   577                           
   578                           ; 8 bytes @ 0x10
   579  000011                     	ds	1
   580  000012                     ___aodiv@sign:
   581                           	callstack 0
   582  000012                     ___aomod@sign:
   583                           	callstack 0
   584  000012                     _atoi$1273:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x11
   588  000012                     	ds	1
   589  000013                     ?_abs:
   590                           	callstack 0
   591  000013                     pad@buf:
   592                           	callstack 0
   593  000013                     abs@a:
   594                           	callstack 0
   595  000013                     ___aodiv@quotient:
   596                           	callstack 0
   597                           
   598                           ; 8 bytes @ 0x12
   599  000013                     	ds	1
   600  000014                     _atoi$1272:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x13
   604  000014                     	ds	1
   605  000015                     ??_abs:
   606  000015                     pad@p:
   607                           	callstack 0
   608  000015                     atoi@n:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x14
   612  000015                     	ds	1
   613  000016                     stoa@i:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x15
   617  000016                     	ds	1
   618  000017                     ??_pad:
   619                           
   620                           ; 1 bytes @ 0x16
   621  000017                     	ds	1
   622  000018                     pad@i:
   623                           	callstack 0
   624  000018                     stoa@w:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x17
   628  000018                     	ds	1
   629  000019                     ___lodiv@counter:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x18
   633  000019                     	ds	1
   634  00001A                     pad@w:
   635                           	callstack 0
   636  00001A                     stoa@cp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x19
   640  00001A                     	ds	2
   641  00001C                     ?_dtoa:
   642                           	callstack 0
   643  00001C                     ?_otoa:
   644                           	callstack 0
   645  00001C                     ?_utoa:
   646                           	callstack 0
   647  00001C                     ?_xtoa:
   648                           	callstack 0
   649  00001C                     dtoa@fp:
   650                           	callstack 0
   651  00001C                     otoa@fp:
   652                           	callstack 0
   653  00001C                     stoa@p:
   654                           	callstack 0
   655  00001C                     utoa@fp:
   656                           	callstack 0
   657  00001C                     xtoa@fp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x1B
   661  00001C                     	ds	2
   662  00001E                     stoa@l:
   663                           	callstack 0
   664  00001E                     dtoa@d:
   665                           	callstack 0
   666  00001E                     otoa@d:
   667                           	callstack 0
   668  00001E                     utoa@d:
   669                           	callstack 0
   670  00001E                     xtoa@d:
   671                           	callstack 0
   672                           
   673                           ; 8 bytes @ 0x1D
   674  00001E                     	ds	8
   675  000026                     ??_dtoa:
   676  000026                     ??_otoa:
   677  000026                     ??_utoa:
   678  000026                     xtoa@x:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x25
   682  000026                     	ds	1
   683  000027                     ??_xtoa:
   684                           
   685                           ; 1 bytes @ 0x26
   686  000027                     	ds	7
   687  00002E                     _dtoa$1094:
   688                           	callstack 0
   689  00002E                     otoa@p:
   690                           	callstack 0
   691  00002E                     utoa@p:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2D
   695  00002E                     	ds	1
   696  00002F                     _xtoa$1131:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x2E
   700  00002F                     	ds	1
   701  000030                     dtoa@p:
   702                           	callstack 0
   703  000030                     otoa@t:
   704                           	callstack 0
   705  000030                     utoa@w:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x2F
   709  000030                     	ds	1
   710  000031                     _xtoa$1132:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x30
   714  000031                     	ds	1
   715  000032                     dtoa@w:
   716                           	callstack 0
   717  000032                     otoa@w:
   718                           	callstack 0
   719  000032                     utoa@n:
   720                           	callstack 0
   721                           
   722                           ; 8 bytes @ 0x31
   723  000032                     	ds	1
   724  000033                     xtoa@p:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x32
   728  000033                     	ds	1
   729  000034                     dtoa@s:
   730                           	callstack 0
   731  000034                     otoa@n:
   732                           	callstack 0
   733                           
   734                           ; 8 bytes @ 0x33
   735  000034                     	ds	1
   736  000035                     xtoa@w:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x34
   740  000035                     	ds	1
   741  000036                     dtoa@n:
   742                           	callstack 0
   743                           
   744                           ; 8 bytes @ 0x35
   745  000036                     	ds	1
   746  000037                     xtoa@n:
   747                           	callstack 0
   748                           
   749                           ; 8 bytes @ 0x36
   750  000037                     	ds	3
   751  00003A                     utoa@i:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x39
   755  00003A                     	ds	2
   756  00003C                     otoa@i:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x3B
   760  00003C                     	ds	2
   761  00003E                     dtoa@i:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x3D
   765  00003E                     	ds	1
   766  00003F                     xtoa@i:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x3E
   770  00003F                     	ds	2
   771  000041                     xtoa@c:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x40
   775  000041                     	ds	2
   776  000043                     ?_vfpfcnvrt:
   777                           	callstack 0
   778  000043                     vfpfcnvrt@fp:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x42
   782  000043                     	ds	2
   783  000045                     vfpfcnvrt@fmt:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x44
   787  000045                     	ds	2
   788  000047                     vfpfcnvrt@ap:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x46
   792  000047                     	ds	2
   793  000049                     ??_vfpfcnvrt:
   794                           
   795                           ; 1 bytes @ 0x48
   796  000049                     	ds	4
   797  00004D                     vfpfcnvrt@cp:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x4C
   801  00004D                     	ds	2
   802  00004F                     vfpfcnvrt@done:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x4E
   806  00004F                     	ds	2
   807  000051                     _vfpfcnvrt$1146:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x50
   811  000051                     	ds	2
   812  000053                     _vfpfcnvrt$1147:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x52
   816  000053                     	ds	2
   817  000055                     vfpfcnvrt@ll:
   818                           	callstack 0
   819                           
   820                           ; 8 bytes @ 0x54
   821  000055                     	ds	8
   822  00005D                     vfpfcnvrt@vp:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x5C
   826  00005D                     	ds	2
   827  00005F                     vfpfcnvrt@c:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x5E
   831  00005F                     	ds	1
   832  000060                     vfpfcnvrt@llu:
   833                           	callstack 0
   834                           
   835                           ; 8 bytes @ 0x5F
   836  000060                     	ds	8
   837  000068                     ?_vfprintf:
   838                           	callstack 0
   839  000068                     vfprintf@fp:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x67
   843  000068                     	ds	2
   844  00006A                     vfprintf@fmt:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x69
   848  00006A                     	ds	2
   849  00006C                     vfprintf@ap:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x6B
   853  00006C                     	ds	2
   854  00006E                     vfprintf@cfmt:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x6D
   858  00006E                     	ds	2
   859  000070                     ?_vsnprintf:
   860                           	callstack 0
   861  000070                     vsnprintf@s:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x6F
   865  000070                     	ds	2
   866  000072                     vsnprintf@n:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x71
   870  000072                     	ds	2
   871  000074                     vsnprintf@fmt:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x73
   875  000074                     	ds	2
   876  000076                     vsnprintf@ap:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x75
   880  000076                     	ds	2
   881  000078                     ??_vsnprintf:
   882                           
   883                           ; 1 bytes @ 0x77
   884  000078                     	ds	5
   885  00007D                     ??_main:
   886                           
   887                           ; 1 bytes @ 0x7C
   888  00007D                     	ds	2
   889                           
   890 ;;
   891 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   892 ;;
   893 ;; *************** function _main *****************
   894 ;; Defined at:
   895 ;;		line 109 in file "Test.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  _adc_str       20   22[BANK0 ] unsigned char [20]
   900 ;;  _adc_buf       20    0        unsigned char [20]
   901 ;;  humid_adc       2   44[BANK0 ] unsigned int 
   902 ;;  temp_adc        2   42[BANK0 ] unsigned int 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   912 ;;      Params:         0       0       0       0       0       0       0
   913 ;;      Locals:         0      24       0       0       0       0       0
   914 ;;      Temps:          2       0       0       0       0       0       0
   915 ;;      Totals:         2      24       0       0       0       0       0
   916 ;;Total ram usage:       26 bytes
   917 ;; Hardware stack levels required when called:    9
   918 ;; This function calls:
   919 ;;		_ADC_intialize
   920 ;;		_CLK_intialize
   921 ;;		_PORT_Initialize
   922 ;;		_Read_ADC
   923 ;;		_UART_Init
   924 ;;		_UART_send_string
   925 ;;		_snprintf
   926 ;; This function is called by:
   927 ;;		Startup code after reset
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text0
   932  002956                     __ptext0:
   933                           	callstack 0
   934  002956                     _main:
   935                           	callstack 22
   936  002956                     
   937                           ;Test.c: 112:     unsigned int humid_adc = 0;
   938  002956  0E00               	movlw	0
   939  002958  0100               	movlb	0	; () banked
   940  00295A  6FE5               	movwf	(main@humid_adc+1)& (0+255),b
   941  00295C  0E00               	movlw	0
   942  00295E  6FE4               	movwf	main@humid_adc& (0+255),b
   943  002960                     
   944                           ; BSR set to: 0
   945                           ;Test.c: 114:     char _adc_str[20];;Test.c: 115:     char _adc_buf[20];;Test.c: 117:   
      +                           CLK_intialize();
   946  002960  ECC3  F019         	call	_CLK_intialize	;wreg free
   947                           
   948                           ;Test.c: 118:    PORT_Initialize();
   949  002964  ECCD  F019         	call	_PORT_Initialize	;wreg free
   950  002968                     
   951                           ;Test.c: 119:    UART_Init(9600);
   952  002968  0E80               	movlw	128
   953  00296A  6E01               	movwf	UART_Init@baud_rate^0,c
   954  00296C  0E25               	movlw	37
   955  00296E  6E02               	movwf	(UART_Init@baud_rate+1)^0,c
   956  002970  0E00               	movlw	0
   957  002972  6E03               	movwf	(UART_Init@baud_rate+2)^0,c
   958  002974  ECB9  F019         	call	_UART_Init	;wreg free
   959  002978                     
   960                           ;Test.c: 120:    ADC_intialize();
   961  002978  EC9E  F019         	call	_ADC_intialize	;wreg free
   962  00297C                     l3251:
   963                           
   964                           ;Test.c: 124:     {;Test.c: 126:             UART_send_string("Dave is a legend!\n");
   965  00297C  0E01               	movlw	low STR_1
   966  00297E  6E02               	movwf	UART_send_string@st_pt^0,c
   967  002980  0E06               	movlw	high STR_1
   968  002982  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
   969  002984  EC08  F018         	call	_UART_send_string	;wreg free
   970  002988                     
   971                           ;Test.c: 128:             _delay((unsigned long)((500)*(8000000/4000.0)));
   972  002988  0E06               	movlw	6
   973  00298A  6E7E               	movwf	(??_main+1)^0,c
   974  00298C  0E13               	movlw	19
   975  00298E  6E7D               	movwf	??_main^0,c
   976  002990  0EAE               	movlw	174
   977  002992                     u3557:
   978  002992  2EE8               	decfsz	wreg,f,c
   979  002994  D7FE               	bra	u3557
   980  002996  2E7D               	decfsz	??_main^0,f,c
   981  002998  D7FC               	bra	u3557
   982  00299A  2E7E               	decfsz	(??_main+1)^0,f,c
   983  00299C  D7FA               	bra	u3557
   984  00299E                     
   985                           ;Test.c: 129:             TRISB1 = 0;
   986  00299E  9293               	bcf	3987,1,c	;volatile
   987  0029A0                     
   988                           ;Test.c: 130:            _delay((unsigned long)((500)*(8000000/4000.0)));
   989  0029A0  0E06               	movlw	6
   990  0029A2  6E7E               	movwf	(??_main+1)^0,c
   991  0029A4  0E13               	movlw	19
   992  0029A6  6E7D               	movwf	??_main^0,c
   993  0029A8  0EAE               	movlw	174
   994  0029AA                     u3567:
   995  0029AA  2EE8               	decfsz	wreg,f,c
   996  0029AC  D7FE               	bra	u3567
   997  0029AE  2E7D               	decfsz	??_main^0,f,c
   998  0029B0  D7FC               	bra	u3567
   999  0029B2  2E7E               	decfsz	(??_main+1)^0,f,c
  1000  0029B4  D7FA               	bra	u3567
  1001  0029B6                     
  1002                           ;Test.c: 131:             TRISB1 = 1;
  1003  0029B6  8293               	bsf	3987,1,c	;volatile
  1004  0029B8                     
  1005                           ;Test.c: 134:             temp_adc = Read_ADC (0);
  1006  0029B8  0E00               	movlw	0
  1007  0029BA  EC60  F018         	call	_Read_ADC
  1008  0029BE  C001  F0E2         	movff	?_Read_ADC,main@temp_adc
  1009  0029C2  C002  F0E3         	movff	?_Read_ADC+1,main@temp_adc+1
  1010  0029C6                     
  1011                           ;Test.c: 136:             snprintf(_adc_str, 20, "TEMP: %u\n", temp_adc);
  1012  0029C6  0ECE               	movlw	low main@_adc_str
  1013  0029C8  0100               	movlb	0	; () banked
  1014  0029CA  6FC2               	movwf	snprintf@s& (0+255),b
  1015  0029CC  0E00               	movlw	high main@_adc_str
  1016  0029CE  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1017  0029D0  0E00               	movlw	0
  1018  0029D2  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1019  0029D4  0E14               	movlw	20
  1020  0029D6  6FC4               	movwf	snprintf@n& (0+255),b
  1021  0029D8  0E1F               	movlw	low STR_2
  1022  0029DA  6FC6               	movwf	snprintf@fmt& (0+255),b
  1023  0029DC  0E06               	movlw	high STR_2
  1024  0029DE  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1025  0029E0  C0E2  F0C8         	movff	main@temp_adc,?_snprintf+6
  1026  0029E4  C0E3  F0C9         	movff	main@temp_adc+1,?_snprintf+7
  1027  0029E8  EC73  F019         	call	_snprintf	;wreg free
  1028  0029EC                     
  1029                           ;Test.c: 137:             UART_send_string(_adc_str);
  1030  0029EC  0ECE               	movlw	low main@_adc_str
  1031  0029EE  6E02               	movwf	UART_send_string@st_pt^0,c
  1032  0029F0  0E00               	movlw	high main@_adc_str
  1033  0029F2  6E03               	movwf	(UART_send_string@st_pt+1)^0,c
  1034  0029F4  EC08  F018         	call	_UART_send_string	;wreg free
  1035  0029F8                     
  1036                           ;Test.c: 139:             _delay((unsigned long)((500)*(8000000/4000.0)));
  1037  0029F8  0E06               	movlw	6
  1038  0029FA  6E7E               	movwf	(??_main+1)^0,c
  1039  0029FC  0E13               	movlw	19
  1040  0029FE  6E7D               	movwf	??_main^0,c
  1041  002A00  0EAE               	movlw	174
  1042  002A02                     u3577:
  1043  002A02  2EE8               	decfsz	wreg,f,c
  1044  002A04  D7FE               	bra	u3577
  1045  002A06  2E7D               	decfsz	??_main^0,f,c
  1046  002A08  D7FC               	bra	u3577
  1047  002A0A  2E7E               	decfsz	(??_main+1)^0,f,c
  1048  002A0C  D7FA               	bra	u3577
  1049  002A0E                     
  1050                           ;Test.c: 142:             humid_adc = Read_ADC (1);
  1051  002A0E  0E01               	movlw	1
  1052  002A10  EC60  F018         	call	_Read_ADC
  1053  002A14  C001  F0E4         	movff	?_Read_ADC,main@humid_adc
  1054  002A18  C002  F0E5         	movff	?_Read_ADC+1,main@humid_adc+1
  1055  002A1C                     
  1056                           ;Test.c: 143:             snprintf(_adc_str, 20, "HUMID: %u\n", humid_adc);
  1057  002A1C  0ECE               	movlw	low main@_adc_str
  1058  002A1E  0100               	movlb	0	; () banked
  1059  002A20  6FC2               	movwf	snprintf@s& (0+255),b
  1060  002A22  0E00               	movlw	high main@_adc_str
  1061  002A24  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1062  002A26  0E00               	movlw	0
  1063  002A28  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1064  002A2A  0E14               	movlw	20
  1065  002A2C  6FC4               	movwf	snprintf@n& (0+255),b
  1066  002A2E  0E14               	movlw	low STR_3
  1067  002A30  6FC6               	movwf	snprintf@fmt& (0+255),b
  1068  002A32  0E06               	movlw	high STR_3
  1069  002A34  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1070  002A36  C0E4  F0C8         	movff	main@humid_adc,?_snprintf+6
  1071  002A3A  C0E5  F0C9         	movff	main@humid_adc+1,?_snprintf+7
  1072  002A3E  EC73  F019         	call	_snprintf	;wreg free
  1073  002A42  EFBE  F014         	goto	l3251
  1074  002A46  EF00  F000         	goto	start
  1075  002A4A                     __end_of_main:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _snprintf *****************
  1079 ;; Defined at:
  1080 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\snprintf.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  s               2   10[BANK0 ] PTR unsigned char 
  1083 ;;		 -> main@_adc_str(20), 
  1084 ;;  n               2   12[BANK0 ] unsigned int 
  1085 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  1086 ;;		 -> STR_3(11), STR_2(10), 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  ap              2   20[BANK0 ] PTR void [1]
  1089 ;;		 -> ?_snprintf(2), 
  1090 ;;  ret             2    0        int 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  2   10[BANK0 ] int 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1100 ;;      Params:         0       8       0       0       0       0       0
  1101 ;;      Locals:         0       4       0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0
  1103 ;;      Totals:         0      12       0       0       0       0       0
  1104 ;;Total ram usage:       12 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    8
  1107 ;; This function calls:
  1108 ;;		_vsnprintf
  1109 ;; This function is called by:
  1110 ;;		_main
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text1
  1115  0032E6                     __ptext1:
  1116                           	callstack 0
  1117  0032E6                     _snprintf:
  1118                           	callstack 22
  1119  0032E6  0EC8               	movlw	low (?_snprintf+6)
  1120  0032E8  0100               	movlb	0	; () banked
  1121  0032EA  6FCC               	movwf	snprintf@ap& (0+255),b
  1122  0032EC  0E00               	movlw	high (?_snprintf+6)
  1123  0032EE  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  1124  0032F0                     
  1125                           ; BSR set to: 0
  1126  0032F0  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  1127  0032F4  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  1128  0032F8  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  1129  0032FC  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  1130  003300  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  1131  003304  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  1132  003308  0ECC               	movlw	low snprintf@ap
  1133  00330A  6E76               	movwf	vsnprintf@ap^0,c
  1134  00330C  0E00               	movlw	high snprintf@ap
  1135  00330E  6E77               	movwf	(vsnprintf@ap+1)^0,c
  1136  003310  EC1D  F014         	call	_vsnprintf	;wreg free
  1137  003314  0012               	return		;funcret
  1138  003316                     __end_of_snprintf:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _vsnprintf *****************
  1142 ;; Defined at:
  1143 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_vsnprintf.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  s               2  111[COMRAM] PTR unsigned char 
  1146 ;;		 -> main@_adc_str(20), 
  1147 ;;  n               2  113[COMRAM] unsigned int 
  1148 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1149 ;;		 -> STR_3(11), STR_2(10), 
  1150 ;;  ap              2  117[COMRAM] PTR PTR void 
  1151 ;;		 -> snprintf@ap(2), 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1154 ;;  cnt             2    2[BANK0 ] int 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  2  111[COMRAM] int 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1164 ;;      Params:         8       0       0       0       0       0       0
  1165 ;;      Locals:         0      10       0       0       0       0       0
  1166 ;;      Temps:          5       0       0       0       0       0       0
  1167 ;;      Totals:        13      10       0       0       0       0       0
  1168 ;;Total ram usage:       23 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    7
  1171 ;; This function calls:
  1172 ;;		_vfprintf
  1173 ;; This function is called by:
  1174 ;;		_snprintf
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text2
  1179  00283A                     __ptext2:
  1180                           	callstack 0
  1181  00283A                     _vsnprintf:
  1182                           	callstack 22
  1183  00283A  0E80               	movlw	128
  1184  00283C  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  1185  00283E  A0D8               	btfss	status,0,c
  1186  002840  EF24  F014         	goto	u3451
  1187  002844  EF26  F014         	goto	u3450
  1188  002848                     u3451:
  1189  002848  EF2F  F014         	goto	l3169
  1190  00284C                     u3450:
  1191  00284C  0E00               	movlw	0
  1192  00284E  0100               	movlb	0	; () banked
  1193  002850  6F95               	movwf	(_errno+1)& (0+255),b
  1194  002852  0E4B               	movlw	75
  1195  002854  6F94               	movwf	_errno& (0+255),b
  1196  002856                     
  1197                           ; BSR set to: 0
  1198  002856  6870               	setf	?_vsnprintf^0,c
  1199  002858  6871               	setf	(?_vsnprintf+1)^0,c
  1200  00285A  EFAA  F014         	goto	l805
  1201  00285E                     l3169:
  1202  00285E  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  1203  002862  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  1204  002866  5073               	movf	(vsnprintf@n+1)^0,w,c
  1205  002868  E109               	bnz	u3460
  1206  00286A  0E02               	movlw	2
  1207  00286C  5C72               	subwf	vsnprintf@n^0,w,c
  1208  00286E  A0D8               	btfss	status,0,c
  1209  002870  EF3C  F014         	goto	u3461
  1210  002874  EF3E  F014         	goto	u3460
  1211  002878                     u3461:
  1212  002878  EF4B  F014         	goto	l3175
  1213  00287C                     u3460:
  1214  00287C  0EFF               	movlw	255
  1215  00287E  2472               	addwf	vsnprintf@n^0,w,c
  1216  002880  0100               	movlb	0	; () banked
  1217  002882  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  1218  002884  0EFF               	movlw	255
  1219  002886  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  1220  002888  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  1221  00288A                     
  1222                           ; BSR set to: 0
  1223  00288A  0E00               	movlw	0
  1224  00288C  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  1225  00288E  0E00               	movlw	0
  1226  002890  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  1227  002892  EF54  F014         	goto	l3177
  1228  002896                     l3175:
  1229  002896  0E00               	movlw	0
  1230  002898  0100               	movlb	0	; () banked
  1231  00289A  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  1232  00289C  0E01               	movlw	1
  1233  00289E  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  1234  0028A0  0E00               	movlw	0
  1235  0028A2  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  1236  0028A4  0E01               	movlw	1
  1237  0028A6  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  1238  0028A8                     l3177:
  1239                           
  1240                           ; BSR set to: 0
  1241  0028A8  0EBC               	movlw	low vsnprintf@f
  1242  0028AA  6E68               	movwf	vfprintf@fp^0,c
  1243  0028AC  0E00               	movlw	high vsnprintf@f
  1244  0028AE  6E69               	movwf	(vfprintf@fp+1)^0,c
  1245  0028B0  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  1246  0028B4  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  1247  0028B8  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  1248  0028BC  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  1249  0028C0  ECA8  F017         	call	_vfprintf	;wreg free
  1250  0028C4  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  1251  0028C8  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  1252  0028CC  5072               	movf	vsnprintf@n^0,w,c
  1253  0028CE  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  1254  0028D0  B4D8               	btfsc	status,2,c
  1255  0028D2  EF6D  F014         	goto	u3471
  1256  0028D6  EF6F  F014         	goto	u3470
  1257  0028DA                     u3471:
  1258  0028DA  EFA6  F014         	goto	l3189
  1259  0028DE                     u3470:
  1260  0028DE  0100               	movlb	0	; () banked
  1261  0028E0  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  1262  0028E2  EF75  F014         	goto	u3481
  1263  0028E6  EF77  F014         	goto	u3480
  1264  0028EA                     u3481:
  1265  0028EA  EFA6  F014         	goto	l3189
  1266  0028EE                     u3480:
  1267  0028EE                     
  1268                           ; BSR set to: 0
  1269  0028EE  0EFF               	movlw	255
  1270  0028F0  6E78               	movwf	??_vsnprintf^0,c
  1271  0028F2  0EFF               	movlw	255
  1272  0028F4  6E79               	movwf	(??_vsnprintf+1)^0,c
  1273  0028F6  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  1274  0028FA  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  1275  0028FE  5078               	movf	??_vsnprintf^0,w,c
  1276  002900  267A               	addwf	(??_vsnprintf+2)^0,f,c
  1277  002902  5079               	movf	(??_vsnprintf+1)^0,w,c
  1278  002904  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  1279  002906  507A               	movf	(??_vsnprintf+2)^0,w,c
  1280  002908  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  1281  00290A  51BB               	movf	(vsnprintf@cnt+1)& (0+255),w,b
  1282  00290C  0A80               	xorlw	128
  1283  00290E  6E7C               	movwf	(??_vsnprintf+4)^0,c
  1284  002910  507B               	movf	(??_vsnprintf+3)^0,w,c
  1285  002912  0A80               	xorlw	128
  1286  002914  587C               	subwfb	(??_vsnprintf+4)^0,w,c
  1287  002916  A0D8               	btfss	status,0,c
  1288  002918  EF90  F014         	goto	u3491
  1289  00291C  EF92  F014         	goto	u3490
  1290  002920                     u3491:
  1291  002920  EF9A  F014         	goto	l810
  1292  002924                     u3490:
  1293  002924                     
  1294                           ; BSR set to: 0
  1295  002924  0EFF               	movlw	255
  1296  002926  2472               	addwf	vsnprintf@n^0,w,c
  1297  002928  6FB8               	movwf	_vsnprintf$1009& (0+255),b
  1298  00292A  0EFF               	movlw	255
  1299  00292C  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  1300  00292E  6FB9               	movwf	(_vsnprintf$1009+1)& (0+255),b
  1301  002930  EF9E  F014         	goto	l3187
  1302  002934                     l810:
  1303                           
  1304                           ; BSR set to: 0
  1305  002934  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1009
  1306  002938  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1009+1
  1307  00293C                     l3187:
  1308                           
  1309                           ; BSR set to: 0
  1310  00293C  51B8               	movf	_vsnprintf$1009& (0+255),w,b
  1311  00293E  2470               	addwf	vsnprintf@s^0,w,c
  1312  002940  6ED9               	movwf	fsr2l,c
  1313  002942  51B9               	movf	(_vsnprintf$1009+1)& (0+255),w,b
  1314  002944  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  1315  002946  6EDA               	movwf	fsr2h,c
  1316  002948  0E00               	movlw	0
  1317  00294A  6EDF               	movwf	indf2,c
  1318  00294C                     l3189:
  1319  00294C  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  1320  002950  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  1321  002954                     l805:
  1322  002954  0012               	return		;funcret
  1323  002956                     __end_of_vsnprintf:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function _vfprintf *****************
  1327 ;; Defined at:
  1328 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  1331 ;;		 -> vsnprintf@f(6), 
  1332 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  1333 ;;		 -> STR_3(11), STR_2(10), 
  1334 ;;  ap              2  107[COMRAM] PTR PTR void 
  1335 ;;		 -> snprintf@ap(2), 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  1338 ;;		 -> STR_3(11), STR_2(10), 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  2  103[COMRAM] int 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1348 ;;      Params:         6       0       0       0       0       0       0
  1349 ;;      Locals:         2       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0
  1351 ;;      Totals:         8       0       0       0       0       0       0
  1352 ;;Total ram usage:        8 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    6
  1355 ;; This function calls:
  1356 ;;		_vfpfcnvrt
  1357 ;; This function is called by:
  1358 ;;		_vsnprintf
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text3
  1363  002F50                     __ptext3:
  1364                           	callstack 0
  1365  002F50                     _vfprintf:
  1366                           	callstack 22
  1367  002F50                     
  1368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1369  002F50  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  1370  002F54  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1371  002F58                     
  1372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1373  002F58  0E00               	movlw	0
  1374  002F5A  0100               	movlb	0	; () banked
  1375  002F5C  6F8D               	movwf	(_nout+1)& (0+255),b
  1376  002F5E  0E00               	movlw	0
  1377  002F60  6F8C               	movwf	_nout& (0+255),b
  1378                           
  1379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1380  002F62  EFC6  F017         	goto	l3155
  1381  002F66                     l3153:
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1385  002F66  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1386  002F6A  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1387  002F6E  0E6E               	movlw	low vfprintf@cfmt
  1388  002F70  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1389  002F72  0E00               	movlw	high vfprintf@cfmt
  1390  002F74  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1391  002F76  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1392  002F7A  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1393  002F7E  EC2E  F003         	call	_vfpfcnvrt	;wreg free
  1394  002F82  5043               	movf	?_vfpfcnvrt^0,w,c
  1395  002F84  0100               	movlb	0	; () banked
  1396  002F86  278C               	addwf	_nout& (0+255),f,b
  1397  002F88  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1398  002F8A  238D               	addwfc	(_nout+1)& (0+255),f,b
  1399  002F8C                     l3155:
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1403  002F8C  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1404  002F90  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1405  002F94                     	if	0	;tblptru may be non-zero
  1406  002F94                     	endif
  1407  002F94                     	if	0	;tblptru may be non-zero
  1408  002F94                     	endif
  1409  002F94  0008               	tblrd		*
  1410  002F96  50F5               	movf	tablat,w,c
  1411  002F98  0900               	iorlw	0
  1412  002F9A  A4D8               	btfss	status,2,c
  1413  002F9C  EFD2  F017         	goto	u3431
  1414  002FA0  EFD4  F017         	goto	u3430
  1415  002FA4                     u3431:
  1416  002FA4  EFB3  F017         	goto	l3153
  1417  002FA8                     u3430:
  1418  002FA8                     
  1419                           ; BSR set to: 0
  1420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1421  002FA8  C08C  F068         	movff	_nout,?_vfprintf
  1422  002FAC  C08D  F069         	movff	_nout+1,?_vfprintf+1
  1423  002FB0                     
  1424                           ; BSR set to: 0
  1425  002FB0  0012               	return		;funcret
  1426  002FB2                     __end_of_vfprintf:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _vfpfcnvrt *****************
  1430 ;; Defined at:
  1431 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1434 ;;		 -> vsnprintf@f(6), 
  1435 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1436 ;;		 -> vfprintf@cfmt(2), 
  1437 ;;  ap              2   70[COMRAM] PTR PTR void 
  1438 ;;		 -> snprintf@ap(2), 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  llu             8   95[COMRAM] unsigned long long 
  1441 ;;  ll              8   84[COMRAM] long long 
  1442 ;;  f               4    0        long long 
  1443 ;;  ct              3    0        unsigned char [3]
  1444 ;;  vp              2   92[COMRAM] PTR void 
  1445 ;;		 -> ?_snprintf(2), 
  1446 ;;  done            2   78[COMRAM] int 
  1447 ;;  cp              2   76[COMRAM] PTR unsigned char 
  1448 ;;		 -> ?_snprintf(2), 
  1449 ;;  i               2    0        int 
  1450 ;;  c               1   94[COMRAM] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  2   66[COMRAM] int 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1460 ;;      Params:         6       0       0       0       0       0       0
  1461 ;;      Locals:        27       0       0       0       0       0       0
  1462 ;;      Temps:          4       0       0       0       0       0       0
  1463 ;;      Totals:        37       0       0       0       0       0       0
  1464 ;;Total ram usage:       37 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    5
  1467 ;; This function calls:
  1468 ;;		_atoi
  1469 ;;		_ctoa
  1470 ;;		_dtoa
  1471 ;;		_fputc
  1472 ;;		_isdigit
  1473 ;;		_otoa
  1474 ;;		_stoa
  1475 ;;		_strncmp
  1476 ;;		_utoa
  1477 ;;		_xtoa
  1478 ;; This function is called by:
  1479 ;;		_vfprintf
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text4
  1484  00065C                     __ptext4:
  1485                           	callstack 0
  1486  00065C                     _vfpfcnvrt:
  1487                           	callstack 22
  1488  00065C                     
  1489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1490  00065C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1491  000660  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1492  000664  CFDE FFF6          	movff	postinc2,tblptrl
  1493  000668  CFDD FFF7          	movff	postdec2,tblptrh
  1494  00066C                     	if	0	;tblptru may be non-zero
  1495  00066C                     	endif
  1496  00066C                     	if	0	;tblptru may be non-zero
  1497  00066C                     	endif
  1498  00066C  0008               	tblrd		*
  1499  00066E  50F5               	movf	tablat,w,c
  1500  000670  0A25               	xorlw	37
  1501  000672  A4D8               	btfss	status,2,c
  1502  000674  EF3E  F003         	goto	u2981
  1503  000678  EF40  F003         	goto	u2980
  1504  00067C                     u2981:
  1505  00067C  EF2B  F00C         	goto	l3135
  1506  000680                     u2980:
  1507  000680                     
  1508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1509  000680  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1510  000684  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1511  000688  2ADE               	incf	postinc2,f,c
  1512  00068A  0E00               	movlw	0
  1513  00068C  22DD               	addwfc	postdec2,f,c
  1514  00068E                     
  1515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1516  00068E  0E00               	movlw	0
  1517  000690  0100               	movlb	0	; () banked
  1518  000692  6F8F               	movwf	(_width+1)& (0+255),b
  1519  000694  0E00               	movlw	0
  1520  000696  6F8E               	movwf	_width& (0+255),b
  1521  000698  C08E  F092         	movff	_width,_flags
  1522  00069C  C08F  F093         	movff	_width+1,_flags+1
  1523  0006A0                     
  1524                           ; BSR set to: 0
  1525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1526  0006A0  6990               	setf	_prec& (0+255),b
  1527  0006A2  6991               	setf	(_prec+1)& (0+255),b
  1528  0006A4                     
  1529                           ; BSR set to: 0
  1530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1531  0006A4  0E00               	movlw	0
  1532  0006A6  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1533  0006A8  0E00               	movlw	0
  1534  0006AA  6E4F               	movwf	vfpfcnvrt@done^0,c
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1537  0006AC  EFA3  F003         	goto	l2853
  1538  0006B0                     l2827:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1541  0006B0  0100               	movlb	0	; () banked
  1542  0006B2  8192               	bsf	_flags& (0+255),0,b
  1543  0006B4                     l2829:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1547  0006B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1548  0006B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1549  0006BC  2ADE               	incf	postinc2,f,c
  1550  0006BE  0E00               	movlw	0
  1551  0006C0  22DD               	addwfc	postdec2,f,c
  1552                           
  1553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1554  0006C2  EFA3  F003         	goto	l2853
  1555  0006C6                     l2831:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1558  0006C6  0100               	movlb	0	; () banked
  1559  0006C8  8392               	bsf	_flags& (0+255),1,b
  1560  0006CA  EF5A  F003         	goto	l2829
  1561  0006CE                     l2835:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1564  0006CE  0100               	movlb	0	; () banked
  1565  0006D0  8592               	bsf	_flags& (0+255),2,b
  1566  0006D2  EF5A  F003         	goto	l2829
  1567  0006D6                     l2839:
  1568                           
  1569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1570  0006D6  0100               	movlb	0	; () banked
  1571  0006D8  8792               	bsf	_flags& (0+255),3,b
  1572  0006DA  EF5A  F003         	goto	l2829
  1573  0006DE                     l2843:
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1576  0006DE  0100               	movlb	0	; () banked
  1577  0006E0  8992               	bsf	_flags& (0+255),4,b
  1578  0006E2  EF5A  F003         	goto	l2829
  1579  0006E6                     l2847:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1582  0006E6  0E00               	movlw	0
  1583  0006E8  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1584  0006EA  0E01               	movlw	1
  1585  0006EC  6E4F               	movwf	vfpfcnvrt@done^0,c
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1588  0006EE  EFA3  F003         	goto	l2853
  1589  0006F2                     l2851:
  1590  0006F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1591  0006F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1592  0006FA  CFDE FFF6          	movff	postinc2,tblptrl
  1593  0006FE  CFDD FFF7          	movff	postdec2,tblptrh
  1594  000702                     	if	0	;tblptru may be non-zero
  1595  000702                     	endif
  1596  000702                     	if	0	;tblptru may be non-zero
  1597  000702                     	endif
  1598  000702  0008               	tblrd		*
  1599  000704  50F5               	movf	tablat,w,c
  1600  000706  6E49               	movwf	??_vfpfcnvrt^0,c
  1601  000708  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1602                           
  1603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1604                           ; Switch size 1, requested type "simple"
  1605                           ; Number of cases is 1, Range of values is 0 to 0
  1606                           ; switch strategies available:
  1607                           ; Name         Instructions Cycles
  1608                           ; simple_byte            4     3 (average)
  1609                           ;	Chosen strategy is simple_byte
  1610  00070A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1611  00070C  0A00               	xorlw	0	; case 0
  1612  00070E  B4D8               	btfsc	status,2,c
  1613  000710  EF8C  F003         	goto	l3323
  1614  000714  EF73  F003         	goto	l2847
  1615  000718                     l3323:
  1616                           
  1617                           ; Switch size 1, requested type "simple"
  1618                           ; Number of cases is 5, Range of values is 32 to 48
  1619                           ; switch strategies available:
  1620                           ; Name         Instructions Cycles
  1621                           ; simple_byte           16     9 (average)
  1622                           ;	Chosen strategy is simple_byte
  1623  000718  5049               	movf	??_vfpfcnvrt^0,w,c
  1624  00071A  0A20               	xorlw	32	; case 32
  1625  00071C  B4D8               	btfsc	status,2,c
  1626  00071E  EF6B  F003         	goto	l2839
  1627  000722  0A03               	xorlw	3	; case 35
  1628  000724  B4D8               	btfsc	status,2,c
  1629  000726  EF6F  F003         	goto	l2843
  1630  00072A  0A08               	xorlw	8	; case 43
  1631  00072C  B4D8               	btfsc	status,2,c
  1632  00072E  EF67  F003         	goto	l2835
  1633  000732  0A06               	xorlw	6	; case 45
  1634  000734  B4D8               	btfsc	status,2,c
  1635  000736  EF58  F003         	goto	l2827
  1636  00073A  0A1D               	xorlw	29	; case 48
  1637  00073C  B4D8               	btfsc	status,2,c
  1638  00073E  EF63  F003         	goto	l2831
  1639  000742  EF73  F003         	goto	l2847
  1640  000746                     l2853:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1643  000746  504F               	movf	vfpfcnvrt@done^0,w,c
  1644  000748  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1645  00074A  B4D8               	btfsc	status,2,c
  1646  00074C  EFAA  F003         	goto	u2991
  1647  000750  EFAC  F003         	goto	u2990
  1648  000754                     u2991:
  1649  000754  EF79  F003         	goto	l2851
  1650  000758                     u2990:
  1651  000758                     
  1652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1653  000758  0100               	movlb	0	; () banked
  1654  00075A  A192               	btfss	_flags& (0+255),0,b
  1655  00075C  EFB2  F003         	goto	u3001
  1656  000760  EFB4  F003         	goto	u3000
  1657  000764                     u3001:
  1658  000764  EFB5  F003         	goto	l2857
  1659  000768                     u3000:
  1660  000768                     
  1661                           ; BSR set to: 0
  1662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1663  000768  9392               	bcf	_flags& (0+255),1,b
  1664  00076A                     l2857:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1668  00076A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1669  00076E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1670  000772  CFDE FFF6          	movff	postinc2,tblptrl
  1671  000776  CFDD FFF7          	movff	postdec2,tblptrh
  1672  00077A                     	if	0	;tblptru may be non-zero
  1673  00077A                     	endif
  1674  00077A                     	if	0	;tblptru may be non-zero
  1675  00077A                     	endif
  1676  00077A  0008               	tblrd		*
  1677  00077C  50F5               	movf	tablat,w,c
  1678  00077E  0A2A               	xorlw	42
  1679  000780  A4D8               	btfss	status,2,c
  1680  000782  EFC5  F003         	goto	u3011
  1681  000786  EFC7  F003         	goto	u3010
  1682  00078A                     u3011:
  1683  00078A  EFF0  F003         	goto	l2865
  1684  00078E                     u3010:
  1685  00078E                     
  1686                           ; BSR set to: 0
  1687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1688  00078E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1689  000792  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1690  000796  2ADE               	incf	postinc2,f,c
  1691  000798  0E00               	movlw	0
  1692  00079A  22DD               	addwfc	postdec2,f,c
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1695  00079C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1696  0007A0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1697  0007A4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1698  0007A8  0E02               	movlw	2
  1699  0007AA  26DE               	addwf	postinc2,f,c
  1700  0007AC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1701  0007B0  0E00               	movlw	0
  1702  0007B2  22DD               	addwfc	postdec2,f,c
  1703  0007B4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1704  0007B8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1705  0007BC  CFDE F08E          	movff	postinc2,_width
  1706  0007C0  CFDD F08F          	movff	postdec2,_width+1
  1707  0007C4                     
  1708                           ; BSR set to: 0
  1709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1710  0007C4  BF8F               	btfsc	(_width+1)& (0+255),7,b
  1711  0007C6  EFE9  F003         	goto	u3020
  1712  0007CA  EFE7  F003         	goto	u3021
  1713  0007CE                     u3021:
  1714  0007CE  EF33  F004         	goto	l2875
  1715  0007D2                     u3020:
  1716  0007D2                     
  1717                           ; BSR set to: 0
  1718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1719  0007D2  8192               	bsf	_flags& (0+255),0,b
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1722  0007D4  6D8E               	negf	_width& (0+255),b
  1723  0007D6  1F8F               	comf	(_width+1)& (0+255),f,b
  1724  0007D8  B0D8               	btfsc	status,0,c
  1725  0007DA  2B8F               	incf	(_width+1)& (0+255),f,b
  1726  0007DC  EF33  F004         	goto	l2875
  1727  0007E0                     l2865:
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1731  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1732  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1733  0007E8  CFDE F008          	movff	postinc2,atoi@s
  1734  0007EC  CFDD F009          	movff	postdec2,atoi@s+1
  1735  0007F0  EC1C  F011         	call	_atoi	;wreg free
  1736  0007F4  C008  F08E         	movff	?_atoi,_width
  1737  0007F8  C009  F08F         	movff	?_atoi+1,_width+1
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1740  0007FC  EF07  F004         	goto	l2869
  1741  000800                     l2867:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1744  000800  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1745  000804  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1746  000808  2ADE               	incf	postinc2,f,c
  1747  00080A  0E00               	movlw	0
  1748  00080C  22DD               	addwfc	postdec2,f,c
  1749  00080E                     l2869:
  1750  00080E  0ED0               	movlw	208
  1751  000810  6E49               	movwf	??_vfpfcnvrt^0,c
  1752  000812  0EFF               	movlw	255
  1753  000814  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1754  000816  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1755  00081A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1756  00081E  CFDE FFF6          	movff	postinc2,tblptrl
  1757  000822  CFDD FFF7          	movff	postdec2,tblptrh
  1758  000826                     	if	0	;tblptru may be non-zero
  1759  000826                     	endif
  1760  000826                     	if	0	;tblptru may be non-zero
  1761  000826                     	endif
  1762  000826  0008               	tblrd		*
  1763  000828  50F5               	movf	tablat,w,c
  1764  00082A  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1765  00082C  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1766  00082E  5049               	movf	??_vfpfcnvrt^0,w,c
  1767  000830  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1768  000832  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1769  000834  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1770  000836  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1771  000838  E10A               	bnz	u3030
  1772  00083A  0E0A               	movlw	10
  1773  00083C  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1774  00083E  A0D8               	btfss	status,0,c
  1775  000840  EF24  F004         	goto	u3031
  1776  000844  EF27  F004         	goto	u3030
  1777  000848                     u3031:
  1778  000848  0E01               	movlw	1
  1779  00084A  EF28  F004         	goto	u3040
  1780  00084E                     u3030:
  1781  00084E  0E00               	movlw	0
  1782  000850                     u3040:
  1783  000850  6E51               	movwf	_vfpfcnvrt$1146^0,c
  1784  000852  6A52               	clrf	(_vfpfcnvrt$1146+1)^0,c
  1785  000854  5051               	movf	_vfpfcnvrt$1146^0,w,c
  1786  000856  1052               	iorwf	(_vfpfcnvrt$1146+1)^0,w,c
  1787  000858  A4D8               	btfss	status,2,c
  1788  00085A  EF31  F004         	goto	u3051
  1789  00085E  EF33  F004         	goto	u3050
  1790  000862                     u3051:
  1791  000862  EF00  F004         	goto	l2867
  1792  000866                     u3050:
  1793  000866                     l2875:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1796  000866  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1797  00086A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1798  00086E  CFDE FFF6          	movff	postinc2,tblptrl
  1799  000872  CFDD FFF7          	movff	postdec2,tblptrh
  1800  000876                     	if	0	;tblptru may be non-zero
  1801  000876                     	endif
  1802  000876                     	if	0	;tblptru may be non-zero
  1803  000876                     	endif
  1804  000876  0008               	tblrd		*
  1805  000878  50F5               	movf	tablat,w,c
  1806  00087A  0A2E               	xorlw	46
  1807  00087C  A4D8               	btfss	status,2,c
  1808  00087E  EF43  F004         	goto	u3061
  1809  000882  EF45  F004         	goto	u3060
  1810  000886                     u3061:
  1811  000886  EFC3  F004         	goto	l2895
  1812  00088A                     u3060:
  1813  00088A                     
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1815  00088A  0E00               	movlw	0
  1816  00088C  0100               	movlb	0	; () banked
  1817  00088E  6F91               	movwf	(_prec+1)& (0+255),b
  1818  000890  0E00               	movlw	0
  1819  000892  6F90               	movwf	_prec& (0+255),b
  1820  000894                     
  1821                           ; BSR set to: 0
  1822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1823  000894  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824  000898  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825  00089C  2ADE               	incf	postinc2,f,c
  1826  00089E  0E00               	movlw	0
  1827  0008A0  22DD               	addwfc	postdec2,f,c
  1828  0008A2                     
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1831  0008A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1832  0008A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1833  0008AA  CFDE FFF6          	movff	postinc2,tblptrl
  1834  0008AE  CFDD FFF7          	movff	postdec2,tblptrh
  1835  0008B2                     	if	0	;tblptru may be non-zero
  1836  0008B2                     	endif
  1837  0008B2                     	if	0	;tblptru may be non-zero
  1838  0008B2                     	endif
  1839  0008B2  0008               	tblrd		*
  1840  0008B4  50F5               	movf	tablat,w,c
  1841  0008B6  0A2A               	xorlw	42
  1842  0008B8  A4D8               	btfss	status,2,c
  1843  0008BA  EF61  F004         	goto	u3071
  1844  0008BE  EF63  F004         	goto	u3070
  1845  0008C2                     u3071:
  1846  0008C2  EF80  F004         	goto	l2885
  1847  0008C6                     u3070:
  1848  0008C6                     
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1851  0008C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1852  0008CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1853  0008CE  2ADE               	incf	postinc2,f,c
  1854  0008D0  0E00               	movlw	0
  1855  0008D2  22DD               	addwfc	postdec2,f,c
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1858  0008D4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1859  0008D8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1860  0008DC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1861  0008E0  0E02               	movlw	2
  1862  0008E2  26DE               	addwf	postinc2,f,c
  1863  0008E4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1864  0008E8  0E00               	movlw	0
  1865  0008EA  22DD               	addwfc	postdec2,f,c
  1866  0008EC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1867  0008F0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1868  0008F4  CFDE F090          	movff	postinc2,_prec
  1869  0008F8  CFDD F091          	movff	postdec2,_prec+1
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1872  0008FC  EFC3  F004         	goto	l2895
  1873  000900                     l2885:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1877  000900  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1878  000904  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1879  000908  CFDE F008          	movff	postinc2,atoi@s
  1880  00090C  CFDD F009          	movff	postdec2,atoi@s+1
  1881  000910  EC1C  F011         	call	_atoi	;wreg free
  1882  000914  C008  F090         	movff	?_atoi,_prec
  1883  000918  C009  F091         	movff	?_atoi+1,_prec+1
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1886  00091C  EF97  F004         	goto	l2889
  1887  000920                     l2887:
  1888                           
  1889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1890  000920  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1891  000924  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1892  000928  2ADE               	incf	postinc2,f,c
  1893  00092A  0E00               	movlw	0
  1894  00092C  22DD               	addwfc	postdec2,f,c
  1895  00092E                     l2889:
  1896  00092E  0ED0               	movlw	208
  1897  000930  6E49               	movwf	??_vfpfcnvrt^0,c
  1898  000932  0EFF               	movlw	255
  1899  000934  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1900  000936  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1901  00093A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1902  00093E  CFDE FFF6          	movff	postinc2,tblptrl
  1903  000942  CFDD FFF7          	movff	postdec2,tblptrh
  1904  000946                     	if	0	;tblptru may be non-zero
  1905  000946                     	endif
  1906  000946                     	if	0	;tblptru may be non-zero
  1907  000946                     	endif
  1908  000946  0008               	tblrd		*
  1909  000948  50F5               	movf	tablat,w,c
  1910  00094A  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1911  00094C  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1912  00094E  5049               	movf	??_vfpfcnvrt^0,w,c
  1913  000950  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1914  000952  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1915  000954  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1916  000956  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1917  000958  E10A               	bnz	u3080
  1918  00095A  0E0A               	movlw	10
  1919  00095C  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1920  00095E  A0D8               	btfss	status,0,c
  1921  000960  EFB4  F004         	goto	u3081
  1922  000964  EFB7  F004         	goto	u3080
  1923  000968                     u3081:
  1924  000968  0E01               	movlw	1
  1925  00096A  EFB8  F004         	goto	u3090
  1926  00096E                     u3080:
  1927  00096E  0E00               	movlw	0
  1928  000970                     u3090:
  1929  000970  6E53               	movwf	_vfpfcnvrt$1147^0,c
  1930  000972  6A54               	clrf	(_vfpfcnvrt$1147+1)^0,c
  1931  000974  5053               	movf	_vfpfcnvrt$1147^0,w,c
  1932  000976  1054               	iorwf	(_vfpfcnvrt$1147+1)^0,w,c
  1933  000978  A4D8               	btfss	status,2,c
  1934  00097A  EFC1  F004         	goto	u3101
  1935  00097E  EFC3  F004         	goto	u3100
  1936  000982                     u3101:
  1937  000982  EF90  F004         	goto	l2887
  1938  000986                     u3100:
  1939  000986                     l2895:
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  1942  000986  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1943  00098A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1944  00098E  CFDE FFF6          	movff	postinc2,tblptrl
  1945  000992  CFDD FFF7          	movff	postdec2,tblptrh
  1946  000996                     	if	0	;tblptru may be non-zero
  1947  000996                     	endif
  1948  000996                     	if	0	;tblptru may be non-zero
  1949  000996                     	endif
  1950  000996  0008               	tblrd		*
  1951  000998  50F5               	movf	tablat,w,c
  1952  00099A  0A63               	xorlw	99
  1953  00099C  A4D8               	btfss	status,2,c
  1954  00099E  EFD3  F004         	goto	u3111
  1955  0009A2  EFD5  F004         	goto	u3110
  1956  0009A6                     u3111:
  1957  0009A6  EFFC  F004         	goto	l2903
  1958  0009AA                     u3110:
  1959  0009AA                     
  1960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  1961  0009AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1962  0009AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1963  0009B2  2ADE               	incf	postinc2,f,c
  1964  0009B4  0E00               	movlw	0
  1965  0009B6  22DD               	addwfc	postdec2,f,c
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1968  0009B8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1969  0009BC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1970  0009C0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1971  0009C4  0E02               	movlw	2
  1972  0009C6  26DE               	addwf	postinc2,f,c
  1973  0009C8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1974  0009CC  0E00               	movlw	0
  1975  0009CE  22DD               	addwfc	postdec2,f,c
  1976  0009D0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1977  0009D4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1978  0009D8  50DF               	movf	indf2,w,c
  1979  0009DA  6E5F               	movwf	vfpfcnvrt@c^0,c
  1980  0009DC                     
  1981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  1982  0009DC  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  1983  0009E0  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1984  0009E4  C05F  F00C         	movff	vfpfcnvrt@c,ctoa@c
  1985  0009E8  EC0C  F016         	call	_ctoa	;wreg free
  1986  0009EC  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  1987  0009F0  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1988  0009F4  EF46  F00C         	goto	l1019
  1989  0009F8                     l2903:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 824:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  1992  0009F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1993  0009FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1994  000A00  CFDE F001          	movff	postinc2,strncmp@_l
  1995  000A04  CFDD F002          	movff	postdec2,strncmp@_l+1
  1996  000A08  0E2D               	movlw	low STR_4
  1997  000A0A  6E03               	movwf	strncmp@_r^0,c
  1998  000A0C  0E06               	movlw	high STR_4
  1999  000A0E  6E04               	movwf	(strncmp@_r+1)^0,c
  2000  000A10  0E00               	movlw	0
  2001  000A12  6E06               	movwf	(strncmp@n+1)^0,c
  2002  000A14  0E03               	movlw	3
  2003  000A16  6E05               	movwf	strncmp@n^0,c
  2004  000A18  EC9D  F015         	call	_strncmp	;wreg free
  2005  000A1C  5001               	movf	?_strncmp^0,w,c
  2006  000A1E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2007  000A20  B4D8               	btfsc	status,2,c
  2008  000A22  EF15  F005         	goto	u3121
  2009  000A26  EF17  F005         	goto	u3120
  2010  000A2A                     u3121:
  2011  000A2A  EF32  F005         	goto	l2907
  2012  000A2E                     u3120:
  2013  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2014  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2015  000A36  CFDE F001          	movff	postinc2,strncmp@_l
  2016  000A3A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2017  000A3E  0E31               	movlw	low STR_8
  2018  000A40  6E03               	movwf	strncmp@_r^0,c
  2019  000A42  0E06               	movlw	high STR_8
  2020  000A44  6E04               	movwf	(strncmp@_r+1)^0,c
  2021  000A46  0E00               	movlw	0
  2022  000A48  6E06               	movwf	(strncmp@n+1)^0,c
  2023  000A4A  0E03               	movlw	3
  2024  000A4C  6E05               	movwf	strncmp@n^0,c
  2025  000A4E  EC9D  F015         	call	_strncmp	;wreg free
  2026  000A52  5001               	movf	?_strncmp^0,w,c
  2027  000A54  1002               	iorwf	(?_strncmp+1)^0,w,c
  2028  000A56  A4D8               	btfss	status,2,c
  2029  000A58  EF30  F005         	goto	u3131
  2030  000A5C  EF32  F005         	goto	u3130
  2031  000A60                     u3131:
  2032  000A60  EF72  F005         	goto	l2913
  2033  000A64                     u3130:
  2034  000A64                     l2907:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 825: ;C:\Program 
      +                          Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 827:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  2037  000A64  0E03               	movlw	3
  2038  000A66  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2039  000A6A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2040  000A6E  26DE               	addwf	postinc2,f,c
  2041  000A70  0E00               	movlw	0
  2042  000A72  22DD               	addwfc	postdec2,f,c
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2045  000A74  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2046  000A78  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2047  000A7C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2048  000A80  0E02               	movlw	2
  2049  000A82  26DE               	addwf	postinc2,f,c
  2050  000A84  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2051  000A88  0E00               	movlw	0
  2052  000A8A  22DD               	addwfc	postdec2,f,c
  2053  000A8C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2054  000A90  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2055  000A94  50DF               	movf	indf2,w,c
  2056  000A96  6E55               	movwf	vfpfcnvrt@ll^0,c
  2057  000A98  0E00               	movlw	0
  2058  000A9A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  2059  000A9C  0EFF               	movlw	-1
  2060  000A9E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  2061  000AA0  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2062  000AA2  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2063  000AA4  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2064  000AA6  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2065  000AA8  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2066  000AAA  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2067  000AAC                     l2909:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2070  000AAC  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2071  000AB0  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2072  000AB4  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2073  000AB8  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2074  000ABC  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2075  000AC0  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2076  000AC4  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2077  000AC8  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2078  000ACC  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2079  000AD0  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2080  000AD4  EC47  F00C         	call	_dtoa	;wreg free
  2081  000AD8  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2082  000ADC  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2083  000AE0  EF46  F00C         	goto	l1019
  2084  000AE4                     l2913:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 836:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  2087  000AE4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2088  000AE8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2089  000AEC  CFDE F001          	movff	postinc2,strncmp@_l
  2090  000AF0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2091  000AF4  0E2E               	movlw	low (STR_4+1)
  2092  000AF6  6E03               	movwf	strncmp@_r^0,c
  2093  000AF8  0E06               	movlw	high (STR_4+1)
  2094  000AFA  6E04               	movwf	(strncmp@_r+1)^0,c
  2095  000AFC  0E00               	movlw	0
  2096  000AFE  6E06               	movwf	(strncmp@n+1)^0,c
  2097  000B00  0E02               	movlw	2
  2098  000B02  6E05               	movwf	strncmp@n^0,c
  2099  000B04  EC9D  F015         	call	_strncmp	;wreg free
  2100  000B08  5001               	movf	?_strncmp^0,w,c
  2101  000B0A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2102  000B0C  B4D8               	btfsc	status,2,c
  2103  000B0E  EF8B  F005         	goto	u3141
  2104  000B12  EF8D  F005         	goto	u3140
  2105  000B16                     u3141:
  2106  000B16  EFA8  F005         	goto	l2917
  2107  000B1A                     u3140:
  2108  000B1A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  000B1E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  000B22  CFDE F001          	movff	postinc2,strncmp@_l
  2111  000B26  CFDD F002          	movff	postdec2,strncmp@_l+1
  2112  000B2A  0E32               	movlw	low (STR_8+1)
  2113  000B2C  6E03               	movwf	strncmp@_r^0,c
  2114  000B2E  0E06               	movlw	high (STR_8+1)
  2115  000B30  6E04               	movwf	(strncmp@_r+1)^0,c
  2116  000B32  0E00               	movlw	0
  2117  000B34  6E06               	movwf	(strncmp@n+1)^0,c
  2118  000B36  0E02               	movlw	2
  2119  000B38  6E05               	movwf	strncmp@n^0,c
  2120  000B3A  EC9D  F015         	call	_strncmp	;wreg free
  2121  000B3E  5001               	movf	?_strncmp^0,w,c
  2122  000B40  1002               	iorwf	(?_strncmp+1)^0,w,c
  2123  000B42  A4D8               	btfss	status,2,c
  2124  000B44  EFA6  F005         	goto	u3151
  2125  000B48  EFA8  F005         	goto	u3150
  2126  000B4C                     u3151:
  2127  000B4C  EFCF  F005         	goto	l2923
  2128  000B50                     u3150:
  2129  000B50                     l2917:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 837: ;C:\Program 
      +                          Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 839:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  2132  000B50  0E02               	movlw	2
  2133  000B52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2134  000B56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2135  000B5A  26DE               	addwf	postinc2,f,c
  2136  000B5C  0E00               	movlw	0
  2137  000B5E  22DD               	addwfc	postdec2,f,c
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 840:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2140  000B60  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2141  000B64  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2142  000B68  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2143  000B6C  0E02               	movlw	2
  2144  000B6E  26DE               	addwf	postinc2,f,c
  2145  000B70  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2146  000B74  0E00               	movlw	0
  2147  000B76  22DD               	addwfc	postdec2,f,c
  2148  000B78  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2149  000B7C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2150  000B80  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  2151  000B84  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  2152  000B88  0E00               	movlw	0
  2153  000B8A  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2154  000B8C  0EFF               	movlw	-1
  2155  000B8E  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2156  000B90  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2157  000B92  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2158  000B94  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2159  000B96  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2160  000B98  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2161  000B9A  EF56  F005         	goto	l2909
  2162  000B9E                     l2923:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2165  000B9E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2166  000BA2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2167  000BA6  CFDE FFF6          	movff	postinc2,tblptrl
  2168  000BAA  CFDD FFF7          	movff	postdec2,tblptrh
  2169  000BAE                     	if	0	;tblptru may be non-zero
  2170  000BAE                     	endif
  2171  000BAE                     	if	0	;tblptru may be non-zero
  2172  000BAE                     	endif
  2173  000BAE  0008               	tblrd		*
  2174  000BB0  50F5               	movf	tablat,w,c
  2175  000BB2  0A64               	xorlw	100
  2176  000BB4  B4D8               	btfsc	status,2,c
  2177  000BB6  EFDF  F005         	goto	u3161
  2178  000BBA  EFE1  F005         	goto	u3160
  2179  000BBE                     u3161:
  2180  000BBE  EFF3  F005         	goto	l2927
  2181  000BC2                     u3160:
  2182  000BC2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2183  000BC6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2184  000BCA  CFDE FFF6          	movff	postinc2,tblptrl
  2185  000BCE  CFDD FFF7          	movff	postdec2,tblptrh
  2186  000BD2                     	if	0	;tblptru may be non-zero
  2187  000BD2                     	endif
  2188  000BD2                     	if	0	;tblptru may be non-zero
  2189  000BD2                     	endif
  2190  000BD2  0008               	tblrd		*
  2191  000BD4  50F5               	movf	tablat,w,c
  2192  000BD6  0A69               	xorlw	105
  2193  000BD8  A4D8               	btfss	status,2,c
  2194  000BDA  EFF1  F005         	goto	u3171
  2195  000BDE  EFF3  F005         	goto	u3170
  2196  000BE2                     u3171:
  2197  000BE2  EF19  F006         	goto	l2933
  2198  000BE6                     u3170:
  2199  000BE6                     l2927:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2202  000BE6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2203  000BEA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2204  000BEE  2ADE               	incf	postinc2,f,c
  2205  000BF0  0E00               	movlw	0
  2206  000BF2  22DD               	addwfc	postdec2,f,c
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2209  000BF4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2210  000BF8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2211  000BFC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2212  000C00  0E02               	movlw	2
  2213  000C02  26DE               	addwf	postinc2,f,c
  2214  000C04  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2215  000C08  0E00               	movlw	0
  2216  000C0A  22DD               	addwfc	postdec2,f,c
  2217  000C0C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2218  000C10  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2219  000C14  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  2220  000C18  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  2221  000C1C  0E00               	movlw	0
  2222  000C1E  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2223  000C20  0EFF               	movlw	-1
  2224  000C22  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2225  000C24  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2226  000C26  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2227  000C28  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2228  000C2A  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2229  000C2C  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2230  000C2E  EF56  F005         	goto	l2909
  2231  000C32                     l2933:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 905:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  2234  000C32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2235  000C36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2236  000C3A  CFDE F001          	movff	postinc2,strncmp@_l
  2237  000C3E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2238  000C42  0E48               	movlw	low STR_22
  2239  000C44  6E03               	movwf	strncmp@_r^0,c
  2240  000C46  0E06               	movlw	high STR_22
  2241  000C48  6E04               	movwf	(strncmp@_r+1)^0,c
  2242  000C4A  0E00               	movlw	0
  2243  000C4C  6E06               	movwf	(strncmp@n+1)^0,c
  2244  000C4E  0E02               	movlw	2
  2245  000C50  6E05               	movwf	strncmp@n^0,c
  2246  000C52  EC9D  F015         	call	_strncmp	;wreg free
  2247  000C56  5001               	movf	?_strncmp^0,w,c
  2248  000C58  1002               	iorwf	(?_strncmp+1)^0,w,c
  2249  000C5A  B4D8               	btfsc	status,2,c
  2250  000C5C  EF32  F006         	goto	u3181
  2251  000C60  EF34  F006         	goto	u3180
  2252  000C64                     u3181:
  2253  000C64  EF4F  F006         	goto	l2937
  2254  000C68                     u3180:
  2255  000C68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2256  000C6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2257  000C70  CFDE F001          	movff	postinc2,strncmp@_l
  2258  000C74  CFDD F002          	movff	postdec2,strncmp@_l+1
  2259  000C78  0E4B               	movlw	low STR_26
  2260  000C7A  6E03               	movwf	strncmp@_r^0,c
  2261  000C7C  0E06               	movlw	high STR_26
  2262  000C7E  6E04               	movwf	(strncmp@_r+1)^0,c
  2263  000C80  0E00               	movlw	0
  2264  000C82  6E06               	movwf	(strncmp@n+1)^0,c
  2265  000C84  0E02               	movlw	2
  2266  000C86  6E05               	movwf	strncmp@n^0,c
  2267  000C88  EC9D  F015         	call	_strncmp	;wreg free
  2268  000C8C  5001               	movf	?_strncmp^0,w,c
  2269  000C8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2270  000C90  A4D8               	btfss	status,2,c
  2271  000C92  EF4D  F006         	goto	u3191
  2272  000C96  EF4F  F006         	goto	u3190
  2273  000C9A                     u3191:
  2274  000C9A  EF77  F006         	goto	l2943
  2275  000C9E                     u3190:
  2276  000C9E                     l2937:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 906: ;C:\Program 
      +                          Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 908:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  2279  000C9E  0E02               	movlw	2
  2280  000CA0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  000CA4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  000CA8  26DE               	addwf	postinc2,f,c
  2283  000CAA  0E00               	movlw	0
  2284  000CAC  22DD               	addwfc	postdec2,f,c
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 909:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2287  000CAE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2288  000CB2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2289  000CB6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2290  000CBA  0E02               	movlw	2
  2291  000CBC  26DE               	addwf	postinc2,f,c
  2292  000CBE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2293  000CC2  0E00               	movlw	0
  2294  000CC4  22DD               	addwfc	postdec2,f,c
  2295  000CC6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2296  000CCA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2297  000CCE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2298  000CD2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2299  000CD6  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2300  000CDA  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2301  000CDE  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  2302  000CE0  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  2303  000CE2  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  2304  000CE4  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  2305  000CE6  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  2306  000CE8  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  2307  000CEA  EF56  F005         	goto	l2909
  2308  000CEE                     l2943:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 991:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2311  000CEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2312  000CF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2313  000CF6  CFDE F001          	movff	postinc2,strncmp@_l
  2314  000CFA  CFDD F002          	movff	postdec2,strncmp@_l+1
  2315  000CFE  0E39               	movlw	low STR_31
  2316  000D00  6E03               	movwf	strncmp@_r^0,c
  2317  000D02  0E06               	movlw	high STR_31
  2318  000D04  6E04               	movwf	(strncmp@_r+1)^0,c
  2319  000D06  0E00               	movlw	0
  2320  000D08  6E06               	movwf	(strncmp@n+1)^0,c
  2321  000D0A  0E03               	movlw	3
  2322  000D0C  6E05               	movwf	strncmp@n^0,c
  2323  000D0E  EC9D  F015         	call	_strncmp	;wreg free
  2324  000D12  5001               	movf	?_strncmp^0,w,c
  2325  000D14  1002               	iorwf	(?_strncmp+1)^0,w,c
  2326  000D16  A4D8               	btfss	status,2,c
  2327  000D18  EF90  F006         	goto	u3201
  2328  000D1C  EF92  F006         	goto	u3200
  2329  000D20                     u3201:
  2330  000D20  EFD1  F006         	goto	l2951
  2331  000D24                     u3200:
  2332  000D24                     
  2333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 993:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  2334  000D24  0E03               	movlw	3
  2335  000D26  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2336  000D2A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2337  000D2E  26DE               	addwf	postinc2,f,c
  2338  000D30  0E00               	movlw	0
  2339  000D32  22DD               	addwfc	postdec2,f,c
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 994:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2342  000D34  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2343  000D38  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2344  000D3C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2345  000D40  0E02               	movlw	2
  2346  000D42  26DE               	addwf	postinc2,f,c
  2347  000D44  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2348  000D48  0E00               	movlw	0
  2349  000D4A  22DD               	addwfc	postdec2,f,c
  2350  000D4C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2351  000D50  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2352  000D54  50DF               	movf	indf2,w,c
  2353  000D56  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2354  000D58  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  2355  000D5A  6E60               	movwf	vfpfcnvrt@llu^0,c
  2356  000D5C  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  2357  000D5E  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2358  000D60  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2359  000D62  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2360  000D64  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2361  000D66  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2362  000D68  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2363  000D6A                     l2947:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 996:             
      +                          return otoa(fp, llu);
  2366  000D6A  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2367  000D6E  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2368  000D72  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2369  000D76  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2370  000D7A  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2371  000D7E  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2372  000D82  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2373  000D86  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2374  000D8A  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2375  000D8E  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2376  000D92  EC25  F010         	call	_otoa	;wreg free
  2377  000D96  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2378  000D9A  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2379  000D9E  EF46  F00C         	goto	l1019
  2380  000DA2                     l2951:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1002:         if 
      +                          (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2383  000DA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2384  000DA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2385  000DAA  CFDE F001          	movff	postinc2,strncmp@_l
  2386  000DAE  CFDD F002          	movff	postdec2,strncmp@_l+1
  2387  000DB2  0E3A               	movlw	low (STR_31+1)
  2388  000DB4  6E03               	movwf	strncmp@_r^0,c
  2389  000DB6  0E06               	movlw	high (STR_31+1)
  2390  000DB8  6E04               	movwf	(strncmp@_r+1)^0,c
  2391  000DBA  0E00               	movlw	0
  2392  000DBC  6E06               	movwf	(strncmp@n+1)^0,c
  2393  000DBE  0E02               	movlw	2
  2394  000DC0  6E05               	movwf	strncmp@n^0,c
  2395  000DC2  EC9D  F015         	call	_strncmp	;wreg free
  2396  000DC6  5001               	movf	?_strncmp^0,w,c
  2397  000DC8  1002               	iorwf	(?_strncmp+1)^0,w,c
  2398  000DCA  A4D8               	btfss	status,2,c
  2399  000DCC  EFEA  F006         	goto	u3211
  2400  000DD0  EFEC  F006         	goto	u3210
  2401  000DD4                     u3211:
  2402  000DD4  EF14  F007         	goto	l2959
  2403  000DD8                     u3210:
  2404  000DD8                     
  2405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1004:            
      +                           *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  2406  000DD8  0E02               	movlw	2
  2407  000DDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2408  000DDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2409  000DE2  26DE               	addwf	postinc2,f,c
  2410  000DE4  0E00               	movlw	0
  2411  000DE6  22DD               	addwfc	postdec2,f,c
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1005:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2414  000DE8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2415  000DEC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2416  000DF0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2417  000DF4  0E02               	movlw	2
  2418  000DF6  26DE               	addwf	postinc2,f,c
  2419  000DF8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2420  000DFC  0E00               	movlw	0
  2421  000DFE  22DD               	addwfc	postdec2,f,c
  2422  000E00  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2423  000E04  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2424  000E08  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2425  000E0C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2426  000E10  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2427  000E14  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2428  000E18  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2429  000E1A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2430  000E1C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2431  000E1E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2432  000E20  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2433  000E22  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2434  000E24  EFB5  F006         	goto	l2947
  2435  000E28                     l2959:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1012:         if 
      +                          (*fmt[0] == 'o') {
  2438  000E28  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2439  000E2C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2440  000E30  CFDE FFF6          	movff	postinc2,tblptrl
  2441  000E34  CFDD FFF7          	movff	postdec2,tblptrh
  2442  000E38                     	if	0	;tblptru may be non-zero
  2443  000E38                     	endif
  2444  000E38                     	if	0	;tblptru may be non-zero
  2445  000E38                     	endif
  2446  000E38  0008               	tblrd		*
  2447  000E3A  50F5               	movf	tablat,w,c
  2448  000E3C  0A6F               	xorlw	111
  2449  000E3E  A4D8               	btfss	status,2,c
  2450  000E40  EF24  F007         	goto	u3221
  2451  000E44  EF26  F007         	goto	u3220
  2452  000E48                     u3221:
  2453  000E48  EF4D  F007         	goto	l2967
  2454  000E4C                     u3220:
  2455  000E4C                     
  2456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1014:            
      +                           ++*fmt;
  2457  000E4C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2458  000E50  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2459  000E54  2ADE               	incf	postinc2,f,c
  2460  000E56  0E00               	movlw	0
  2461  000E58  22DD               	addwfc	postdec2,f,c
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1015:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2464  000E5A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2465  000E5E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2466  000E62  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2467  000E66  0E02               	movlw	2
  2468  000E68  26DE               	addwf	postinc2,f,c
  2469  000E6A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2470  000E6E  0E00               	movlw	0
  2471  000E70  22DD               	addwfc	postdec2,f,c
  2472  000E72  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2473  000E76  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2474  000E7A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2475  000E7E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2476  000E82  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2477  000E86  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2478  000E8A  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2479  000E8C  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2480  000E8E  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2481  000E90  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2482  000E92  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2483  000E94  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2484  000E96  EFB5  F006         	goto	l2947
  2485  000E9A                     l2967:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1066:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2488  000E9A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2489  000E9E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2490  000EA2  CFDE F001          	movff	postinc2,strncmp@_l
  2491  000EA6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2492  000EAA  0E51               	movlw	low STR_41
  2493  000EAC  6E03               	movwf	strncmp@_r^0,c
  2494  000EAE  0E06               	movlw	high STR_41
  2495  000EB0  6E04               	movwf	(strncmp@_r+1)^0,c
  2496  000EB2  0E00               	movlw	0
  2497  000EB4  6E06               	movwf	(strncmp@n+1)^0,c
  2498  000EB6  0E02               	movlw	2
  2499  000EB8  6E05               	movwf	strncmp@n^0,c
  2500  000EBA  EC9D  F015         	call	_strncmp	;wreg free
  2501  000EBE  5001               	movf	?_strncmp^0,w,c
  2502  000EC0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2503  000EC2  A4D8               	btfss	status,2,c
  2504  000EC4  EF66  F007         	goto	u3231
  2505  000EC8  EF68  F007         	goto	u3230
  2506  000ECC                     u3231:
  2507  000ECC  EF90  F007         	goto	l2975
  2508  000ED0                     u3230:
  2509  000ED0                     
  2510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1068:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  2511  000ED0  0E02               	movlw	2
  2512  000ED2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2513  000ED6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2514  000EDA  26DE               	addwf	postinc2,f,c
  2515  000EDC  0E00               	movlw	0
  2516  000EDE  22DD               	addwfc	postdec2,f,c
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1069:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2519  000EE0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2520  000EE4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2521  000EE8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2522  000EEC  0E02               	movlw	2
  2523  000EEE  26DE               	addwf	postinc2,f,c
  2524  000EF0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2525  000EF4  0E00               	movlw	0
  2526  000EF6  22DD               	addwfc	postdec2,f,c
  2527  000EF8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2528  000EFC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2529  000F00  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2530  000F04  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2531  000F08  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2532  000F0C  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2533  000F10  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2534  000F12  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2535  000F14  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2536  000F16  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2537  000F18  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2538  000F1A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2539  000F1C  EFB5  F006         	goto	l2947
  2540  000F20                     l2975:
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1080:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2543  000F20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2544  000F24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2545  000F28  CFDE F001          	movff	postinc2,strncmp@_l
  2546  000F2C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2547  000F30  0E35               	movlw	low STR_46
  2548  000F32  6E03               	movwf	strncmp@_r^0,c
  2549  000F34  0E06               	movlw	high STR_46
  2550  000F36  6E04               	movwf	(strncmp@_r+1)^0,c
  2551  000F38  0E00               	movlw	0
  2552  000F3A  6E06               	movwf	(strncmp@n+1)^0,c
  2553  000F3C  0E03               	movlw	3
  2554  000F3E  6E05               	movwf	strncmp@n^0,c
  2555  000F40  EC9D  F015         	call	_strncmp	;wreg free
  2556  000F44  5001               	movf	?_strncmp^0,w,c
  2557  000F46  1002               	iorwf	(?_strncmp+1)^0,w,c
  2558  000F48  A4D8               	btfss	status,2,c
  2559  000F4A  EFA9  F007         	goto	u3241
  2560  000F4E  EFAB  F007         	goto	u3240
  2561  000F52                     u3241:
  2562  000F52  EFD3  F007         	goto	l2985
  2563  000F56                     u3240:
  2564  000F56                     
  2565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1082:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  2566  000F56  0E03               	movlw	3
  2567  000F58  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2568  000F5C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2569  000F60  26DE               	addwf	postinc2,f,c
  2570  000F62  0E00               	movlw	0
  2571  000F64  22DD               	addwfc	postdec2,f,c
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1083:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2574  000F66  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2575  000F6A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2576  000F6E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2577  000F72  0E02               	movlw	2
  2578  000F74  26DE               	addwf	postinc2,f,c
  2579  000F76  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2580  000F7A  0E00               	movlw	0
  2581  000F7C  22DD               	addwfc	postdec2,f,c
  2582  000F7E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2583  000F82  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2584  000F86  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2585  000F8A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2586  000F8E                     
  2587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1084:            
      +                           *(char *)vp = (char)nout;
  2588  000F8E  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2589  000F92  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2590  000F96  C08C  FFDF         	movff	_nout,indf2
  2591  000F9A                     l2981:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1085:            
      +                           return 0;
  2594  000F9A  0E00               	movlw	0
  2595  000F9C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2596  000F9E  0E00               	movlw	0
  2597  000FA0  6E43               	movwf	?_vfpfcnvrt^0,c
  2598  000FA2  EF46  F00C         	goto	l1019
  2599  000FA6                     l2985:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1090:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2602  000FA6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2603  000FAA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2604  000FAE  CFDE F001          	movff	postinc2,strncmp@_l
  2605  000FB2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2606  000FB6  0E36               	movlw	low (STR_46+1)
  2607  000FB8  6E03               	movwf	strncmp@_r^0,c
  2608  000FBA  0E06               	movlw	high (STR_46+1)
  2609  000FBC  6E04               	movwf	(strncmp@_r+1)^0,c
  2610  000FBE  0E00               	movlw	0
  2611  000FC0  6E06               	movwf	(strncmp@n+1)^0,c
  2612  000FC2  0E02               	movlw	2
  2613  000FC4  6E05               	movwf	strncmp@n^0,c
  2614  000FC6  EC9D  F015         	call	_strncmp	;wreg free
  2615  000FCA  5001               	movf	?_strncmp^0,w,c
  2616  000FCC  1002               	iorwf	(?_strncmp+1)^0,w,c
  2617  000FCE  A4D8               	btfss	status,2,c
  2618  000FD0  EFEC  F007         	goto	u3251
  2619  000FD4  EFEE  F007         	goto	u3250
  2620  000FD8                     u3251:
  2621  000FD8  EF14  F008         	goto	l2995
  2622  000FDC                     u3250:
  2623  000FDC                     
  2624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1092:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  2625  000FDC  0E02               	movlw	2
  2626  000FDE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2627  000FE2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2628  000FE6  26DE               	addwf	postinc2,f,c
  2629  000FE8  0E00               	movlw	0
  2630  000FEA  22DD               	addwfc	postdec2,f,c
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1093:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  2633  000FEC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2634  000FF0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2635  000FF4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2636  000FF8  0E02               	movlw	2
  2637  000FFA  26DE               	addwf	postinc2,f,c
  2638  000FFC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2639  001000  0E00               	movlw	0
  2640  001002  22DD               	addwfc	postdec2,f,c
  2641  001004  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2642  001008  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2643  00100C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2644  001010  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2645  001014                     
  2646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1094:            
      +                           *(short *)vp = (short)nout;
  2647  001014  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2648  001018  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2649  00101C  C08C  FFDE         	movff	_nout,postinc2
  2650  001020  C08D  FFDD         	movff	_nout+1,postdec2
  2651  001024  EFCD  F007         	goto	l2981
  2652  001028                     l2995:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1099:         if 
      +                          (*fmt[0] == 'n') {
  2655  001028  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2656  00102C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2657  001030  CFDE FFF6          	movff	postinc2,tblptrl
  2658  001034  CFDD FFF7          	movff	postdec2,tblptrh
  2659  001038                     	if	0	;tblptru may be non-zero
  2660  001038                     	endif
  2661  001038                     	if	0	;tblptru may be non-zero
  2662  001038                     	endif
  2663  001038  0008               	tblrd		*
  2664  00103A  50F5               	movf	tablat,w,c
  2665  00103C  0A6E               	xorlw	110
  2666  00103E  A4D8               	btfss	status,2,c
  2667  001040  EF24  F008         	goto	u3261
  2668  001044  EF26  F008         	goto	u3260
  2669  001048                     u3261:
  2670  001048  EF4B  F008         	goto	l3005
  2671  00104C                     u3260:
  2672  00104C                     
  2673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1100:            
      +                           ++*fmt;
  2674  00104C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2675  001050  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2676  001054  2ADE               	incf	postinc2,f,c
  2677  001056  0E00               	movlw	0
  2678  001058  22DD               	addwfc	postdec2,f,c
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1101:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  2681  00105A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2682  00105E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2683  001062  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2684  001066  0E02               	movlw	2
  2685  001068  26DE               	addwf	postinc2,f,c
  2686  00106A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2687  00106E  0E00               	movlw	0
  2688  001070  22DD               	addwfc	postdec2,f,c
  2689  001072  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2690  001076  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2691  00107A  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2692  00107E  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2693  001082                     
  2694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1102:            
      +                           *(int *)vp = nout;
  2695  001082  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2696  001086  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2697  00108A  C08C  FFDE         	movff	_nout,postinc2
  2698  00108E  C08D  FFDD         	movff	_nout+1,postdec2
  2699  001092  EFCD  F007         	goto	l2981
  2700  001096                     l3005:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1147:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2703  001096  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2704  00109A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2705  00109E  CFDE F001          	movff	postinc2,strncmp@_l
  2706  0010A2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2707  0010A6  0E4E               	movlw	low STR_56
  2708  0010A8  6E03               	movwf	strncmp@_r^0,c
  2709  0010AA  0E06               	movlw	high STR_56
  2710  0010AC  6E04               	movwf	(strncmp@_r+1)^0,c
  2711  0010AE  0E00               	movlw	0
  2712  0010B0  6E06               	movwf	(strncmp@n+1)^0,c
  2713  0010B2  0E02               	movlw	2
  2714  0010B4  6E05               	movwf	strncmp@n^0,c
  2715  0010B6  EC9D  F015         	call	_strncmp	;wreg free
  2716  0010BA  5001               	movf	?_strncmp^0,w,c
  2717  0010BC  1002               	iorwf	(?_strncmp+1)^0,w,c
  2718  0010BE  A4D8               	btfss	status,2,c
  2719  0010C0  EF64  F008         	goto	u3271
  2720  0010C4  EF66  F008         	goto	u3270
  2721  0010C8                     u3271:
  2722  0010C8  EF8C  F008         	goto	l3015
  2723  0010CC                     u3270:
  2724  0010CC                     
  2725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1149:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  2726  0010CC  0E02               	movlw	2
  2727  0010CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2728  0010D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2729  0010D6  26DE               	addwf	postinc2,f,c
  2730  0010D8  0E00               	movlw	0
  2731  0010DA  22DD               	addwfc	postdec2,f,c
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1150:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2734  0010DC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2735  0010E0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2736  0010E4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2737  0010E8  0E02               	movlw	2
  2738  0010EA  26DE               	addwf	postinc2,f,c
  2739  0010EC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2740  0010F0  0E00               	movlw	0
  2741  0010F2  22DD               	addwfc	postdec2,f,c
  2742  0010F4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2743  0010F8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2744  0010FC  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2745  001100  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2746  001104                     
  2747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1151:            
      +                           *(size_t *)vp = (size_t)nout;
  2748  001104  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2749  001108  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2750  00110C  C08C  FFDE         	movff	_nout,postinc2
  2751  001110  C08D  FFDD         	movff	_nout+1,postdec2
  2752  001114  EFCD  F007         	goto	l2981
  2753  001118                     l3015:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1160:         if 
      +                          (*fmt[0] == 'p') {
  2756  001118  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2757  00111C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2758  001120  CFDE FFF6          	movff	postinc2,tblptrl
  2759  001124  CFDD FFF7          	movff	postdec2,tblptrh
  2760  001128                     	if	0	;tblptru may be non-zero
  2761  001128                     	endif
  2762  001128                     	if	0	;tblptru may be non-zero
  2763  001128                     	endif
  2764  001128  0008               	tblrd		*
  2765  00112A  50F5               	movf	tablat,w,c
  2766  00112C  0A70               	xorlw	112
  2767  00112E  A4D8               	btfss	status,2,c
  2768  001130  EF9C  F008         	goto	u3281
  2769  001134  EF9E  F008         	goto	u3280
  2770  001138                     u3281:
  2771  001138  EFE1  F008         	goto	l3023
  2772  00113C                     u3280:
  2773  00113C                     
  2774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1162:            
      +                           ++*fmt;
  2775  00113C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2776  001140  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2777  001144  2ADE               	incf	postinc2,f,c
  2778  001146  0E00               	movlw	0
  2779  001148  22DD               	addwfc	postdec2,f,c
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1163:            
      +                           llu = (unsigned long long)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  2782  00114A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2783  00114E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2784  001152  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2785  001156  0E02               	movlw	2
  2786  001158  26DE               	addwf	postinc2,f,c
  2787  00115A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2788  00115E  0E00               	movlw	0
  2789  001160  22DD               	addwfc	postdec2,f,c
  2790  001162  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2791  001166  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2792  00116A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2793  00116E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2794  001172  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2795  001176  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2796  00117A  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2797  00117C  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2798  00117E  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2799  001180  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2800  001182  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2801  001184  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2802  001186                     
  2803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1165:            
      +                           return xtoa(fp, llu, 'x');
  2804  001186  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2805  00118A  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2806  00118E  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2807  001192  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2808  001196  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2809  00119A  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2810  00119E  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2811  0011A2  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2812  0011A6  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2813  0011AA  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2814  0011AE  0E78               	movlw	120
  2815  0011B0  6E26               	movwf	xtoa@x^0,c
  2816  0011B2  ECB8  F00D         	call	_xtoa	;wreg free
  2817  0011B6  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  2818  0011BA  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2819  0011BE  EF46  F00C         	goto	l1019
  2820  0011C2                     l3023:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  2823  0011C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  0011C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  0011CA  CFDE FFF6          	movff	postinc2,tblptrl
  2826  0011CE  CFDD FFF7          	movff	postdec2,tblptrh
  2827  0011D2                     	if	0	;tblptru may be non-zero
  2828  0011D2                     	endif
  2829  0011D2                     	if	0	;tblptru may be non-zero
  2830  0011D2                     	endif
  2831  0011D2  0008               	tblrd		*
  2832  0011D4  50F5               	movf	tablat,w,c
  2833  0011D6  0A73               	xorlw	115
  2834  0011D8  A4D8               	btfss	status,2,c
  2835  0011DA  EFF1  F008         	goto	u3291
  2836  0011DE  EFF3  F008         	goto	u3290
  2837  0011E2                     u3291:
  2838  0011E2  EF1E  F009         	goto	l3031
  2839  0011E6                     u3290:
  2840  0011E6                     
  2841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  2842  0011E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2843  0011EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2844  0011EE  2ADE               	incf	postinc2,f,c
  2845  0011F0  0E00               	movlw	0
  2846  0011F2  22DD               	addwfc	postdec2,f,c
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2849  0011F4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2850  0011F8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2851  0011FC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2852  001200  0E02               	movlw	2
  2853  001202  26DE               	addwf	postinc2,f,c
  2854  001204  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2855  001208  0E00               	movlw	0
  2856  00120A  22DD               	addwfc	postdec2,f,c
  2857  00120C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2858  001210  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2859  001214  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  2860  001218  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  2861  00121C                     
  2862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  2863  00121C  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  2864  001220  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2865  001224  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  2866  001228  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2867  00122C  ECA8  F012         	call	_stoa	;wreg free
  2868  001230  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  2869  001234  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  2870  001238  EF46  F00C         	goto	l1019
  2871  00123C                     l3031:
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1183:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  2874  00123C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2875  001240  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2876  001244  CFDE F001          	movff	postinc2,strncmp@_l
  2877  001248  CFDD F002          	movff	postdec2,strncmp@_l+1
  2878  00124C  0E3D               	movlw	low STR_61
  2879  00124E  6E03               	movwf	strncmp@_r^0,c
  2880  001250  0E06               	movlw	high STR_61
  2881  001252  6E04               	movwf	(strncmp@_r+1)^0,c
  2882  001254  0E00               	movlw	0
  2883  001256  6E06               	movwf	(strncmp@n+1)^0,c
  2884  001258  0E03               	movlw	3
  2885  00125A  6E05               	movwf	strncmp@n^0,c
  2886  00125C  EC9D  F015         	call	_strncmp	;wreg free
  2887  001260  5001               	movf	?_strncmp^0,w,c
  2888  001262  1002               	iorwf	(?_strncmp+1)^0,w,c
  2889  001264  A4D8               	btfss	status,2,c
  2890  001266  EF37  F009         	goto	u3301
  2891  00126A  EF39  F009         	goto	u3300
  2892  00126E                     u3301:
  2893  00126E  EF78  F009         	goto	l3039
  2894  001272                     u3300:
  2895  001272                     
  2896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1185:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  2897  001272  0E03               	movlw	3
  2898  001274  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2899  001278  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2900  00127C  26DE               	addwf	postinc2,f,c
  2901  00127E  0E00               	movlw	0
  2902  001280  22DD               	addwfc	postdec2,f,c
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1186:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2905  001282  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2906  001286  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2907  00128A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2908  00128E  0E02               	movlw	2
  2909  001290  26DE               	addwf	postinc2,f,c
  2910  001292  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2911  001296  0E00               	movlw	0
  2912  001298  22DD               	addwfc	postdec2,f,c
  2913  00129A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2914  00129E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2915  0012A2  50DF               	movf	indf2,w,c
  2916  0012A4  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2917  0012A6  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  2918  0012A8  6E60               	movwf	vfpfcnvrt@llu^0,c
  2919  0012AA  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  2920  0012AC  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2921  0012AE  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2922  0012B0  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2923  0012B2  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2924  0012B4  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2925  0012B6  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2926  0012B8                     l3035:
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1188:            
      +                           return utoa(fp, llu);
  2929  0012B8  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2930  0012BC  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2931  0012C0  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2932  0012C4  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2933  0012C8  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2934  0012CC  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2935  0012D0  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2936  0012D4  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2937  0012D8  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2938  0012DC  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2939  0012E0  EC24  F00F         	call	_utoa	;wreg free
  2940  0012E4  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  2941  0012E8  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  2942  0012EC  EF46  F00C         	goto	l1019
  2943  0012F0                     l3039:
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1194:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  2946  0012F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2947  0012F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2948  0012F8  CFDE F001          	movff	postinc2,strncmp@_l
  2949  0012FC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2950  001300  0E3E               	movlw	low (STR_61+1)
  2951  001302  6E03               	movwf	strncmp@_r^0,c
  2952  001304  0E06               	movlw	high (STR_61+1)
  2953  001306  6E04               	movwf	(strncmp@_r+1)^0,c
  2954  001308  0E00               	movlw	0
  2955  00130A  6E06               	movwf	(strncmp@n+1)^0,c
  2956  00130C  0E02               	movlw	2
  2957  00130E  6E05               	movwf	strncmp@n^0,c
  2958  001310  EC9D  F015         	call	_strncmp	;wreg free
  2959  001314  5001               	movf	?_strncmp^0,w,c
  2960  001316  1002               	iorwf	(?_strncmp+1)^0,w,c
  2961  001318  A4D8               	btfss	status,2,c
  2962  00131A  EF91  F009         	goto	u3311
  2963  00131E  EF93  F009         	goto	u3310
  2964  001322                     u3311:
  2965  001322  EFBB  F009         	goto	l3047
  2966  001326                     u3310:
  2967  001326                     
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1196:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  2969  001326  0E02               	movlw	2
  2970  001328  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2971  00132C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2972  001330  26DE               	addwf	postinc2,f,c
  2973  001332  0E00               	movlw	0
  2974  001334  22DD               	addwfc	postdec2,f,c
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1197:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2977  001336  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2978  00133A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2979  00133E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2980  001342  0E02               	movlw	2
  2981  001344  26DE               	addwf	postinc2,f,c
  2982  001346  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2983  00134A  0E00               	movlw	0
  2984  00134C  22DD               	addwfc	postdec2,f,c
  2985  00134E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2986  001352  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2987  001356  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2988  00135A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2989  00135E  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2990  001362  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2991  001366  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2992  001368  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2993  00136A  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2994  00136C  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2995  00136E  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2996  001370  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2997  001372  EF5C  F009         	goto	l3035
  2998  001376                     l3047:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  3001  001376  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3002  00137A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3003  00137E  CFDE FFF6          	movff	postinc2,tblptrl
  3004  001382  CFDD FFF7          	movff	postdec2,tblptrh
  3005  001386                     	if	0	;tblptru may be non-zero
  3006  001386                     	endif
  3007  001386                     	if	0	;tblptru may be non-zero
  3008  001386                     	endif
  3009  001386  0008               	tblrd		*
  3010  001388  50F5               	movf	tablat,w,c
  3011  00138A  0A75               	xorlw	117
  3012  00138C  A4D8               	btfss	status,2,c
  3013  00138E  EFCB  F009         	goto	u3321
  3014  001392  EFCD  F009         	goto	u3320
  3015  001396                     u3321:
  3016  001396  EFF4  F009         	goto	l3055
  3017  00139A                     u3320:
  3018  00139A                     
  3019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  3020  00139A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3021  00139E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3022  0013A2  2ADE               	incf	postinc2,f,c
  3023  0013A4  0E00               	movlw	0
  3024  0013A6  22DD               	addwfc	postdec2,f,c
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3027  0013A8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3028  0013AC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3029  0013B0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3030  0013B4  0E02               	movlw	2
  3031  0013B6  26DE               	addwf	postinc2,f,c
  3032  0013B8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3033  0013BC  0E00               	movlw	0
  3034  0013BE  22DD               	addwfc	postdec2,f,c
  3035  0013C0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3036  0013C4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3037  0013C8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3038  0013CC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3039  0013D0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3040  0013D4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3041  0013D8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3042  0013DA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3043  0013DC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3044  0013DE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3045  0013E0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3046  0013E2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3047  0013E4  EF5C  F009         	goto	l3035
  3048  0013E8                     l3055:
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1258:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3051  0013E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3052  0013EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3053  0013F0  CFDE F001          	movff	postinc2,strncmp@_l
  3054  0013F4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3055  0013F8  0E54               	movlw	low STR_71
  3056  0013FA  6E03               	movwf	strncmp@_r^0,c
  3057  0013FC  0E06               	movlw	high STR_71
  3058  0013FE  6E04               	movwf	(strncmp@_r+1)^0,c
  3059  001400  0E00               	movlw	0
  3060  001402  6E06               	movwf	(strncmp@n+1)^0,c
  3061  001404  0E02               	movlw	2
  3062  001406  6E05               	movwf	strncmp@n^0,c
  3063  001408  EC9D  F015         	call	_strncmp	;wreg free
  3064  00140C  5001               	movf	?_strncmp^0,w,c
  3065  00140E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3066  001410  A4D8               	btfss	status,2,c
  3067  001412  EF0D  F00A         	goto	u3331
  3068  001416  EF0F  F00A         	goto	u3330
  3069  00141A                     u3331:
  3070  00141A  EF37  F00A         	goto	l3063
  3071  00141E                     u3330:
  3072  00141E                     
  3073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1260:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  3074  00141E  0E02               	movlw	2
  3075  001420  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3076  001424  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3077  001428  26DE               	addwf	postinc2,f,c
  3078  00142A  0E00               	movlw	0
  3079  00142C  22DD               	addwfc	postdec2,f,c
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1261:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3082  00142E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3083  001432  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3084  001436  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3085  00143A  0E02               	movlw	2
  3086  00143C  26DE               	addwf	postinc2,f,c
  3087  00143E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3088  001442  0E00               	movlw	0
  3089  001444  22DD               	addwfc	postdec2,f,c
  3090  001446  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3091  00144A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3092  00144E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3093  001452  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3094  001456  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3095  00145A  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3096  00145E  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3097  001460  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3098  001462  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3099  001464  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3100  001466  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3101  001468  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3102  00146A  EF5C  F009         	goto	l3035
  3103  00146E                     l3063:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1271:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  3106  00146E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3107  001472  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3108  001476  CFDE F001          	movff	postinc2,strncmp@_l
  3109  00147A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3110  00147E  0E41               	movlw	low STR_76
  3111  001480  6E03               	movwf	strncmp@_r^0,c
  3112  001482  0E06               	movlw	high STR_76
  3113  001484  6E04               	movwf	(strncmp@_r+1)^0,c
  3114  001486  0E00               	movlw	0
  3115  001488  6E06               	movwf	(strncmp@n+1)^0,c
  3116  00148A  0E03               	movlw	3
  3117  00148C  6E05               	movwf	strncmp@n^0,c
  3118  00148E  EC9D  F015         	call	_strncmp	;wreg free
  3119  001492  5001               	movf	?_strncmp^0,w,c
  3120  001494  1002               	iorwf	(?_strncmp+1)^0,w,c
  3121  001496  B4D8               	btfsc	status,2,c
  3122  001498  EF50  F00A         	goto	u3341
  3123  00149C  EF52  F00A         	goto	u3340
  3124  0014A0                     u3341:
  3125  0014A0  EF6D  F00A         	goto	l3067
  3126  0014A4                     u3340:
  3127  0014A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3128  0014A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3129  0014AC  CFDE F001          	movff	postinc2,strncmp@_l
  3130  0014B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3131  0014B4  0E29               	movlw	low STR_80
  3132  0014B6  6E03               	movwf	strncmp@_r^0,c
  3133  0014B8  0E06               	movlw	high STR_80
  3134  0014BA  6E04               	movwf	(strncmp@_r+1)^0,c
  3135  0014BC  0E00               	movlw	0
  3136  0014BE  6E06               	movwf	(strncmp@n+1)^0,c
  3137  0014C0  0E03               	movlw	3
  3138  0014C2  6E05               	movwf	strncmp@n^0,c
  3139  0014C4  EC9D  F015         	call	_strncmp	;wreg free
  3140  0014C8  5001               	movf	?_strncmp^0,w,c
  3141  0014CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  3142  0014CC  A4D8               	btfss	status,2,c
  3143  0014CE  EF6B  F00A         	goto	u3351
  3144  0014D2  EF6D  F00A         	goto	u3350
  3145  0014D6                     u3351:
  3146  0014D6  EFC1  F00A         	goto	l3077
  3147  0014DA                     u3350:
  3148  0014DA                     l3067:
  3149                           
  3150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1272: ;C:\Program
      +                           Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1274:             c = (*fmt)
      +                          [2];
  3151  0014DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3152  0014DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3153  0014E2  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3154  0014E6  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3155  0014EA  0E02               	movlw	2
  3156  0014EC  2649               	addwf	??_vfpfcnvrt^0,f,c
  3157  0014EE  0E00               	movlw	0
  3158  0014F0  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3159  0014F2  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3160  0014F6  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3161  0014FA                     	if	0	;tblptru may be non-zero
  3162  0014FA                     	endif
  3163  0014FA                     	if	0	;tblptru may be non-zero
  3164  0014FA                     	endif
  3165  0014FA  0008               	tblrd		*
  3166  0014FC  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3167  001500                     
  3168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1275:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  3169  001500  0E03               	movlw	3
  3170  001502  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3171  001506  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3172  00150A  26DE               	addwf	postinc2,f,c
  3173  00150C  0E00               	movlw	0
  3174  00150E  22DD               	addwfc	postdec2,f,c
  3175  001510                     
  3176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1276:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3177  001510  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3178  001514  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3179  001518  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3180  00151C  0E02               	movlw	2
  3181  00151E  26DE               	addwf	postinc2,f,c
  3182  001520  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3183  001524  0E00               	movlw	0
  3184  001526  22DD               	addwfc	postdec2,f,c
  3185  001528  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3186  00152C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3187  001530  50DF               	movf	indf2,w,c
  3188  001532  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3189  001534  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3190  001536  6E60               	movwf	vfpfcnvrt@llu^0,c
  3191  001538  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3192  00153A  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3193  00153C  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3194  00153E  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3195  001540  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3196  001542  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3197  001544  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3198  001546                     l3073:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1278:            
      +                           return xtoa(fp, llu, c);
  3201  001546  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3202  00154A  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3203  00154E  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3204  001552  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3205  001556  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3206  00155A  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3207  00155E  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3208  001562  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3209  001566  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3210  00156A  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3211  00156E  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  3212  001572  ECB8  F00D         	call	_xtoa	;wreg free
  3213  001576  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3214  00157A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3215  00157E  EF46  F00C         	goto	l1019
  3216  001582                     l3077:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1284:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  3219  001582  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3220  001586  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3221  00158A  CFDE F001          	movff	postinc2,strncmp@_l
  3222  00158E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3223  001592  0E42               	movlw	low (STR_76+1)
  3224  001594  6E03               	movwf	strncmp@_r^0,c
  3225  001596  0E06               	movlw	high (STR_76+1)
  3226  001598  6E04               	movwf	(strncmp@_r+1)^0,c
  3227  00159A  0E00               	movlw	0
  3228  00159C  6E06               	movwf	(strncmp@n+1)^0,c
  3229  00159E  0E02               	movlw	2
  3230  0015A0  6E05               	movwf	strncmp@n^0,c
  3231  0015A2  EC9D  F015         	call	_strncmp	;wreg free
  3232  0015A6  5001               	movf	?_strncmp^0,w,c
  3233  0015A8  1002               	iorwf	(?_strncmp+1)^0,w,c
  3234  0015AA  B4D8               	btfsc	status,2,c
  3235  0015AC  EFDA  F00A         	goto	u3361
  3236  0015B0  EFDC  F00A         	goto	u3360
  3237  0015B4                     u3361:
  3238  0015B4  EFF7  F00A         	goto	l3081
  3239  0015B8                     u3360:
  3240  0015B8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3241  0015BC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3242  0015C0  CFDE F001          	movff	postinc2,strncmp@_l
  3243  0015C4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3244  0015C8  0E2A               	movlw	low (STR_80+1)
  3245  0015CA  6E03               	movwf	strncmp@_r^0,c
  3246  0015CC  0E06               	movlw	high (STR_80+1)
  3247  0015CE  6E04               	movwf	(strncmp@_r+1)^0,c
  3248  0015D0  0E00               	movlw	0
  3249  0015D2  6E06               	movwf	(strncmp@n+1)^0,c
  3250  0015D4  0E02               	movlw	2
  3251  0015D6  6E05               	movwf	strncmp@n^0,c
  3252  0015D8  EC9D  F015         	call	_strncmp	;wreg free
  3253  0015DC  5001               	movf	?_strncmp^0,w,c
  3254  0015DE  1002               	iorwf	(?_strncmp+1)^0,w,c
  3255  0015E0  A4D8               	btfss	status,2,c
  3256  0015E2  EFF5  F00A         	goto	u3371
  3257  0015E6  EFF7  F00A         	goto	u3370
  3258  0015EA                     u3371:
  3259  0015EA  EF32  F00B         	goto	l3091
  3260  0015EE                     u3370:
  3261  0015EE                     l3081:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1285: ;C:\Program
      +                           Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1287:             c = (*fmt)
      +                          [1];
  3264  0015EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3265  0015F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3266  0015F6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3267  0015FA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3268  0015FE  0E01               	movlw	1
  3269  001600  2649               	addwf	??_vfpfcnvrt^0,f,c
  3270  001602  0E00               	movlw	0
  3271  001604  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3272  001606  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3273  00160A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3274  00160E                     	if	0	;tblptru may be non-zero
  3275  00160E                     	endif
  3276  00160E                     	if	0	;tblptru may be non-zero
  3277  00160E                     	endif
  3278  00160E  0008               	tblrd		*
  3279  001610  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3280  001614                     
  3281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1288:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  3282  001614  0E02               	movlw	2
  3283  001616  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3284  00161A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3285  00161E  26DE               	addwf	postinc2,f,c
  3286  001620  0E00               	movlw	0
  3287  001622  22DD               	addwfc	postdec2,f,c
  3288  001624                     
  3289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1289:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3290  001624  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3291  001628  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3292  00162C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3293  001630  0E02               	movlw	2
  3294  001632  26DE               	addwf	postinc2,f,c
  3295  001634  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3296  001638  0E00               	movlw	0
  3297  00163A  22DD               	addwfc	postdec2,f,c
  3298  00163C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3299  001640  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3300  001644  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3301  001648  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3302  00164C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3303  001650  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3304  001654  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3305  001656  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3306  001658  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3307  00165A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3308  00165C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3309  00165E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3310  001660  EFA3  F00A         	goto	l3073
  3311  001664                     l3091:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3314  001664  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3315  001668  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3316  00166C  CFDE FFF6          	movff	postinc2,tblptrl
  3317  001670  CFDD FFF7          	movff	postdec2,tblptrh
  3318  001674                     	if	0	;tblptru may be non-zero
  3319  001674                     	endif
  3320  001674                     	if	0	;tblptru may be non-zero
  3321  001674                     	endif
  3322  001674  0008               	tblrd		*
  3323  001676  50F5               	movf	tablat,w,c
  3324  001678  0A78               	xorlw	120
  3325  00167A  B4D8               	btfsc	status,2,c
  3326  00167C  EF42  F00B         	goto	u3381
  3327  001680  EF44  F00B         	goto	u3380
  3328  001684                     u3381:
  3329  001684  EF56  F00B         	goto	l3095
  3330  001688                     u3380:
  3331  001688  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3332  00168C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3333  001690  CFDE FFF6          	movff	postinc2,tblptrl
  3334  001694  CFDD FFF7          	movff	postdec2,tblptrh
  3335  001698                     	if	0	;tblptru may be non-zero
  3336  001698                     	endif
  3337  001698                     	if	0	;tblptru may be non-zero
  3338  001698                     	endif
  3339  001698  0008               	tblrd		*
  3340  00169A  50F5               	movf	tablat,w,c
  3341  00169C  0A58               	xorlw	88
  3342  00169E  A4D8               	btfss	status,2,c
  3343  0016A0  EF54  F00B         	goto	u3391
  3344  0016A4  EF56  F00B         	goto	u3390
  3345  0016A8                     u3391:
  3346  0016A8  EF88  F00B         	goto	l3105
  3347  0016AC                     u3390:
  3348  0016AC                     l3095:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3351  0016AC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3352  0016B0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3353  0016B4  CFDE FFF6          	movff	postinc2,tblptrl
  3354  0016B8  CFDD FFF7          	movff	postdec2,tblptrh
  3355  0016BC                     	if	0	;tblptru may be non-zero
  3356  0016BC                     	endif
  3357  0016BC                     	if	0	;tblptru may be non-zero
  3358  0016BC                     	endif
  3359  0016BC  0008               	tblrd		*
  3360  0016BE  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3361  0016C2                     
  3362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3363  0016C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3364  0016C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3365  0016CA  2ADE               	incf	postinc2,f,c
  3366  0016CC  0E00               	movlw	0
  3367  0016CE  22DD               	addwfc	postdec2,f,c
  3368  0016D0                     
  3369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3370  0016D0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3371  0016D4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3372  0016D8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3373  0016DC  0E02               	movlw	2
  3374  0016DE  26DE               	addwf	postinc2,f,c
  3375  0016E0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3376  0016E4  0E00               	movlw	0
  3377  0016E6  22DD               	addwfc	postdec2,f,c
  3378  0016E8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3379  0016EC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3380  0016F0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3381  0016F4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3382  0016F8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3383  0016FC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3384  001700  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3385  001702  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3386  001704  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3387  001706  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3388  001708  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3389  00170A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3390  00170C  EFA3  F00A         	goto	l3073
  3391  001710                     l3105:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1359:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  3394  001710  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3395  001714  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3396  001718  CFDE F001          	movff	postinc2,strncmp@_l
  3397  00171C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3398  001720  0E57               	movlw	low STR_94
  3399  001722  6E03               	movwf	strncmp@_r^0,c
  3400  001724  0E06               	movlw	high STR_94
  3401  001726  6E04               	movwf	(strncmp@_r+1)^0,c
  3402  001728  0E00               	movlw	0
  3403  00172A  6E06               	movwf	(strncmp@n+1)^0,c
  3404  00172C  0E02               	movlw	2
  3405  00172E  6E05               	movwf	strncmp@n^0,c
  3406  001730  EC9D  F015         	call	_strncmp	;wreg free
  3407  001734  5001               	movf	?_strncmp^0,w,c
  3408  001736  1002               	iorwf	(?_strncmp+1)^0,w,c
  3409  001738  B4D8               	btfsc	status,2,c
  3410  00173A  EFA1  F00B         	goto	u3401
  3411  00173E  EFA3  F00B         	goto	u3400
  3412  001742                     u3401:
  3413  001742  EFBE  F00B         	goto	l3109
  3414  001746                     u3400:
  3415  001746  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3416  00174A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3417  00174E  CFDE F001          	movff	postinc2,strncmp@_l
  3418  001752  CFDD F002          	movff	postdec2,strncmp@_l+1
  3419  001756  0E45               	movlw	low STR_98
  3420  001758  6E03               	movwf	strncmp@_r^0,c
  3421  00175A  0E06               	movlw	high STR_98
  3422  00175C  6E04               	movwf	(strncmp@_r+1)^0,c
  3423  00175E  0E00               	movlw	0
  3424  001760  6E06               	movwf	(strncmp@n+1)^0,c
  3425  001762  0E02               	movlw	2
  3426  001764  6E05               	movwf	strncmp@n^0,c
  3427  001766  EC9D  F015         	call	_strncmp	;wreg free
  3428  00176A  5001               	movf	?_strncmp^0,w,c
  3429  00176C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3430  00176E  A4D8               	btfss	status,2,c
  3431  001770  EFBC  F00B         	goto	u3411
  3432  001774  EFBE  F00B         	goto	u3410
  3433  001778                     u3411:
  3434  001778  EFF9  F00B         	goto	l3119
  3435  00177C                     u3410:
  3436  00177C                     l3109:
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1360: ;C:\Program
      +                           Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1362:             c = (*fmt)
      +                          [1];
  3439  00177C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3440  001780  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3441  001784  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3442  001788  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3443  00178C  0E01               	movlw	1
  3444  00178E  2649               	addwf	??_vfpfcnvrt^0,f,c
  3445  001790  0E00               	movlw	0
  3446  001792  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3447  001794  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3448  001798  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3449  00179C                     	if	0	;tblptru may be non-zero
  3450  00179C                     	endif
  3451  00179C                     	if	0	;tblptru may be non-zero
  3452  00179C                     	endif
  3453  00179C  0008               	tblrd		*
  3454  00179E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3455  0017A2                     
  3456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1363:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  3457  0017A2  0E02               	movlw	2
  3458  0017A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3459  0017A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3460  0017AC  26DE               	addwf	postinc2,f,c
  3461  0017AE  0E00               	movlw	0
  3462  0017B0  22DD               	addwfc	postdec2,f,c
  3463  0017B2                     
  3464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1364:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3465  0017B2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3466  0017B6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3467  0017BA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3468  0017BE  0E02               	movlw	2
  3469  0017C0  26DE               	addwf	postinc2,f,c
  3470  0017C2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3471  0017C6  0E00               	movlw	0
  3472  0017C8  22DD               	addwfc	postdec2,f,c
  3473  0017CA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3474  0017CE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3475  0017D2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3476  0017D6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3477  0017DA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3478  0017DE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3479  0017E2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3480  0017E4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3481  0017E6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3482  0017E8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3483  0017EA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3484  0017EC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3485  0017EE  EFA3  F00A         	goto	l3073
  3486  0017F2                     l3119:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3489  0017F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3490  0017F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3491  0017FA  CFDE FFF6          	movff	postinc2,tblptrl
  3492  0017FE  CFDD FFF7          	movff	postdec2,tblptrh
  3493  001802                     	if	0	;tblptru may be non-zero
  3494  001802                     	endif
  3495  001802                     	if	0	;tblptru may be non-zero
  3496  001802                     	endif
  3497  001802  0008               	tblrd		*
  3498  001804  50F5               	movf	tablat,w,c
  3499  001806  0A25               	xorlw	37
  3500  001808  A4D8               	btfss	status,2,c
  3501  00180A  EF09  F00C         	goto	u3421
  3502  00180E  EF0B  F00C         	goto	u3420
  3503  001812                     u3421:
  3504  001812  EF22  F00C         	goto	l3129
  3505  001816                     u3420:
  3506  001816                     
  3507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3508  001816  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3509  00181A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3510  00181E  2ADE               	incf	postinc2,f,c
  3511  001820  0E00               	movlw	0
  3512  001822  22DD               	addwfc	postdec2,f,c
  3513  001824                     
  3514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3515  001824  0E00               	movlw	0
  3516  001826  6E02               	movwf	(fputc@c+1)^0,c
  3517  001828  0E25               	movlw	37
  3518  00182A  6E01               	movwf	fputc@c^0,c
  3519  00182C  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3520  001830  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3521  001834  ECE0  F016         	call	_fputc	;wreg free
  3522  001838                     l3125:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3525  001838  0E00               	movlw	0
  3526  00183A  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  3527  00183C  0E01               	movlw	1
  3528  00183E  6E43               	movwf	?_vfpfcnvrt^0,c
  3529  001840  EF46  F00C         	goto	l1019
  3530  001844                     l3129:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3533  001844  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3534  001848  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3535  00184C  2ADE               	incf	postinc2,f,c
  3536  00184E  0E00               	movlw	0
  3537  001850  22DD               	addwfc	postdec2,f,c
  3538  001852  EFCD  F007         	goto	l2981
  3539  001856                     l3135:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3542  001856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3543  00185A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3544  00185E  CFDE FFF6          	movff	postinc2,tblptrl
  3545  001862  CFDD FFF7          	movff	postdec2,tblptrh
  3546  001866                     	if	0	;tblptru may be non-zero
  3547  001866                     	endif
  3548  001866                     	if	0	;tblptru may be non-zero
  3549  001866                     	endif
  3550  001866  0008               	tblrd		*
  3551  001868  50F5               	movf	tablat,w,c
  3552  00186A  6E01               	movwf	fputc@c^0,c
  3553  00186C  6A02               	clrf	(fputc@c+1)^0,c
  3554  00186E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3555  001872  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3556  001876  ECE0  F016         	call	_fputc	;wreg free
  3557  00187A                     
  3558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3559  00187A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3560  00187E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3561  001882  2ADE               	incf	postinc2,f,c
  3562  001884  0E00               	movlw	0
  3563  001886  22DD               	addwfc	postdec2,f,c
  3564  001888  EF1C  F00C         	goto	l3125
  3565  00188C                     l1019:
  3566  00188C  0012               	return		;funcret
  3567  00188E                     __end_of_vfpfcnvrt:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function _xtoa *****************
  3571 ;; Defined at:
  3572 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3575 ;;		 -> vsnprintf@f(6), 
  3576 ;;  d               8   29[COMRAM] unsigned long long 
  3577 ;;  x               1   37[COMRAM] unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  n               8   54[COMRAM] unsigned long long 
  3580 ;;  c               2   64[COMRAM] int 
  3581 ;;  i               2   62[COMRAM] int 
  3582 ;;  w               2   52[COMRAM] int 
  3583 ;;  p               2   50[COMRAM] int 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  2   27[COMRAM] int 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3593 ;;      Params:        11       0       0       0       0       0       0
  3594 ;;      Locals:        20       0       0       0       0       0       0
  3595 ;;      Temps:          8       0       0       0       0       0       0
  3596 ;;      Totals:        39       0       0       0       0       0       0
  3597 ;;Total ram usage:       39 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    4
  3600 ;; This function calls:
  3601 ;;		_isalpha
  3602 ;;		_isupper
  3603 ;;		_pad
  3604 ;;		_toupper
  3605 ;; This function is called by:
  3606 ;;		_vfpfcnvrt
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text5
  3611  001B70                     __ptext5:
  3612                           	callstack 0
  3613  001B70                     _xtoa:
  3614                           	callstack 22
  3615  001B70                     
  3616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3617  001B70  0100               	movlb	0	; () banked
  3618  001B72  BF91               	btfsc	(_prec+1)& (0+255),7,b
  3619  001B74  EFBE  F00D         	goto	u2691
  3620  001B78  EFC0  F00D         	goto	u2690
  3621  001B7C                     u2691:
  3622  001B7C  EFC1  F00D         	goto	l2693
  3623  001B80                     u2690:
  3624  001B80                     
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3627  001B80  9392               	bcf	_flags& (0+255),1,b
  3628  001B82                     l2693:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3632  001B82  BF91               	btfsc	(_prec+1)& (0+255),7,b
  3633  001B84  EFCE  F00D         	goto	u2700
  3634  001B88  5191               	movf	(_prec+1)& (0+255),w,b
  3635  001B8A  E106               	bnz	u2701
  3636  001B8C  0590               	decf	_prec& (0+255),w,b
  3637  001B8E  B0D8               	btfsc	status,0,c
  3638  001B90  EFCC  F00D         	goto	u2701
  3639  001B94  EFCE  F00D         	goto	u2700
  3640  001B98                     u2701:
  3641  001B98  EFD4  F00D         	goto	l957
  3642  001B9C                     u2700:
  3643  001B9C                     
  3644                           ; BSR set to: 0
  3645  001B9C  0E00               	movlw	0
  3646  001B9E  6E34               	movwf	(xtoa@p+1)^0,c
  3647  001BA0  0E01               	movlw	1
  3648  001BA2  6E33               	movwf	xtoa@p^0,c
  3649  001BA4  EFD8  F00D         	goto	l959
  3650  001BA8                     l957:
  3651                           
  3652                           ; BSR set to: 0
  3653  001BA8  C090  F033         	movff	_prec,xtoa@p
  3654  001BAC  C091  F034         	movff	_prec+1,xtoa@p+1
  3655  001BB0                     l959:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3659  001BB0  C08E  F035         	movff	_width,xtoa@w
  3660  001BB4  C08F  F036         	movff	_width+1,xtoa@w+1
  3661                           
  3662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3663  001BB8  A992               	btfss	_flags& (0+255),4,b
  3664  001BBA  EFE1  F00D         	goto	u2711
  3665  001BBE  EFE3  F00D         	goto	u2710
  3666  001BC2                     u2711:
  3667  001BC2  EFE7  F00D         	goto	l2699
  3668  001BC6                     u2710:
  3669  001BC6                     
  3670                           ; BSR set to: 0
  3671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3672  001BC6  0EFE               	movlw	254
  3673  001BC8  2635               	addwf	xtoa@w^0,f,c
  3674  001BCA  0EFF               	movlw	255
  3675  001BCC  2236               	addwfc	(xtoa@w+1)^0,f,c
  3676  001BCE                     l2699:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3680  001BCE  C01E  F037         	movff	xtoa@d,xtoa@n
  3681  001BD2  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3682  001BD6  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3683  001BDA  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3684  001BDE  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3685  001BE2  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3686  001BE6  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3687  001BEA  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3688  001BEE                     
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3691  001BEE  0E00               	movlw	0
  3692  001BF0  6E40               	movwf	(xtoa@i+1)^0,c
  3693  001BF2  0E1F               	movlw	31
  3694  001BF4  6E3F               	movwf	xtoa@i^0,c
  3695  001BF6                     
  3696                           ; BSR set to: 0
  3697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3698  001BF6  0E00               	movlw	0
  3699  001BF8  6FB7               	movwf	(_dbuf+31)& (0+255),b
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3702  001BFA  EFB2  F00E         	goto	l2735
  3703  001BFE                     l2705:
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  3706  001BFE  063F               	decf	xtoa@i^0,f,c
  3707  001C00  A0D8               	btfss	status,0,c
  3708  001C02  0640               	decf	(xtoa@i+1)^0,f,c
  3709  001C04                     
  3710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3711  001C04  0E0F               	movlw	15
  3712  001C06  1437               	andwf	xtoa@n^0,w,c
  3713  001C08  6E41               	movwf	xtoa@c^0,c
  3714  001C0A  6A42               	clrf	(xtoa@c+1)^0,c
  3715  001C0C                     
  3716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3717  001C0C  BE42               	btfsc	(xtoa@c+1)^0,7,c
  3718  001C0E  EF12  F00E         	goto	u2721
  3719  001C12  5042               	movf	(xtoa@c+1)^0,w,c
  3720  001C14  E109               	bnz	u2720
  3721  001C16  0E0A               	movlw	10
  3722  001C18  5C41               	subwf	xtoa@c^0,w,c
  3723  001C1A  A0D8               	btfss	status,0,c
  3724  001C1C  EF12  F00E         	goto	u2721
  3725  001C20  EF14  F00E         	goto	u2720
  3726  001C24                     u2721:
  3727  001C24  EF1C  F00E         	goto	l2713
  3728  001C28                     u2720:
  3729  001C28  0E57               	movlw	87
  3730  001C2A  2441               	addwf	xtoa@c^0,w,c
  3731  001C2C  6E41               	movwf	xtoa@c^0,c
  3732  001C2E  0E00               	movlw	0
  3733  001C30  2042               	addwfc	(xtoa@c+1)^0,w,c
  3734  001C32  6E42               	movwf	(xtoa@c+1)^0,c
  3735  001C34  EF22  F00E         	goto	l966
  3736  001C38                     l2713:
  3737  001C38  0E30               	movlw	48
  3738  001C3A  2441               	addwf	xtoa@c^0,w,c
  3739  001C3C  6E41               	movwf	xtoa@c^0,c
  3740  001C3E  0E00               	movlw	0
  3741  001C40  2042               	addwfc	(xtoa@c+1)^0,w,c
  3742  001C42  6E42               	movwf	(xtoa@c+1)^0,c
  3743  001C44                     l966:
  3744  001C44  0EBF               	movlw	191
  3745  001C46  6E27               	movwf	??_xtoa^0,c
  3746  001C48  0EFF               	movlw	255
  3747  001C4A  6E28               	movwf	(??_xtoa+1)^0,c
  3748  001C4C  5026               	movf	xtoa@x^0,w,c
  3749  001C4E  6E29               	movwf	(??_xtoa+2)^0,c
  3750  001C50  6A2A               	clrf	(??_xtoa+3)^0,c
  3751  001C52  5027               	movf	??_xtoa^0,w,c
  3752  001C54  2629               	addwf	(??_xtoa+2)^0,f,c
  3753  001C56  5028               	movf	(??_xtoa+1)^0,w,c
  3754  001C58  222A               	addwfc	(??_xtoa+3)^0,f,c
  3755  001C5A  502A               	movf	(??_xtoa+3)^0,w,c
  3756  001C5C  E10A               	bnz	u2730
  3757  001C5E  0E1A               	movlw	26
  3758  001C60  5C29               	subwf	(??_xtoa+2)^0,w,c
  3759  001C62  A0D8               	btfss	status,0,c
  3760  001C64  EF36  F00E         	goto	u2731
  3761  001C68  EF39  F00E         	goto	u2730
  3762  001C6C                     u2731:
  3763  001C6C  0E01               	movlw	1
  3764  001C6E  EF3A  F00E         	goto	u2740
  3765  001C72                     u2730:
  3766  001C72  0E00               	movlw	0
  3767  001C74                     u2740:
  3768  001C74  6E2F               	movwf	_xtoa$1131^0,c
  3769  001C76  6A30               	clrf	(_xtoa$1131+1)^0,c
  3770  001C78  502F               	movf	_xtoa$1131^0,w,c
  3771  001C7A  1030               	iorwf	(_xtoa$1131+1)^0,w,c
  3772  001C7C  B4D8               	btfsc	status,2,c
  3773  001C7E  EF43  F00E         	goto	u2751
  3774  001C82  EF45  F00E         	goto	u2750
  3775  001C86                     u2751:
  3776  001C86  EF75  F00E         	goto	l2727
  3777  001C8A                     u2750:
  3778  001C8A  0E9F               	movlw	159
  3779  001C8C  6E27               	movwf	??_xtoa^0,c
  3780  001C8E  0EFF               	movlw	255
  3781  001C90  6E28               	movwf	(??_xtoa+1)^0,c
  3782  001C92  0E20               	movlw	32
  3783  001C94  1041               	iorwf	xtoa@c^0,w,c
  3784  001C96  6E29               	movwf	(??_xtoa+2)^0,c
  3785  001C98  0E00               	movlw	0
  3786  001C9A  1042               	iorwf	(xtoa@c+1)^0,w,c
  3787  001C9C  6E2A               	movwf	(??_xtoa+3)^0,c
  3788  001C9E  5027               	movf	??_xtoa^0,w,c
  3789  001CA0  2629               	addwf	(??_xtoa+2)^0,f,c
  3790  001CA2  5028               	movf	(??_xtoa+1)^0,w,c
  3791  001CA4  222A               	addwfc	(??_xtoa+3)^0,f,c
  3792  001CA6  502A               	movf	(??_xtoa+3)^0,w,c
  3793  001CA8  E10A               	bnz	u2760
  3794  001CAA  0E1A               	movlw	26
  3795  001CAC  5C29               	subwf	(??_xtoa+2)^0,w,c
  3796  001CAE  A0D8               	btfss	status,0,c
  3797  001CB0  EF5C  F00E         	goto	u2761
  3798  001CB4  EF5F  F00E         	goto	u2760
  3799  001CB8                     u2761:
  3800  001CB8  0E01               	movlw	1
  3801  001CBA  EF60  F00E         	goto	u2770
  3802  001CBE                     u2760:
  3803  001CBE  0E00               	movlw	0
  3804  001CC0                     u2770:
  3805  001CC0  6E31               	movwf	_xtoa$1132^0,c
  3806  001CC2  6A32               	clrf	(_xtoa$1132+1)^0,c
  3807  001CC4  5031               	movf	_xtoa$1132^0,w,c
  3808  001CC6  1032               	iorwf	(_xtoa$1132+1)^0,w,c
  3809  001CC8  B4D8               	btfsc	status,2,c
  3810  001CCA  EF69  F00E         	goto	u2781
  3811  001CCE  EF6B  F00E         	goto	u2780
  3812  001CD2                     u2781:
  3813  001CD2  EF75  F00E         	goto	l2727
  3814  001CD6                     u2780:
  3815  001CD6                     
  3816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3817  001CD6  C041  F007         	movff	xtoa@c,toupper@c
  3818  001CDA  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3819  001CDE  ECD9  F017         	call	_toupper	;wreg free
  3820  001CE2  C007  F041         	movff	?_toupper,xtoa@c
  3821  001CE6  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3822  001CEA                     l2727:
  3823                           
  3824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3825  001CEA  0E98               	movlw	low _dbuf
  3826  001CEC  243F               	addwf	xtoa@i^0,w,c
  3827  001CEE  6ED9               	movwf	fsr2l,c
  3828  001CF0  0E00               	movlw	high _dbuf
  3829  001CF2  2040               	addwfc	(xtoa@i+1)^0,w,c
  3830  001CF4  6EDA               	movwf	fsr2h,c
  3831  001CF6  C041  FFDF         	movff	xtoa@c,indf2
  3832  001CFA                     
  3833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  3834  001CFA  0633               	decf	xtoa@p^0,f,c
  3835  001CFC  A0D8               	btfss	status,0,c
  3836  001CFE  0634               	decf	(xtoa@p+1)^0,f,c
  3837  001D00                     
  3838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  3839  001D00  0635               	decf	xtoa@w^0,f,c
  3840  001D02  A0D8               	btfss	status,0,c
  3841  001D04  0636               	decf	(xtoa@w+1)^0,f,c
  3842  001D06                     
  3843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3844  001D06  C037  F027         	movff	xtoa@n,??_xtoa
  3845  001D0A  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3846  001D0E  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3847  001D12  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3848  001D16  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3849  001D1A  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3850  001D1E  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3851  001D22  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3852  001D26  0E05               	movlw	5
  3853  001D28  EF9F  F00E         	goto	u2790
  3854  001D2C                     u2795:
  3855  001D2C  90D8               	bcf	status,0,c
  3856  001D2E  322E               	rrcf	(??_xtoa+7)^0,f,c
  3857  001D30  322D               	rrcf	(??_xtoa+6)^0,f,c
  3858  001D32  322C               	rrcf	(??_xtoa+5)^0,f,c
  3859  001D34  322B               	rrcf	(??_xtoa+4)^0,f,c
  3860  001D36  322A               	rrcf	(??_xtoa+3)^0,f,c
  3861  001D38  3229               	rrcf	(??_xtoa+2)^0,f,c
  3862  001D3A  3228               	rrcf	(??_xtoa+1)^0,f,c
  3863  001D3C  3227               	rrcf	??_xtoa^0,f,c
  3864  001D3E                     u2790:
  3865  001D3E  2EE8               	decfsz	wreg,f,c
  3866  001D40  EF96  F00E         	goto	u2795
  3867  001D44  C027  F037         	movff	??_xtoa,xtoa@n
  3868  001D48  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3869  001D4C  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3870  001D50  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3871  001D54  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3872  001D58  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3873  001D5C  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3874  001D60  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3875  001D64                     l2735:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3878  001D64  BE40               	btfsc	(xtoa@i+1)^0,7,c
  3879  001D66  EFBE  F00E         	goto	u2801
  3880  001D6A  5040               	movf	(xtoa@i+1)^0,w,c
  3881  001D6C  E109               	bnz	u2800
  3882  001D6E  0E02               	movlw	2
  3883  001D70  5C3F               	subwf	xtoa@i^0,w,c
  3884  001D72  A0D8               	btfss	status,0,c
  3885  001D74  EFBE  F00E         	goto	u2801
  3886  001D78  EFC0  F00E         	goto	u2800
  3887  001D7C                     u2801:
  3888  001D7C  EFF1  F00E         	goto	l980
  3889  001D80                     u2800:
  3890  001D80  5037               	movf	xtoa@n^0,w,c
  3891  001D82  1038               	iorwf	(xtoa@n+1)^0,w,c
  3892  001D84  1039               	iorwf	(xtoa@n+2)^0,w,c
  3893  001D86  103A               	iorwf	(xtoa@n+3)^0,w,c
  3894  001D88  103B               	iorwf	(xtoa@n+4)^0,w,c
  3895  001D8A  103C               	iorwf	(xtoa@n+5)^0,w,c
  3896  001D8C  103D               	iorwf	(xtoa@n+6)^0,w,c
  3897  001D8E  103E               	iorwf	(xtoa@n+7)^0,w,c
  3898  001D90  A4D8               	btfss	status,2,c
  3899  001D92  EFCD  F00E         	goto	u2811
  3900  001D96  EFCF  F00E         	goto	u2810
  3901  001D9A                     u2811:
  3902  001D9A  EFFF  F00D         	goto	l2705
  3903  001D9E                     u2810:
  3904  001D9E  BE34               	btfsc	(xtoa@p+1)^0,7,c
  3905  001DA0  EFDC  F00E         	goto	u2820
  3906  001DA4  5034               	movf	(xtoa@p+1)^0,w,c
  3907  001DA6  E106               	bnz	u2821
  3908  001DA8  0433               	decf	xtoa@p^0,w,c
  3909  001DAA  B0D8               	btfsc	status,0,c
  3910  001DAC  EFDA  F00E         	goto	u2821
  3911  001DB0  EFDC  F00E         	goto	u2820
  3912  001DB4                     u2821:
  3913  001DB4  EFFF  F00D         	goto	l2705
  3914  001DB8                     u2820:
  3915  001DB8  BE36               	btfsc	(xtoa@w+1)^0,7,c
  3916  001DBA  EFE7  F00E         	goto	u2831
  3917  001DBE  5036               	movf	(xtoa@w+1)^0,w,c
  3918  001DC0  E108               	bnz	u2830
  3919  001DC2  0435               	decf	xtoa@w^0,w,c
  3920  001DC4  A0D8               	btfss	status,0,c
  3921  001DC6  EFE7  F00E         	goto	u2831
  3922  001DCA  EFE9  F00E         	goto	u2830
  3923  001DCE                     u2831:
  3924  001DCE  EFF1  F00E         	goto	l980
  3925  001DD2                     u2830:
  3926  001DD2  0100               	movlb	0	; () banked
  3927  001DD4  B392               	btfsc	_flags& (0+255),1,b
  3928  001DD6  EFEF  F00E         	goto	u2841
  3929  001DDA  EFF1  F00E         	goto	u2840
  3930  001DDE                     u2841:
  3931  001DDE  EFFF  F00D         	goto	l2705
  3932  001DE2                     u2840:
  3933  001DE2                     l980:
  3934                           
  3935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3936  001DE2  0100               	movlb	0	; () banked
  3937  001DE4  A992               	btfss	_flags& (0+255),4,b
  3938  001DE6  EFF7  F00E         	goto	u2851
  3939  001DEA  EFF9  F00E         	goto	u2850
  3940  001DEE                     u2851:
  3941  001DEE  EF0F  F00F         	goto	l2751
  3942  001DF2                     u2850:
  3943  001DF2                     
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  3946  001DF2  063F               	decf	xtoa@i^0,f,c
  3947  001DF4  A0D8               	btfss	status,0,c
  3948  001DF6  0640               	decf	(xtoa@i+1)^0,f,c
  3949  001DF8                     
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3952  001DF8  0E98               	movlw	low _dbuf
  3953  001DFA  243F               	addwf	xtoa@i^0,w,c
  3954  001DFC  6ED9               	movwf	fsr2l,c
  3955  001DFE  0E00               	movlw	high _dbuf
  3956  001E00  2040               	addwfc	(xtoa@i+1)^0,w,c
  3957  001E02  6EDA               	movwf	fsr2h,c
  3958  001E04  C026  FFDF         	movff	xtoa@x,indf2
  3959  001E08                     
  3960                           ; BSR set to: 0
  3961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  3962  001E08  063F               	decf	xtoa@i^0,f,c
  3963  001E0A  A0D8               	btfss	status,0,c
  3964  001E0C  0640               	decf	(xtoa@i+1)^0,f,c
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3967  001E0E  0E98               	movlw	low _dbuf
  3968  001E10  243F               	addwf	xtoa@i^0,w,c
  3969  001E12  6ED9               	movwf	fsr2l,c
  3970  001E14  0E00               	movlw	high _dbuf
  3971  001E16  2040               	addwfc	(xtoa@i+1)^0,w,c
  3972  001E18  6EDA               	movwf	fsr2h,c
  3973  001E1A  0E30               	movlw	48
  3974  001E1C  6EDF               	movwf	indf2,c
  3975  001E1E                     l2751:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3979  001E1E  C01C  F011         	movff	xtoa@fp,pad@fp
  3980  001E22  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  3981  001E26  0E98               	movlw	low _dbuf
  3982  001E28  243F               	addwf	xtoa@i^0,w,c
  3983  001E2A  6E13               	movwf	pad@buf^0,c
  3984  001E2C  0E00               	movlw	high _dbuf
  3985  001E2E  2040               	addwfc	(xtoa@i+1)^0,w,c
  3986  001E30  6E14               	movwf	(pad@buf+1)^0,c
  3987  001E32  C035  F015         	movff	xtoa@w,pad@p
  3988  001E36  C036  F016         	movff	xtoa@w+1,pad@p+1
  3989  001E3A  EC45  F017         	call	_pad	;wreg free
  3990  001E3E  C011  F01C         	movff	?_pad,?_xtoa
  3991  001E42  C012  F01D         	movff	?_pad+1,?_xtoa+1
  3992  001E46  0012               	return		;funcret
  3993  001E48                     __end_of_xtoa:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _toupper *****************
  3997 ;; Defined at:
  3998 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  c               2    6[COMRAM] int 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;		None
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  2    6[COMRAM] int 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4012 ;;      Params:         2       0       0       0       0       0       0
  4013 ;;      Locals:         2       0       0       0       0       0       0
  4014 ;;      Temps:          4       0       0       0       0       0       0
  4015 ;;      Totals:         8       0       0       0       0       0       0
  4016 ;;Total ram usage:        8 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:    1
  4019 ;; This function calls:
  4020 ;;		_islower
  4021 ;; This function is called by:
  4022 ;;		_xtoa
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text6
  4027  002FB2                     __ptext6:
  4028                           	callstack 0
  4029  002FB2                     _toupper:
  4030                           	callstack 24
  4031  002FB2  0E9F               	movlw	159
  4032  002FB4  6E09               	movwf	??_toupper^0,c
  4033  002FB6  0EFF               	movlw	255
  4034  002FB8  6E0A               	movwf	(??_toupper+1)^0,c
  4035  002FBA  C007  F00B         	movff	toupper@c,??_toupper+2
  4036  002FBE  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4037  002FC2  5009               	movf	??_toupper^0,w,c
  4038  002FC4  260B               	addwf	(??_toupper+2)^0,f,c
  4039  002FC6  500A               	movf	(??_toupper+1)^0,w,c
  4040  002FC8  220C               	addwfc	(??_toupper+3)^0,f,c
  4041  002FCA  500C               	movf	(??_toupper+3)^0,w,c
  4042  002FCC  E10A               	bnz	u2160
  4043  002FCE  0E1A               	movlw	26
  4044  002FD0  5C0B               	subwf	(??_toupper+2)^0,w,c
  4045  002FD2  A0D8               	btfss	status,0,c
  4046  002FD4  EFEE  F017         	goto	u2161
  4047  002FD8  EFF1  F017         	goto	u2160
  4048  002FDC                     u2161:
  4049  002FDC  0E01               	movlw	1
  4050  002FDE  EFF2  F017         	goto	u2170
  4051  002FE2                     u2160:
  4052  002FE2  0E00               	movlw	0
  4053  002FE4                     u2170:
  4054  002FE4  6E0D               	movwf	_toupper$1359^0,c
  4055  002FE6  6A0E               	clrf	(_toupper$1359+1)^0,c
  4056  002FE8  500D               	movf	_toupper$1359^0,w,c
  4057  002FEA  100E               	iorwf	(_toupper$1359+1)^0,w,c
  4058  002FEC  B4D8               	btfsc	status,2,c
  4059  002FEE  EFFB  F017         	goto	u2181
  4060  002FF2  EFFD  F017         	goto	u2180
  4061  002FF6                     u2181:
  4062  002FF6  EF03  F018         	goto	l1173
  4063  002FFA                     u2180:
  4064  002FFA  0E5F               	movlw	95
  4065  002FFC  1407               	andwf	toupper@c^0,w,c
  4066  002FFE  6E07               	movwf	?_toupper^0,c
  4067  003000  6A08               	clrf	(?_toupper+1)^0,c
  4068  003002  EF07  F018         	goto	l1178
  4069  003006                     l1173:
  4070  003006  C007  F007         	movff	toupper@c,?_toupper
  4071  00300A  C008  F008         	movff	toupper@c+1,?_toupper+1
  4072  00300E                     l1178:
  4073  00300E  0012               	return		;funcret
  4074  003010                     __end_of_toupper:
  4075                           	callstack 0
  4076                           
  4077 ;; *************** function _islower *****************
  4078 ;; Defined at:
  4079 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  c               2    0[COMRAM] int 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2    0[COMRAM] int 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4093 ;;      Params:         2       0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0
  4095 ;;      Temps:          4       0       0       0       0       0       0
  4096 ;;      Totals:         6       0       0       0       0       0       0
  4097 ;;Total ram usage:        6 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_toupper
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text7
  4107  0031D2                     __ptext7:
  4108                           	callstack 0
  4109  0031D2                     _islower:
  4110                           	callstack 24
  4111  0031D2  0E9F               	movlw	159
  4112  0031D4  6E03               	movwf	??_islower^0,c
  4113  0031D6  0EFF               	movlw	255
  4114  0031D8  6E04               	movwf	(??_islower+1)^0,c
  4115  0031DA  C001  F005         	movff	islower@c,??_islower+2
  4116  0031DE  C002  F006         	movff	islower@c+1,??_islower+3
  4117  0031E2  5003               	movf	??_islower^0,w,c
  4118  0031E4  2605               	addwf	(??_islower+2)^0,f,c
  4119  0031E6  5004               	movf	(??_islower+1)^0,w,c
  4120  0031E8  2206               	addwfc	(??_islower+3)^0,f,c
  4121  0031EA  5006               	movf	(??_islower+3)^0,w,c
  4122  0031EC  E10A               	bnz	u1850
  4123  0031EE  0E1A               	movlw	26
  4124  0031F0  5C05               	subwf	(??_islower+2)^0,w,c
  4125  0031F2  A0D8               	btfss	status,0,c
  4126  0031F4  EFFE  F018         	goto	u1851
  4127  0031F8  EF01  F019         	goto	u1850
  4128  0031FC                     u1851:
  4129  0031FC  0E01               	movlw	1
  4130  0031FE  EF02  F019         	goto	u1860
  4131  003202                     u1850:
  4132  003202  0E00               	movlw	0
  4133  003204                     u1860:
  4134  003204  6E01               	movwf	?_islower^0,c
  4135  003206  6A02               	clrf	(?_islower+1)^0,c
  4136  003208  0012               	return		;funcret
  4137  00320A                     __end_of_islower:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _isupper *****************
  4141 ;; Defined at:
  4142 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  c               2    0[COMRAM] int 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2    0[COMRAM] int 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4156 ;;      Params:         2       0       0       0       0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0
  4158 ;;      Temps:          4       0       0       0       0       0       0
  4159 ;;      Totals:         6       0       0       0       0       0       0
  4160 ;;Total ram usage:        6 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_xtoa
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text8
  4170  00320A                     __ptext8:
  4171                           	callstack 0
  4172  00320A                     _isupper:
  4173                           	callstack 25
  4174  00320A  0EBF               	movlw	191
  4175  00320C  6E03               	movwf	??_isupper^0,c
  4176  00320E  0EFF               	movlw	255
  4177  003210  6E04               	movwf	(??_isupper+1)^0,c
  4178  003212  C001  F005         	movff	isupper@c,??_isupper+2
  4179  003216  C002  F006         	movff	isupper@c+1,??_isupper+3
  4180  00321A  5003               	movf	??_isupper^0,w,c
  4181  00321C  2605               	addwf	(??_isupper+2)^0,f,c
  4182  00321E  5004               	movf	(??_isupper+1)^0,w,c
  4183  003220  2206               	addwfc	(??_isupper+3)^0,f,c
  4184  003222  5006               	movf	(??_isupper+3)^0,w,c
  4185  003224  E10A               	bnz	u2120
  4186  003226  0E1A               	movlw	26
  4187  003228  5C05               	subwf	(??_isupper+2)^0,w,c
  4188  00322A  A0D8               	btfss	status,0,c
  4189  00322C  EF1A  F019         	goto	u2121
  4190  003230  EF1D  F019         	goto	u2120
  4191  003234                     u2121:
  4192  003234  0E01               	movlw	1
  4193  003236  EF1E  F019         	goto	u2130
  4194  00323A                     u2120:
  4195  00323A  0E00               	movlw	0
  4196  00323C                     u2130:
  4197  00323C  6E01               	movwf	?_isupper^0,c
  4198  00323E  6A02               	clrf	(?_isupper+1)^0,c
  4199  003240  0012               	return		;funcret
  4200  003242                     __end_of_isupper:
  4201                           	callstack 0
  4202                           
  4203 ;; *************** function _isalpha *****************
  4204 ;; Defined at:
  4205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  c               2    0[COMRAM] int 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  2    0[COMRAM] int 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4219 ;;      Params:         2       0       0       0       0       0       0
  4220 ;;      Locals:         0       0       0       0       0       0       0
  4221 ;;      Temps:          4       0       0       0       0       0       0
  4222 ;;      Totals:         6       0       0       0       0       0       0
  4223 ;;Total ram usage:        6 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_xtoa
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text9
  4233  003196                     __ptext9:
  4234                           	callstack 0
  4235  003196                     _isalpha:
  4236                           	callstack 25
  4237  003196  0E9F               	movlw	159
  4238  003198  6E03               	movwf	??_isalpha^0,c
  4239  00319A  0EFF               	movlw	255
  4240  00319C  6E04               	movwf	(??_isalpha+1)^0,c
  4241  00319E  0E20               	movlw	32
  4242  0031A0  1001               	iorwf	isalpha@c^0,w,c
  4243  0031A2  6E05               	movwf	(??_isalpha+2)^0,c
  4244  0031A4  0E00               	movlw	0
  4245  0031A6  1002               	iorwf	(isalpha@c+1)^0,w,c
  4246  0031A8  6E06               	movwf	(??_isalpha+3)^0,c
  4247  0031AA  5003               	movf	??_isalpha^0,w,c
  4248  0031AC  2605               	addwf	(??_isalpha+2)^0,f,c
  4249  0031AE  5004               	movf	(??_isalpha+1)^0,w,c
  4250  0031B0  2206               	addwfc	(??_isalpha+3)^0,f,c
  4251  0031B2  5006               	movf	(??_isalpha+3)^0,w,c
  4252  0031B4  E10A               	bnz	u2140
  4253  0031B6  0E1A               	movlw	26
  4254  0031B8  5C05               	subwf	(??_isalpha+2)^0,w,c
  4255  0031BA  A0D8               	btfss	status,0,c
  4256  0031BC  EFE2  F018         	goto	u2141
  4257  0031C0  EFE5  F018         	goto	u2140
  4258  0031C4                     u2141:
  4259  0031C4  0E01               	movlw	1
  4260  0031C6  EFE6  F018         	goto	u2150
  4261  0031CA                     u2140:
  4262  0031CA  0E00               	movlw	0
  4263  0031CC                     u2150:
  4264  0031CC  6E01               	movwf	?_isalpha^0,c
  4265  0031CE  6A02               	clrf	(?_isalpha+1)^0,c
  4266  0031D0  0012               	return		;funcret
  4267  0031D2                     __end_of_isalpha:
  4268                           	callstack 0
  4269                           
  4270 ;; *************** function _utoa *****************
  4271 ;; Defined at:
  4272 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4275 ;;		 -> vsnprintf@f(6), 
  4276 ;;  d               8   29[COMRAM] unsigned long long 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  n               8   49[COMRAM] unsigned long long 
  4279 ;;  i               2   57[COMRAM] int 
  4280 ;;  w               2   47[COMRAM] int 
  4281 ;;  p               2   45[COMRAM] int 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2   27[COMRAM] int 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4291 ;;      Params:        10       0       0       0       0       0       0
  4292 ;;      Locals:        14       0       0       0       0       0       0
  4293 ;;      Temps:          8       0       0       0       0       0       0
  4294 ;;      Totals:        32       0       0       0       0       0       0
  4295 ;;Total ram usage:       32 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    4
  4298 ;; This function calls:
  4299 ;;		___lodiv
  4300 ;;		___lomod
  4301 ;;		_pad
  4302 ;; This function is called by:
  4303 ;;		_vfpfcnvrt
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text10
  4308  001E48                     __ptext10:
  4309                           	callstack 0
  4310  001E48                     _utoa:
  4311                           	callstack 22
  4312  001E48                     
  4313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  4314  001E48  0100               	movlb	0	; () banked
  4315  001E4A  BF91               	btfsc	(_prec+1)& (0+255),7,b
  4316  001E4C  EF2A  F00F         	goto	u2621
  4317  001E50  EF2C  F00F         	goto	u2620
  4318  001E54                     u2621:
  4319  001E54  EF2D  F00F         	goto	l2657
  4320  001E58                     u2620:
  4321  001E58                     
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  4324  001E58  9392               	bcf	_flags& (0+255),1,b
  4325  001E5A                     l2657:
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  4329  001E5A  BF91               	btfsc	(_prec+1)& (0+255),7,b
  4330  001E5C  EF3A  F00F         	goto	u2630
  4331  001E60  5191               	movf	(_prec+1)& (0+255),w,b
  4332  001E62  E106               	bnz	u2631
  4333  001E64  0590               	decf	_prec& (0+255),w,b
  4334  001E66  B0D8               	btfsc	status,0,c
  4335  001E68  EF38  F00F         	goto	u2631
  4336  001E6C  EF3A  F00F         	goto	u2630
  4337  001E70                     u2631:
  4338  001E70  EF40  F00F         	goto	l942
  4339  001E74                     u2630:
  4340  001E74                     
  4341                           ; BSR set to: 0
  4342  001E74  0E00               	movlw	0
  4343  001E76  6E2F               	movwf	(utoa@p+1)^0,c
  4344  001E78  0E01               	movlw	1
  4345  001E7A  6E2E               	movwf	utoa@p^0,c
  4346  001E7C  EF44  F00F         	goto	l944
  4347  001E80                     l942:
  4348                           
  4349                           ; BSR set to: 0
  4350  001E80  C090  F02E         	movff	_prec,utoa@p
  4351  001E84  C091  F02F         	movff	_prec+1,utoa@p+1
  4352  001E88                     l944:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  4356  001E88  C08E  F030         	movff	_width,utoa@w
  4357  001E8C  C08F  F031         	movff	_width+1,utoa@w+1
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 628:     n = d;
  4360  001E90  C01E  F032         	movff	utoa@d,utoa@n
  4361  001E94  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4362  001E98  C020  F034         	movff	utoa@d+2,utoa@n+2
  4363  001E9C  C021  F035         	movff	utoa@d+3,utoa@n+3
  4364  001EA0  C022  F036         	movff	utoa@d+4,utoa@n+4
  4365  001EA4  C023  F037         	movff	utoa@d+5,utoa@n+5
  4366  001EA8  C024  F038         	movff	utoa@d+6,utoa@n+6
  4367  001EAC  C025  F039         	movff	utoa@d+7,utoa@n+7
  4368  001EB0                     
  4369                           ; BSR set to: 0
  4370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  4371  001EB0  0E00               	movlw	0
  4372  001EB2  6E3B               	movwf	(utoa@i+1)^0,c
  4373  001EB4  0E1F               	movlw	31
  4374  001EB6  6E3A               	movwf	utoa@i^0,c
  4375  001EB8                     
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  4378  001EB8  0E00               	movlw	0
  4379  001EBA  6FB7               	movwf	(_dbuf+31)& (0+255),b
  4380                           
  4381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4382  001EBC  EFD6  F00F         	goto	l2675
  4383  001EC0                     l2665:
  4384                           
  4385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 632:         --i;
  4386  001EC0  063A               	decf	utoa@i^0,f,c
  4387  001EC2  A0D8               	btfss	status,0,c
  4388  001EC4  063B               	decf	(utoa@i+1)^0,f,c
  4389  001EC6                     
  4390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  4391  001EC6  0E98               	movlw	low _dbuf
  4392  001EC8  243A               	addwf	utoa@i^0,w,c
  4393  001ECA  6ED9               	movwf	fsr2l,c
  4394  001ECC  0E00               	movlw	high _dbuf
  4395  001ECE  203B               	addwfc	(utoa@i+1)^0,w,c
  4396  001ED0  6EDA               	movwf	fsr2h,c
  4397  001ED2  C032  F001         	movff	utoa@n,___lomod@dividend
  4398  001ED6  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4399  001EDA  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4400  001EDE  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4401  001EE2  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4402  001EE6  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4403  001EEA  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4404  001EEE  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4405  001EF2  0E0A               	movlw	10
  4406  001EF4  6E09               	movwf	___lomod@divisor^0,c
  4407  001EF6  0E00               	movlw	0
  4408  001EF8  6E0A               	movwf	(___lomod@divisor+1)^0,c
  4409  001EFA  0E00               	movlw	0
  4410  001EFC  6E0B               	movwf	(___lomod@divisor+2)^0,c
  4411  001EFE  0E00               	movlw	0
  4412  001F00  6E0C               	movwf	(___lomod@divisor+3)^0,c
  4413  001F02  0E00               	movlw	0
  4414  001F04  6E0D               	movwf	(___lomod@divisor+4)^0,c
  4415  001F06  0E00               	movlw	0
  4416  001F08  6E0E               	movwf	(___lomod@divisor+5)^0,c
  4417  001F0A  0E00               	movlw	0
  4418  001F0C  6E0F               	movwf	(___lomod@divisor+6)^0,c
  4419  001F0E  0E00               	movlw	0
  4420  001F10  6E10               	movwf	(___lomod@divisor+7)^0,c
  4421  001F12  EC78  F016         	call	___lomod	;wreg free
  4422  001F16  C001  F026         	movff	?___lomod,??_utoa
  4423  001F1A  C002  F027         	movff	?___lomod+1,??_utoa+1
  4424  001F1E  C003  F028         	movff	?___lomod+2,??_utoa+2
  4425  001F22  C004  F029         	movff	?___lomod+3,??_utoa+3
  4426  001F26  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4427  001F2A  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4428  001F2E  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4429  001F32  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4430  001F36  5026               	movf	??_utoa^0,w,c
  4431  001F38  0F30               	addlw	48
  4432  001F3A  6EDF               	movwf	indf2,c
  4433  001F3C                     
  4434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 634:         --p;
  4435  001F3C  062E               	decf	utoa@p^0,f,c
  4436  001F3E  A0D8               	btfss	status,0,c
  4437  001F40  062F               	decf	(utoa@p+1)^0,f,c
  4438  001F42                     
  4439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 635:         --w;
  4440  001F42  0630               	decf	utoa@w^0,f,c
  4441  001F44  A0D8               	btfss	status,0,c
  4442  001F46  0631               	decf	(utoa@w+1)^0,f,c
  4443  001F48                     
  4444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  4445  001F48  C032  F001         	movff	utoa@n,___lodiv@dividend
  4446  001F4C  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4447  001F50  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4448  001F54  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4449  001F58  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4450  001F5C  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4451  001F60  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4452  001F64  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4453  001F68  0E0A               	movlw	10
  4454  001F6A  6E09               	movwf	___lodiv@divisor^0,c
  4455  001F6C  0E00               	movlw	0
  4456  001F6E  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  4457  001F70  0E00               	movlw	0
  4458  001F72  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  4459  001F74  0E00               	movlw	0
  4460  001F76  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  4461  001F78  0E00               	movlw	0
  4462  001F7A  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  4463  001F7C  0E00               	movlw	0
  4464  001F7E  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  4465  001F80  0E00               	movlw	0
  4466  001F82  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  4467  001F84  0E00               	movlw	0
  4468  001F86  6E10               	movwf	(___lodiv@divisor+7)^0,c
  4469  001F88  EC25  F015         	call	___lodiv	;wreg free
  4470  001F8C  C001  F032         	movff	?___lodiv,utoa@n
  4471  001F90  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4472  001F94  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4473  001F98  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4474  001F9C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4475  001FA0  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4476  001FA4  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4477  001FA8  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4478  001FAC                     l2675:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4481  001FAC  503A               	movf	utoa@i^0,w,c
  4482  001FAE  103B               	iorwf	(utoa@i+1)^0,w,c
  4483  001FB0  B4D8               	btfsc	status,2,c
  4484  001FB2  EFDD  F00F         	goto	u2641
  4485  001FB6  EFDF  F00F         	goto	u2640
  4486  001FBA                     u2641:
  4487  001FBA  EF10  F010         	goto	l2685
  4488  001FBE                     u2640:
  4489  001FBE  5032               	movf	utoa@n^0,w,c
  4490  001FC0  1033               	iorwf	(utoa@n+1)^0,w,c
  4491  001FC2  1034               	iorwf	(utoa@n+2)^0,w,c
  4492  001FC4  1035               	iorwf	(utoa@n+3)^0,w,c
  4493  001FC6  1036               	iorwf	(utoa@n+4)^0,w,c
  4494  001FC8  1037               	iorwf	(utoa@n+5)^0,w,c
  4495  001FCA  1038               	iorwf	(utoa@n+6)^0,w,c
  4496  001FCC  1039               	iorwf	(utoa@n+7)^0,w,c
  4497  001FCE  A4D8               	btfss	status,2,c
  4498  001FD0  EFEC  F00F         	goto	u2651
  4499  001FD4  EFEE  F00F         	goto	u2650
  4500  001FD8                     u2651:
  4501  001FD8  EF60  F00F         	goto	l2665
  4502  001FDC                     u2650:
  4503  001FDC  BE2F               	btfsc	(utoa@p+1)^0,7,c
  4504  001FDE  EFFB  F00F         	goto	u2660
  4505  001FE2  502F               	movf	(utoa@p+1)^0,w,c
  4506  001FE4  E106               	bnz	u2661
  4507  001FE6  042E               	decf	utoa@p^0,w,c
  4508  001FE8  B0D8               	btfsc	status,0,c
  4509  001FEA  EFF9  F00F         	goto	u2661
  4510  001FEE  EFFB  F00F         	goto	u2660
  4511  001FF2                     u2661:
  4512  001FF2  EF60  F00F         	goto	l2665
  4513  001FF6                     u2660:
  4514  001FF6  BE31               	btfsc	(utoa@w+1)^0,7,c
  4515  001FF8  EF06  F010         	goto	u2671
  4516  001FFC  5031               	movf	(utoa@w+1)^0,w,c
  4517  001FFE  E108               	bnz	u2670
  4518  002000  0430               	decf	utoa@w^0,w,c
  4519  002002  A0D8               	btfss	status,0,c
  4520  002004  EF06  F010         	goto	u2671
  4521  002008  EF08  F010         	goto	u2670
  4522  00200C                     u2671:
  4523  00200C  EF10  F010         	goto	l2685
  4524  002010                     u2670:
  4525  002010  0100               	movlb	0	; () banked
  4526  002012  B392               	btfsc	_flags& (0+255),1,b
  4527  002014  EF0E  F010         	goto	u2681
  4528  002018  EF10  F010         	goto	u2680
  4529  00201C                     u2681:
  4530  00201C  EF60  F00F         	goto	l2665
  4531  002020                     u2680:
  4532  002020                     l2685:
  4533                           
  4534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  4535  002020  C01C  F011         	movff	utoa@fp,pad@fp
  4536  002024  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4537  002028  0E98               	movlw	low _dbuf
  4538  00202A  243A               	addwf	utoa@i^0,w,c
  4539  00202C  6E13               	movwf	pad@buf^0,c
  4540  00202E  0E00               	movlw	high _dbuf
  4541  002030  203B               	addwfc	(utoa@i+1)^0,w,c
  4542  002032  6E14               	movwf	(pad@buf+1)^0,c
  4543  002034  C030  F015         	movff	utoa@w,pad@p
  4544  002038  C031  F016         	movff	utoa@w+1,pad@p+1
  4545  00203C  EC45  F017         	call	_pad	;wreg free
  4546  002040  C011  F01C         	movff	?_pad,?_utoa
  4547  002044  C012  F01D         	movff	?_pad+1,?_utoa+1
  4548  002048  0012               	return		;funcret
  4549  00204A                     __end_of_utoa:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function ___lomod *****************
  4553 ;; Defined at:
  4554 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lomod.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  dividend        8    0[COMRAM] unsigned long long 
  4557 ;;  divisor         8    8[COMRAM] unsigned long long 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  counter         1   16[COMRAM] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  8    0[COMRAM] unsigned long long 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4569 ;;      Params:        16       0       0       0       0       0       0
  4570 ;;      Locals:         1       0       0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0
  4572 ;;      Totals:        17       0       0       0       0       0       0
  4573 ;;Total ram usage:       17 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_utoa
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text11
  4583  002CF0                     __ptext11:
  4584                           	callstack 0
  4585  002CF0                     ___lomod:
  4586                           	callstack 25
  4587  002CF0  5009               	movf	___lomod@divisor^0,w,c
  4588  002CF2  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4589  002CF4  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4590  002CF6  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4591  002CF8  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4592  002CFA  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4593  002CFC  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4594  002CFE  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4595  002D00  B4D8               	btfsc	status,2,c
  4596  002D02  EF85  F016         	goto	u2041
  4597  002D06  EF87  F016         	goto	u2040
  4598  002D0A                     u2041:
  4599  002D0A  EFCF  F016         	goto	l567
  4600  002D0E                     u2040:
  4601  002D0E  0E01               	movlw	1
  4602  002D10  6E11               	movwf	___lomod@counter^0,c
  4603  002D12  EF95  F016         	goto	l2403
  4604  002D16                     l2401:
  4605  002D16  90D8               	bcf	status,0,c
  4606  002D18  3609               	rlcf	___lomod@divisor^0,f,c
  4607  002D1A  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4608  002D1C  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4609  002D1E  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4610  002D20  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4611  002D22  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4612  002D24  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4613  002D26  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4614  002D28  2A11               	incf	___lomod@counter^0,f,c
  4615  002D2A                     l2403:
  4616  002D2A  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4617  002D2C  EF9A  F016         	goto	u2051
  4618  002D30  EF9C  F016         	goto	u2050
  4619  002D34                     u2051:
  4620  002D34  EF8B  F016         	goto	l2401
  4621  002D38                     u2050:
  4622  002D38                     l2405:
  4623  002D38  5009               	movf	___lomod@divisor^0,w,c
  4624  002D3A  5C01               	subwf	___lomod@dividend^0,w,c
  4625  002D3C  500A               	movf	(___lomod@divisor+1)^0,w,c
  4626  002D3E  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4627  002D40  500B               	movf	(___lomod@divisor+2)^0,w,c
  4628  002D42  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4629  002D44  500C               	movf	(___lomod@divisor+3)^0,w,c
  4630  002D46  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4631  002D48  500D               	movf	(___lomod@divisor+4)^0,w,c
  4632  002D4A  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4633  002D4C  500E               	movf	(___lomod@divisor+5)^0,w,c
  4634  002D4E  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4635  002D50  500F               	movf	(___lomod@divisor+6)^0,w,c
  4636  002D52  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4637  002D54  5010               	movf	(___lomod@divisor+7)^0,w,c
  4638  002D56  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4639  002D58  A0D8               	btfss	status,0,c
  4640  002D5A  EFB1  F016         	goto	u2061
  4641  002D5E  EFB3  F016         	goto	u2060
  4642  002D62                     u2061:
  4643  002D62  EFC3  F016         	goto	l2409
  4644  002D66                     u2060:
  4645  002D66  5009               	movf	___lomod@divisor^0,w,c
  4646  002D68  5E01               	subwf	___lomod@dividend^0,f,c
  4647  002D6A  500A               	movf	(___lomod@divisor+1)^0,w,c
  4648  002D6C  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4649  002D6E  500B               	movf	(___lomod@divisor+2)^0,w,c
  4650  002D70  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4651  002D72  500C               	movf	(___lomod@divisor+3)^0,w,c
  4652  002D74  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4653  002D76  500D               	movf	(___lomod@divisor+4)^0,w,c
  4654  002D78  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4655  002D7A  500E               	movf	(___lomod@divisor+5)^0,w,c
  4656  002D7C  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4657  002D7E  500F               	movf	(___lomod@divisor+6)^0,w,c
  4658  002D80  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4659  002D82  5010               	movf	(___lomod@divisor+7)^0,w,c
  4660  002D84  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4661  002D86                     l2409:
  4662  002D86  90D8               	bcf	status,0,c
  4663  002D88  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4664  002D8A  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4665  002D8C  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4666  002D8E  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4667  002D90  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4668  002D92  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4669  002D94  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4670  002D96  3209               	rrcf	___lomod@divisor^0,f,c
  4671  002D98  2E11               	decfsz	___lomod@counter^0,f,c
  4672  002D9A  EF9C  F016         	goto	l2405
  4673  002D9E                     l567:
  4674  002D9E  C001  F001         	movff	___lomod@dividend,?___lomod
  4675  002DA2  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4676  002DA6  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4677  002DAA  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4678  002DAE  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4679  002DB2  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4680  002DB6  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4681  002DBA  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4682  002DBE  0012               	return		;funcret
  4683  002DC0                     __end_of___lomod:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function ___lodiv *****************
  4687 ;; Defined at:
  4688 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lodiv.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  dividend        8    0[COMRAM] unsigned long long 
  4691 ;;  divisor         8    8[COMRAM] unsigned long long 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  quotient        8   16[COMRAM] unsigned long long 
  4694 ;;  counter         1   24[COMRAM] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  8    0[COMRAM] unsigned long long 
  4697 ;; Registers used:
  4698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4704 ;;      Params:        16       0       0       0       0       0       0
  4705 ;;      Locals:         9       0       0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0
  4707 ;;      Totals:        25       0       0       0       0       0       0
  4708 ;;Total ram usage:       25 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_utoa
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text12
  4718  002A4A                     __ptext12:
  4719                           	callstack 0
  4720  002A4A                     ___lodiv:
  4721                           	callstack 25
  4722  002A4A  EE20  F011         	lfsr	2,___lodiv@quotient
  4723  002A4E  0E07               	movlw	7
  4724  002A50                     u2001:
  4725  002A50  6ADE               	clrf	postinc2,c
  4726  002A52  06E8               	decf	wreg,f,c
  4727  002A54  E2FD               	bc	u2001
  4728  002A56  5009               	movf	___lodiv@divisor^0,w,c
  4729  002A58  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4730  002A5A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4731  002A5C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4732  002A5E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4733  002A60  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4734  002A62  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4735  002A64  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4736  002A66  B4D8               	btfsc	status,2,c
  4737  002A68  EF38  F015         	goto	u2011
  4738  002A6C  EF3A  F015         	goto	u2010
  4739  002A70                     u2011:
  4740  002A70  EF8C  F015         	goto	l557
  4741  002A74                     u2010:
  4742  002A74  0E01               	movlw	1
  4743  002A76  6E19               	movwf	___lodiv@counter^0,c
  4744  002A78  EF48  F015         	goto	l2383
  4745  002A7C                     l2381:
  4746  002A7C  90D8               	bcf	status,0,c
  4747  002A7E  3609               	rlcf	___lodiv@divisor^0,f,c
  4748  002A80  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4749  002A82  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4750  002A84  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4751  002A86  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4752  002A88  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4753  002A8A  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4754  002A8C  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4755  002A8E  2A19               	incf	___lodiv@counter^0,f,c
  4756  002A90                     l2383:
  4757  002A90  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4758  002A92  EF4D  F015         	goto	u2021
  4759  002A96  EF4F  F015         	goto	u2020
  4760  002A9A                     u2021:
  4761  002A9A  EF3E  F015         	goto	l2381
  4762  002A9E                     u2020:
  4763  002A9E                     l2385:
  4764  002A9E  90D8               	bcf	status,0,c
  4765  002AA0  3611               	rlcf	___lodiv@quotient^0,f,c
  4766  002AA2  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4767  002AA4  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4768  002AA6  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4769  002AA8  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4770  002AAA  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4771  002AAC  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4772  002AAE  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4773  002AB0  5009               	movf	___lodiv@divisor^0,w,c
  4774  002AB2  5C01               	subwf	___lodiv@dividend^0,w,c
  4775  002AB4  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4776  002AB6  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4777  002AB8  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4778  002ABA  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4779  002ABC  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4780  002ABE  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4781  002AC0  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4782  002AC2  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4783  002AC4  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4784  002AC6  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4785  002AC8  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4786  002ACA  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4787  002ACC  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4788  002ACE  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4789  002AD0  A0D8               	btfss	status,0,c
  4790  002AD2  EF6D  F015         	goto	u2031
  4791  002AD6  EF6F  F015         	goto	u2030
  4792  002ADA                     u2031:
  4793  002ADA  EF80  F015         	goto	l2393
  4794  002ADE                     u2030:
  4795  002ADE  5009               	movf	___lodiv@divisor^0,w,c
  4796  002AE0  5E01               	subwf	___lodiv@dividend^0,f,c
  4797  002AE2  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4798  002AE4  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4799  002AE6  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4800  002AE8  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4801  002AEA  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4802  002AEC  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4803  002AEE  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4804  002AF0  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4805  002AF2  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4806  002AF4  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4807  002AF6  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4808  002AF8  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4809  002AFA  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4810  002AFC  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4811  002AFE  8011               	bsf	___lodiv@quotient^0,0,c
  4812  002B00                     l2393:
  4813  002B00  90D8               	bcf	status,0,c
  4814  002B02  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4815  002B04  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4816  002B06  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4817  002B08  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4818  002B0A  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4819  002B0C  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4820  002B0E  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4821  002B10  3209               	rrcf	___lodiv@divisor^0,f,c
  4822  002B12  2E19               	decfsz	___lodiv@counter^0,f,c
  4823  002B14  EF4F  F015         	goto	l2385
  4824  002B18                     l557:
  4825  002B18  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4826  002B1C  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4827  002B20  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4828  002B24  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4829  002B28  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4830  002B2C  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4831  002B30  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4832  002B34  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4833  002B38  0012               	return		;funcret
  4834  002B3A                     __end_of___lodiv:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _strncmp *****************
  4838 ;; Defined at:
  4839 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4842 ;;		 -> STR_3(11), STR_2(10), 
  4843 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4844 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  4845 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  4846 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  4847 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  4848 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  4849 ;;		 -> STR_6(4), 
  4850 ;;  n               2    4[COMRAM] unsigned int 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4853 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  4854 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  4855 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  4856 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  4857 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  4858 ;;		 -> STR_6(4), 
  4859 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4860 ;;		 -> STR_3(11), STR_2(10), 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2    0[COMRAM] int 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4870 ;;      Params:         6       0       0       0       0       0       0
  4871 ;;      Locals:         4       0       0       0       0       0       0
  4872 ;;      Temps:          1       0       0       0       0       0       0
  4873 ;;      Totals:        11       0       0       0       0       0       0
  4874 ;;Total ram usage:       11 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_vfpfcnvrt
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text13
  4884  002B3A                     __ptext13:
  4885                           	callstack 0
  4886  002B3A                     _strncmp:
  4887                           	callstack 26
  4888  002B3A  C001  F008         	movff	strncmp@_l,strncmp@l
  4889  002B3E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4890  002B42  C003  F00A         	movff	strncmp@_r,strncmp@r
  4891  002B46  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4892  002B4A  0605               	decf	strncmp@n^0,f,c
  4893  002B4C  A0D8               	btfss	status,0,c
  4894  002B4E  0606               	decf	(strncmp@n+1)^0,f,c
  4895  002B50  2805               	incf	strncmp@n^0,w,c
  4896  002B52  E106               	bnz	u2931
  4897  002B54  2806               	incf	(strncmp@n+1)^0,w,c
  4898  002B56  A4D8               	btfss	status,2,c
  4899  002B58  EFB0  F015         	goto	u2931
  4900  002B5C  EFB2  F015         	goto	u2930
  4901  002B60                     u2931:
  4902  002B60  EFBF  F015         	goto	l2805
  4903  002B64                     u2930:
  4904  002B64  0E00               	movlw	0
  4905  002B66  6E02               	movwf	(?_strncmp+1)^0,c
  4906  002B68  0E00               	movlw	0
  4907  002B6A  6E01               	movwf	?_strncmp^0,c
  4908  002B6C  EF0B  F016         	goto	l1163
  4909  002B70                     l2803:
  4910  002B70  4A08               	infsnz	strncmp@l^0,f,c
  4911  002B72  2A09               	incf	(strncmp@l+1)^0,f,c
  4912  002B74  4A0A               	infsnz	strncmp@r^0,f,c
  4913  002B76  2A0B               	incf	(strncmp@r+1)^0,f,c
  4914  002B78  0605               	decf	strncmp@n^0,f,c
  4915  002B7A  A0D8               	btfss	status,0,c
  4916  002B7C  0606               	decf	(strncmp@n+1)^0,f,c
  4917  002B7E                     l2805:
  4918  002B7E  C008  FFF6         	movff	strncmp@l,tblptrl
  4919  002B82  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4920  002B86                     	if	0	;tblptru may be non-zero
  4921  002B86                     	endif
  4922  002B86                     	if	0	;tblptru may be non-zero
  4923  002B86                     	endif
  4924  002B86  0008               	tblrd		*
  4925  002B88  50F5               	movf	tablat,w,c
  4926  002B8A  0900               	iorlw	0
  4927  002B8C  B4D8               	btfsc	status,2,c
  4928  002B8E  EFCB  F015         	goto	u2941
  4929  002B92  EFCD  F015         	goto	u2940
  4930  002B96                     u2941:
  4931  002B96  EFF9  F015         	goto	l2813
  4932  002B9A                     u2940:
  4933  002B9A  C00A  FFF6         	movff	strncmp@r,tblptrl
  4934  002B9E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4935  002BA2                     	if	0	;tblptru may be non-zero
  4936  002BA2                     	endif
  4937  002BA2                     	if	0	;tblptru may be non-zero
  4938  002BA2                     	endif
  4939  002BA2  0008               	tblrd		*
  4940  002BA4  50F5               	movf	tablat,w,c
  4941  002BA6  0900               	iorlw	0
  4942  002BA8  B4D8               	btfsc	status,2,c
  4943  002BAA  EFD9  F015         	goto	u2951
  4944  002BAE  EFDB  F015         	goto	u2950
  4945  002BB2                     u2951:
  4946  002BB2  EFF9  F015         	goto	l2813
  4947  002BB6                     u2950:
  4948  002BB6  5005               	movf	strncmp@n^0,w,c
  4949  002BB8  1006               	iorwf	(strncmp@n+1)^0,w,c
  4950  002BBA  B4D8               	btfsc	status,2,c
  4951  002BBC  EFE2  F015         	goto	u2961
  4952  002BC0  EFE4  F015         	goto	u2960
  4953  002BC4                     u2961:
  4954  002BC4  EFF9  F015         	goto	l2813
  4955  002BC8                     u2960:
  4956  002BC8  C008  FFF6         	movff	strncmp@l,tblptrl
  4957  002BCC  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4958  002BD0                     	if	0	;tblptru may be non-zero
  4959  002BD0                     	endif
  4960  002BD0                     	if	0	;tblptru may be non-zero
  4961  002BD0                     	endif
  4962  002BD0  0008               	tblrd		*
  4963  002BD2  CFF5 F007          	movff	tablat,??_strncmp
  4964  002BD6  C00A  FFF6         	movff	strncmp@r,tblptrl
  4965  002BDA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4966  002BDE                     	if	0	;tblptru may be non-zero
  4967  002BDE                     	endif
  4968  002BDE                     	if	0	;tblptru may be non-zero
  4969  002BDE                     	endif
  4970  002BDE  0008               	tblrd		*
  4971  002BE0  50F5               	movf	tablat,w,c
  4972  002BE2  1807               	xorwf	??_strncmp^0,w,c
  4973  002BE4  B4D8               	btfsc	status,2,c
  4974  002BE6  EFF7  F015         	goto	u2971
  4975  002BEA  EFF9  F015         	goto	u2970
  4976  002BEE                     u2971:
  4977  002BEE  EFB8  F015         	goto	l2803
  4978  002BF2                     u2970:
  4979  002BF2                     l2813:
  4980  002BF2  C008  FFF6         	movff	strncmp@l,tblptrl
  4981  002BF6  C009  FFF7         	movff	strncmp@l+1,tblptrh
  4982  002BFA                     	if	0	;tblptru may be non-zero
  4983  002BFA                     	endif
  4984  002BFA                     	if	0	;tblptru may be non-zero
  4985  002BFA                     	endif
  4986  002BFA  0008               	tblrd		*
  4987  002BFC  CFF5 F007          	movff	tablat,??_strncmp
  4988  002C00  C00A  FFF6         	movff	strncmp@r,tblptrl
  4989  002C04  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4990  002C08                     	if	0	;tblptru may be non-zero
  4991  002C08                     	endif
  4992  002C08                     	if	0	;tblptru may be non-zero
  4993  002C08                     	endif
  4994  002C08  0008               	tblrd		*
  4995  002C0A  50F5               	movf	tablat,w,c
  4996  002C0C  5C07               	subwf	??_strncmp^0,w,c
  4997  002C0E  6E01               	movwf	?_strncmp^0,c
  4998  002C10  6A02               	clrf	(?_strncmp+1)^0,c
  4999  002C12  A0D8               	btfss	status,0,c
  5000  002C14  0602               	decf	(?_strncmp+1)^0,f,c
  5001  002C16                     l1163:
  5002  002C16  0012               	return		;funcret
  5003  002C18                     __end_of_strncmp:
  5004                           	callstack 0
  5005                           
  5006 ;; *************** function _stoa *****************
  5007 ;; Defined at:
  5008 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5011 ;;		 -> vsnprintf@f(6), 
  5012 ;;  s               2   11[COMRAM] PTR unsigned char 
  5013 ;;		 -> ?_snprintf(2), 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5016 ;;  l               2   29[COMRAM] int 
  5017 ;;  p               2   27[COMRAM] int 
  5018 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5019 ;;		 -> stoa@nuls(7), ?_snprintf(2), 
  5020 ;;  w               2   23[COMRAM] int 
  5021 ;;  i               2   21[COMRAM] int 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  2    9[COMRAM] int 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5031 ;;      Params:         4       0       0       0       0       0       0
  5032 ;;      Locals:        17       0       0       0       0       0       0
  5033 ;;      Temps:          1       0       0       0       0       0       0
  5034 ;;      Totals:        22       0       0       0       0       0       0
  5035 ;;Total ram usage:       22 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    2
  5038 ;; This function calls:
  5039 ;;		_fputc
  5040 ;;		_strlen
  5041 ;; This function is called by:
  5042 ;;		_vfpfcnvrt
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text14
  5047  002550                     __ptext14:
  5048                           	callstack 0
  5049  002550                     _stoa:
  5050                           	callstack 24
  5051  002550                     
  5052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  5053  002550  EE20  F0E6         	lfsr	2,stoa@F1154
  5054  002554  EE10  F00F         	lfsr	1,stoa@nuls
  5055  002558  0E06               	movlw	6
  5056  00255A                     u2531:
  5057  00255A  CFDB FFE3          	movff	plusw2,plusw1
  5058  00255E  06E8               	decf	wreg,f,c
  5059  002560  E2FC               	bc	u2531
  5060  002562                     
  5061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  5062  002562  C00C  F01A         	movff	stoa@s,stoa@cp
  5063  002566  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5064  00256A                     
  5065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  5066  00256A  501A               	movf	stoa@cp^0,w,c
  5067  00256C  101B               	iorwf	(stoa@cp+1)^0,w,c
  5068  00256E  A4D8               	btfss	status,2,c
  5069  002570  EFBC  F012         	goto	u2541
  5070  002574  EFBE  F012         	goto	u2540
  5071  002578                     u2541:
  5072  002578  EFC2  F012         	goto	l2619
  5073  00257C                     u2540:
  5074  00257C                     
  5075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  5076  00257C  0E0F               	movlw	low stoa@nuls
  5077  00257E  6E1A               	movwf	stoa@cp^0,c
  5078  002580  0E00               	movlw	high stoa@nuls
  5079  002582  6E1B               	movwf	(stoa@cp+1)^0,c
  5080  002584                     l2619:
  5081                           
  5082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  5083  002584  C01A  F001         	movff	stoa@cp,strlen@s
  5084  002588  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5085  00258C  EC58  F019         	call	_strlen	;wreg free
  5086  002590  C001  F01E         	movff	?_strlen,stoa@l
  5087  002594  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5088  002598                     
  5089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  5090  002598  C090  F01C         	movff	_prec,stoa@p
  5091  00259C  C091  F01D         	movff	_prec+1,stoa@p+1
  5092  0025A0                     
  5093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  5094  0025A0  BE1D               	btfsc	(stoa@p+1)^0,7,c
  5095  0025A2  EFD5  F012         	goto	u2551
  5096  0025A6  EFD7  F012         	goto	u2550
  5097  0025AA                     u2551:
  5098  0025AA  EFEC  F012         	goto	l923
  5099  0025AE                     u2550:
  5100  0025AE  501E               	movf	stoa@l^0,w,c
  5101  0025B0  5C1C               	subwf	stoa@p^0,w,c
  5102  0025B2  501D               	movf	(stoa@p+1)^0,w,c
  5103  0025B4  0A80               	xorlw	128
  5104  0025B6  6E0E               	movwf	??_stoa^0,c
  5105  0025B8  501F               	movf	(stoa@l+1)^0,w,c
  5106  0025BA  0A80               	xorlw	128
  5107  0025BC  580E               	subwfb	??_stoa^0,w,c
  5108  0025BE  A0D8               	btfss	status,0,c
  5109  0025C0  EFE4  F012         	goto	u2561
  5110  0025C4  EFE6  F012         	goto	u2560
  5111  0025C8                     u2561:
  5112  0025C8  EFE8  F012         	goto	l921
  5113  0025CC                     u2560:
  5114  0025CC  EFEC  F012         	goto	l923
  5115  0025D0                     l921:
  5116  0025D0  C01C  F01E         	movff	stoa@p,stoa@l
  5117  0025D4  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5118  0025D8                     l923:
  5119                           
  5120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 583:     p = l;
  5121  0025D8  C01E  F01C         	movff	stoa@l,stoa@p
  5122  0025DC  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5123                           
  5124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  5125  0025E0  C08E  F018         	movff	_width,stoa@w
  5126  0025E4  C08F  F019         	movff	_width+1,stoa@w+1
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  5129  0025E8  0100               	movlb	0	; () banked
  5130  0025EA  B192               	btfsc	_flags& (0+255),0,b
  5131  0025EC  EFFA  F012         	goto	u2571
  5132  0025F0  EFFC  F012         	goto	u2570
  5133  0025F4                     u2571:
  5134  0025F4  EF19  F013         	goto	l2635
  5135  0025F8                     u2570:
  5136  0025F8  EF0A  F013         	goto	l2633
  5137  0025FC                     l2629:
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  5140  0025FC  0E00               	movlw	0
  5141  0025FE  6E02               	movwf	(fputc@c+1)^0,c
  5142  002600  0E20               	movlw	32
  5143  002602  6E01               	movwf	fputc@c^0,c
  5144  002604  C00A  F003         	movff	stoa@fp,fputc@fp
  5145  002608  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5146  00260C  ECE0  F016         	call	_fputc	;wreg free
  5147  002610                     
  5148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  5149  002610  4A1E               	infsnz	stoa@l^0,f,c
  5150  002612  2A1F               	incf	(stoa@l+1)^0,f,c
  5151  002614                     l2633:
  5152                           
  5153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  5154  002614  5018               	movf	stoa@w^0,w,c
  5155  002616  5C1E               	subwf	stoa@l^0,w,c
  5156  002618  501F               	movf	(stoa@l+1)^0,w,c
  5157  00261A  0A80               	xorlw	128
  5158  00261C  6E0E               	movwf	??_stoa^0,c
  5159  00261E  5019               	movf	(stoa@w+1)^0,w,c
  5160  002620  0A80               	xorlw	128
  5161  002622  580E               	subwfb	??_stoa^0,w,c
  5162  002624  A0D8               	btfss	status,0,c
  5163  002626  EF17  F013         	goto	u2581
  5164  00262A  EF19  F013         	goto	u2580
  5165  00262E                     u2581:
  5166  00262E  EFFE  F012         	goto	l2629
  5167  002632                     u2580:
  5168  002632                     l2635:
  5169                           
  5170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  5171  002632  0E00               	movlw	0
  5172  002634  6E17               	movwf	(stoa@i+1)^0,c
  5173  002636  0E00               	movlw	0
  5174  002638  6E16               	movwf	stoa@i^0,c
  5175                           
  5176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5177  00263A  EF32  F013         	goto	l2643
  5178  00263E                     l2637:
  5179                           
  5180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  5181  00263E  C01A  FFD9         	movff	stoa@cp,fsr2l
  5182  002642  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5183  002646  50DF               	movf	indf2,w,c
  5184  002648  6E0E               	movwf	??_stoa^0,c
  5185  00264A  500E               	movf	??_stoa^0,w,c
  5186  00264C  6E01               	movwf	fputc@c^0,c
  5187  00264E  6A02               	clrf	(fputc@c+1)^0,c
  5188  002650  C00A  F003         	movff	stoa@fp,fputc@fp
  5189  002654  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5190  002658  ECE0  F016         	call	_fputc	;wreg free
  5191  00265C                     
  5192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  5193  00265C  4A1A               	infsnz	stoa@cp^0,f,c
  5194  00265E  2A1B               	incf	(stoa@cp+1)^0,f,c
  5195  002660                     
  5196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 599:         ++i;
  5197  002660  4A16               	infsnz	stoa@i^0,f,c
  5198  002662  2A17               	incf	(stoa@i+1)^0,f,c
  5199  002664                     l2643:
  5200                           
  5201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  5202  002664  501C               	movf	stoa@p^0,w,c
  5203  002666  5C16               	subwf	stoa@i^0,w,c
  5204  002668  5017               	movf	(stoa@i+1)^0,w,c
  5205  00266A  0A80               	xorlw	128
  5206  00266C  6E0E               	movwf	??_stoa^0,c
  5207  00266E  501D               	movf	(stoa@p+1)^0,w,c
  5208  002670  0A80               	xorlw	128
  5209  002672  580E               	subwfb	??_stoa^0,w,c
  5210  002674  A0D8               	btfss	status,0,c
  5211  002676  EF3F  F013         	goto	u2591
  5212  00267A  EF41  F013         	goto	u2590
  5213  00267E                     u2591:
  5214  00267E  EF1F  F013         	goto	l2637
  5215  002682                     u2590:
  5216  002682                     
  5217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  5218  002682  0100               	movlb	0	; () banked
  5219  002684  A192               	btfss	_flags& (0+255),0,b
  5220  002686  EF47  F013         	goto	u2601
  5221  00268A  EF49  F013         	goto	u2600
  5222  00268E                     u2601:
  5223  00268E  EF66  F013         	goto	l933
  5224  002692                     u2600:
  5225  002692  EF57  F013         	goto	l2651
  5226  002696                     l2647:
  5227                           
  5228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  5229  002696  0E00               	movlw	0
  5230  002698  6E02               	movwf	(fputc@c+1)^0,c
  5231  00269A  0E20               	movlw	32
  5232  00269C  6E01               	movwf	fputc@c^0,c
  5233  00269E  C00A  F003         	movff	stoa@fp,fputc@fp
  5234  0026A2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5235  0026A6  ECE0  F016         	call	_fputc	;wreg free
  5236  0026AA                     
  5237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  5238  0026AA  4A1E               	infsnz	stoa@l^0,f,c
  5239  0026AC  2A1F               	incf	(stoa@l+1)^0,f,c
  5240  0026AE                     l2651:
  5241                           
  5242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  5243  0026AE  5018               	movf	stoa@w^0,w,c
  5244  0026B0  5C1E               	subwf	stoa@l^0,w,c
  5245  0026B2  501F               	movf	(stoa@l+1)^0,w,c
  5246  0026B4  0A80               	xorlw	128
  5247  0026B6  6E0E               	movwf	??_stoa^0,c
  5248  0026B8  5019               	movf	(stoa@w+1)^0,w,c
  5249  0026BA  0A80               	xorlw	128
  5250  0026BC  580E               	subwfb	??_stoa^0,w,c
  5251  0026BE  A0D8               	btfss	status,0,c
  5252  0026C0  EF64  F013         	goto	u2611
  5253  0026C4  EF66  F013         	goto	u2610
  5254  0026C8                     u2611:
  5255  0026C8  EF4B  F013         	goto	l2647
  5256  0026CC                     u2610:
  5257  0026CC                     l933:
  5258                           
  5259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  5260  0026CC  C01E  F00A         	movff	stoa@l,?_stoa
  5261  0026D0  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5262  0026D4  0012               	return		;funcret
  5263  0026D6                     __end_of_stoa:
  5264                           	callstack 0
  5265                           
  5266 ;; *************** function _otoa *****************
  5267 ;; Defined at:
  5268 ;;		line 529 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5271 ;;		 -> vsnprintf@f(6), 
  5272 ;;  d               8   29[COMRAM] unsigned long long 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  n               8   51[COMRAM] unsigned long long 
  5275 ;;  i               2   59[COMRAM] int 
  5276 ;;  w               2   49[COMRAM] int 
  5277 ;;  t               2   47[COMRAM] int 
  5278 ;;  p               2   45[COMRAM] int 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  2   27[COMRAM] int 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5288 ;;      Params:        10       0       0       0       0       0       0
  5289 ;;      Locals:        16       0       0       0       0       0       0
  5290 ;;      Temps:          8       0       0       0       0       0       0
  5291 ;;      Totals:        34       0       0       0       0       0       0
  5292 ;;Total ram usage:       34 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    4
  5295 ;; This function calls:
  5296 ;;		_pad
  5297 ;; This function is called by:
  5298 ;;		_vfpfcnvrt
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text15
  5303  00204A                     __ptext15:
  5304                           	callstack 0
  5305  00204A                     _otoa:
  5306                           	callstack 22
  5307  00204A                     
  5308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 529: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 530: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 531:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\com
      +                          mon\doprnt.c: 532:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\so
      +                          urces\c99\common\doprnt.c: 535:     if (!(prec < 0)) {
  5309  00204A  0100               	movlb	0	; () banked
  5310  00204C  BF91               	btfsc	(_prec+1)& (0+255),7,b
  5311  00204E  EF2B  F010         	goto	u2431
  5312  002052  EF2D  F010         	goto	u2430
  5313  002056                     u2431:
  5314  002056  EF2E  F010         	goto	l2567
  5315  00205A                     u2430:
  5316  00205A                     
  5317                           ; BSR set to: 0
  5318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 536:         flag
      +                          s &= ~(1 << 1);
  5319  00205A  9392               	bcf	_flags& (0+255),1,b
  5320  00205C                     l2567:
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 538:     p = (0 <
      +                           prec) ? prec : 1;
  5324  00205C  BF91               	btfsc	(_prec+1)& (0+255),7,b
  5325  00205E  EF3B  F010         	goto	u2440
  5326  002062  5191               	movf	(_prec+1)& (0+255),w,b
  5327  002064  E106               	bnz	u2441
  5328  002066  0590               	decf	_prec& (0+255),w,b
  5329  002068  B0D8               	btfsc	status,0,c
  5330  00206A  EF39  F010         	goto	u2441
  5331  00206E  EF3B  F010         	goto	u2440
  5332  002072                     u2441:
  5333  002072  EF41  F010         	goto	l903
  5334  002076                     u2440:
  5335  002076                     
  5336                           ; BSR set to: 0
  5337  002076  0E00               	movlw	0
  5338  002078  6E2F               	movwf	(otoa@p+1)^0,c
  5339  00207A  0E01               	movlw	1
  5340  00207C  6E2E               	movwf	otoa@p^0,c
  5341  00207E  EF45  F010         	goto	l905
  5342  002082                     l903:
  5343                           
  5344                           ; BSR set to: 0
  5345  002082  C090  F02E         	movff	_prec,otoa@p
  5346  002086  C091  F02F         	movff	_prec+1,otoa@p+1
  5347  00208A                     l905:
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 539:     w = widt
      +                          h;
  5351  00208A  C08E  F032         	movff	_width,otoa@w
  5352  00208E  C08F  F033         	movff	_width+1,otoa@w+1
  5353                           
  5354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 542:     n = d;
  5355  002092  C01E  F034         	movff	otoa@d,otoa@n
  5356  002096  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5357  00209A  C020  F036         	movff	otoa@d+2,otoa@n+2
  5358  00209E  C021  F037         	movff	otoa@d+3,otoa@n+3
  5359  0020A2  C022  F038         	movff	otoa@d+4,otoa@n+4
  5360  0020A6  C023  F039         	movff	otoa@d+5,otoa@n+5
  5361  0020AA  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5362  0020AE  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5363  0020B2                     
  5364                           ; BSR set to: 0
  5365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 543:     i = size
      +                          of(dbuf) - 1;
  5366  0020B2  0E00               	movlw	0
  5367  0020B4  6E3D               	movwf	(otoa@i+1)^0,c
  5368  0020B6  0E1F               	movlw	31
  5369  0020B8  6E3C               	movwf	otoa@i^0,c
  5370  0020BA                     
  5371                           ; BSR set to: 0
  5372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 544:     dbuf[i] 
      +                          = '\0';
  5373  0020BA  0E00               	movlw	0
  5374  0020BC  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5375  0020BE                     
  5376                           ; BSR set to: 0
  5377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 545:     t = 0;
  5378  0020BE  0E00               	movlw	0
  5379  0020C0  6E31               	movwf	(otoa@t+1)^0,c
  5380  0020C2  0E00               	movlw	0
  5381  0020C4  6E30               	movwf	otoa@t^0,c
  5382                           
  5383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 546:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5384  0020C6  EFAA  F010         	goto	l2589
  5385  0020CA                     l2577:
  5386                           
  5387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 547:         --i;
  5388  0020CA  063C               	decf	otoa@i^0,f,c
  5389  0020CC  A0D8               	btfss	status,0,c
  5390  0020CE  063D               	decf	(otoa@i+1)^0,f,c
  5391  0020D0                     
  5392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 548:         t = 
      +                          n & 07;
  5393  0020D0  0E07               	movlw	7
  5394  0020D2  1434               	andwf	otoa@n^0,w,c
  5395  0020D4  6E30               	movwf	otoa@t^0,c
  5396  0020D6  6A31               	clrf	(otoa@t+1)^0,c
  5397  0020D8                     
  5398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 549:         dbuf
      +                          [i] = (char)((int)'0' + t);
  5399  0020D8  0E98               	movlw	low _dbuf
  5400  0020DA  243C               	addwf	otoa@i^0,w,c
  5401  0020DC  6ED9               	movwf	fsr2l,c
  5402  0020DE  0E00               	movlw	high _dbuf
  5403  0020E0  203D               	addwfc	(otoa@i+1)^0,w,c
  5404  0020E2  6EDA               	movwf	fsr2h,c
  5405  0020E4  5030               	movf	otoa@t^0,w,c
  5406  0020E6  0F30               	addlw	48
  5407  0020E8  6EDF               	movwf	indf2,c
  5408  0020EA                     
  5409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 550:         --p;
  5410  0020EA  062E               	decf	otoa@p^0,f,c
  5411  0020EC  A0D8               	btfss	status,0,c
  5412  0020EE  062F               	decf	(otoa@p+1)^0,f,c
  5413  0020F0                     
  5414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 551:         --w;
  5415  0020F0  0632               	decf	otoa@w^0,f,c
  5416  0020F2  A0D8               	btfss	status,0,c
  5417  0020F4  0633               	decf	(otoa@w+1)^0,f,c
  5418  0020F6                     
  5419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 552:         n = 
      +                          n >> 3;
  5420  0020F6  C034  F026         	movff	otoa@n,??_otoa
  5421  0020FA  C035  F027         	movff	otoa@n+1,??_otoa+1
  5422  0020FE  C036  F028         	movff	otoa@n+2,??_otoa+2
  5423  002102  C037  F029         	movff	otoa@n+3,??_otoa+3
  5424  002106  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5425  00210A  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5426  00210E  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5427  002112  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5428  002116  0E04               	movlw	4
  5429  002118  EF97  F010         	goto	u2450
  5430  00211C                     u2455:
  5431  00211C  90D8               	bcf	status,0,c
  5432  00211E  322D               	rrcf	(??_otoa+7)^0,f,c
  5433  002120  322C               	rrcf	(??_otoa+6)^0,f,c
  5434  002122  322B               	rrcf	(??_otoa+5)^0,f,c
  5435  002124  322A               	rrcf	(??_otoa+4)^0,f,c
  5436  002126  3229               	rrcf	(??_otoa+3)^0,f,c
  5437  002128  3228               	rrcf	(??_otoa+2)^0,f,c
  5438  00212A  3227               	rrcf	(??_otoa+1)^0,f,c
  5439  00212C  3226               	rrcf	??_otoa^0,f,c
  5440  00212E                     u2450:
  5441  00212E  2EE8               	decfsz	wreg,f,c
  5442  002130  EF8E  F010         	goto	u2455
  5443  002134  C026  F034         	movff	??_otoa,otoa@n
  5444  002138  C027  F035         	movff	??_otoa+1,otoa@n+1
  5445  00213C  C028  F036         	movff	??_otoa+2,otoa@n+2
  5446  002140  C029  F037         	movff	??_otoa+3,otoa@n+3
  5447  002144  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5448  002148  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5449  00214C  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5450  002150  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5451  002154                     l2589:
  5452                           
  5453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 546:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5454  002154  BE3D               	btfsc	(otoa@i+1)^0,7,c
  5455  002156  EFB5  F010         	goto	u2461
  5456  00215A  503D               	movf	(otoa@i+1)^0,w,c
  5457  00215C  E108               	bnz	u2460
  5458  00215E  043C               	decf	otoa@i^0,w,c
  5459  002160  A0D8               	btfss	status,0,c
  5460  002162  EFB5  F010         	goto	u2461
  5461  002166  EFB7  F010         	goto	u2460
  5462  00216A                     u2461:
  5463  00216A  EFE8  F010         	goto	l912
  5464  00216E                     u2460:
  5465  00216E  5034               	movf	otoa@n^0,w,c
  5466  002170  1035               	iorwf	(otoa@n+1)^0,w,c
  5467  002172  1036               	iorwf	(otoa@n+2)^0,w,c
  5468  002174  1037               	iorwf	(otoa@n+3)^0,w,c
  5469  002176  1038               	iorwf	(otoa@n+4)^0,w,c
  5470  002178  1039               	iorwf	(otoa@n+5)^0,w,c
  5471  00217A  103A               	iorwf	(otoa@n+6)^0,w,c
  5472  00217C  103B               	iorwf	(otoa@n+7)^0,w,c
  5473  00217E  A4D8               	btfss	status,2,c
  5474  002180  EFC4  F010         	goto	u2471
  5475  002184  EFC6  F010         	goto	u2470
  5476  002188                     u2471:
  5477  002188  EF65  F010         	goto	l2577
  5478  00218C                     u2470:
  5479  00218C  BE2F               	btfsc	(otoa@p+1)^0,7,c
  5480  00218E  EFD3  F010         	goto	u2480
  5481  002192  502F               	movf	(otoa@p+1)^0,w,c
  5482  002194  E106               	bnz	u2481
  5483  002196  042E               	decf	otoa@p^0,w,c
  5484  002198  B0D8               	btfsc	status,0,c
  5485  00219A  EFD1  F010         	goto	u2481
  5486  00219E  EFD3  F010         	goto	u2480
  5487  0021A2                     u2481:
  5488  0021A2  EF65  F010         	goto	l2577
  5489  0021A6                     u2480:
  5490  0021A6  BE33               	btfsc	(otoa@w+1)^0,7,c
  5491  0021A8  EFDE  F010         	goto	u2491
  5492  0021AC  5033               	movf	(otoa@w+1)^0,w,c
  5493  0021AE  E108               	bnz	u2490
  5494  0021B0  0432               	decf	otoa@w^0,w,c
  5495  0021B2  A0D8               	btfss	status,0,c
  5496  0021B4  EFDE  F010         	goto	u2491
  5497  0021B8  EFE0  F010         	goto	u2490
  5498  0021BC                     u2491:
  5499  0021BC  EFE8  F010         	goto	l912
  5500  0021C0                     u2490:
  5501  0021C0  0100               	movlb	0	; () banked
  5502  0021C2  B392               	btfsc	_flags& (0+255),1,b
  5503  0021C4  EFE6  F010         	goto	u2501
  5504  0021C8  EFE8  F010         	goto	u2500
  5505  0021CC                     u2501:
  5506  0021CC  EF65  F010         	goto	l2577
  5507  0021D0                     u2500:
  5508  0021D0                     l912:
  5509                           
  5510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 556:     if ((fla
      +                          gs & (1 << 4)) && t) {
  5511  0021D0  0100               	movlb	0	; () banked
  5512  0021D2  A992               	btfss	_flags& (0+255),4,b
  5513  0021D4  EFEE  F010         	goto	u2511
  5514  0021D8  EFF0  F010         	goto	u2510
  5515  0021DC                     u2511:
  5516  0021DC  EF07  F011         	goto	l2607
  5517  0021E0                     u2510:
  5518  0021E0                     
  5519                           ; BSR set to: 0
  5520  0021E0  5030               	movf	otoa@t^0,w,c
  5521  0021E2  1031               	iorwf	(otoa@t+1)^0,w,c
  5522  0021E4  B4D8               	btfsc	status,2,c
  5523  0021E6  EFF7  F010         	goto	u2521
  5524  0021EA  EFF9  F010         	goto	u2520
  5525  0021EE                     u2521:
  5526  0021EE  EF07  F011         	goto	l2607
  5527  0021F2                     u2520:
  5528  0021F2                     
  5529                           ; BSR set to: 0
  5530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 557:         --i;
  5531  0021F2  063C               	decf	otoa@i^0,f,c
  5532  0021F4  A0D8               	btfss	status,0,c
  5533  0021F6  063D               	decf	(otoa@i+1)^0,f,c
  5534  0021F8                     
  5535                           ; BSR set to: 0
  5536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 558:         dbuf
      +                          [i] = '0';
  5537  0021F8  0E98               	movlw	low _dbuf
  5538  0021FA  243C               	addwf	otoa@i^0,w,c
  5539  0021FC  6ED9               	movwf	fsr2l,c
  5540  0021FE  0E00               	movlw	high _dbuf
  5541  002200  203D               	addwfc	(otoa@i+1)^0,w,c
  5542  002202  6EDA               	movwf	fsr2h,c
  5543  002204  0E30               	movlw	48
  5544  002206  6EDF               	movwf	indf2,c
  5545  002208                     
  5546                           ; BSR set to: 0
  5547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 559:         --w;
  5548  002208  0632               	decf	otoa@w^0,f,c
  5549  00220A  A0D8               	btfss	status,0,c
  5550  00220C  0633               	decf	(otoa@w+1)^0,f,c
  5551  00220E                     l2607:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 563:     return p
      +                          ad(fp, &dbuf[i], w);
  5555  00220E  C01C  F011         	movff	otoa@fp,pad@fp
  5556  002212  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5557  002216  0E98               	movlw	low _dbuf
  5558  002218  243C               	addwf	otoa@i^0,w,c
  5559  00221A  6E13               	movwf	pad@buf^0,c
  5560  00221C  0E00               	movlw	high _dbuf
  5561  00221E  203D               	addwfc	(otoa@i+1)^0,w,c
  5562  002220  6E14               	movwf	(pad@buf+1)^0,c
  5563  002222  C032  F015         	movff	otoa@w,pad@p
  5564  002226  C033  F016         	movff	otoa@w+1,pad@p+1
  5565  00222A  EC45  F017         	call	_pad	;wreg free
  5566  00222E  C011  F01C         	movff	?_pad,?_otoa
  5567  002232  C012  F01D         	movff	?_pad+1,?_otoa+1
  5568  002236  0012               	return		;funcret
  5569  002238                     __end_of_otoa:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function _dtoa *****************
  5573 ;; Defined at:
  5574 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5577 ;;		 -> vsnprintf@f(6), 
  5578 ;;  d               8   29[COMRAM] long long 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  n               8   53[COMRAM] long long 
  5581 ;;  i               2   61[COMRAM] int 
  5582 ;;  s               2   51[COMRAM] int 
  5583 ;;  w               2   49[COMRAM] int 
  5584 ;;  p               2   47[COMRAM] int 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  2   27[COMRAM] int 
  5587 ;; Registers used:
  5588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5594 ;;      Params:        10       0       0       0       0       0       0
  5595 ;;      Locals:        18       0       0       0       0       0       0
  5596 ;;      Temps:          8       0       0       0       0       0       0
  5597 ;;      Totals:        36       0       0       0       0       0       0
  5598 ;;Total ram usage:       36 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    4
  5601 ;; This function calls:
  5602 ;;		___aodiv
  5603 ;;		___aomod
  5604 ;;		_abs
  5605 ;;		_pad
  5606 ;; This function is called by:
  5607 ;;		_vfpfcnvrt
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text16
  5612  00188E                     __ptext16:
  5613                           	callstack 0
  5614  00188E                     _dtoa:
  5615                           	callstack 22
  5616  00188E                     
  5617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5618  00188E  C01E  F036         	movff	dtoa@d,dtoa@n
  5619  001892  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5620  001896  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5621  00189A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5622  00189E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5623  0018A2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5624  0018A6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5625  0018AA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5626  0018AE                     
  5627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5628  0018AE  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5629  0018B0  EF5C  F00C         	goto	u2281
  5630  0018B4  EF5F  F00C         	goto	u2280
  5631  0018B8                     u2281:
  5632  0018B8  0E01               	movlw	1
  5633  0018BA  EF60  F00C         	goto	u2290
  5634  0018BE                     u2280:
  5635  0018BE  0E00               	movlw	0
  5636  0018C0                     u2290:
  5637  0018C0  6E34               	movwf	dtoa@s^0,c
  5638  0018C2  6A35               	clrf	(dtoa@s+1)^0,c
  5639                           
  5640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5641  0018C4  5034               	movf	dtoa@s^0,w,c
  5642  0018C6  1035               	iorwf	(dtoa@s+1)^0,w,c
  5643  0018C8  B4D8               	btfsc	status,2,c
  5644  0018CA  EF69  F00C         	goto	u2301
  5645  0018CE  EF6B  F00C         	goto	u2300
  5646  0018D2                     u2301:
  5647  0018D2  EF7B  F00C         	goto	l2507
  5648  0018D6                     u2300:
  5649  0018D6                     
  5650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5651  0018D6  1E3D               	comf	(dtoa@n+7)^0,f,c
  5652  0018D8  1E3C               	comf	(dtoa@n+6)^0,f,c
  5653  0018DA  1E3B               	comf	(dtoa@n+5)^0,f,c
  5654  0018DC  1E3A               	comf	(dtoa@n+4)^0,f,c
  5655  0018DE  1E39               	comf	(dtoa@n+3)^0,f,c
  5656  0018E0  1E38               	comf	(dtoa@n+2)^0,f,c
  5657  0018E2  1E37               	comf	(dtoa@n+1)^0,f,c
  5658  0018E4  6C36               	negf	dtoa@n^0,c
  5659  0018E6  0E00               	movlw	0
  5660  0018E8  2237               	addwfc	(dtoa@n+1)^0,f,c
  5661  0018EA  2238               	addwfc	(dtoa@n+2)^0,f,c
  5662  0018EC  2239               	addwfc	(dtoa@n+3)^0,f,c
  5663  0018EE  223A               	addwfc	(dtoa@n+4)^0,f,c
  5664  0018F0  223B               	addwfc	(dtoa@n+5)^0,f,c
  5665  0018F2  223C               	addwfc	(dtoa@n+6)^0,f,c
  5666  0018F4  223D               	addwfc	(dtoa@n+7)^0,f,c
  5667  0018F6                     l2507:
  5668                           
  5669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5670  0018F6  0100               	movlb	0	; () banked
  5671  0018F8  BF91               	btfsc	(_prec+1)& (0+255),7,b
  5672  0018FA  EF81  F00C         	goto	u2311
  5673  0018FE  EF83  F00C         	goto	u2310
  5674  001902                     u2311:
  5675  001902  EF84  F00C         	goto	l2511
  5676  001906                     u2310:
  5677  001906                     
  5678                           ; BSR set to: 0
  5679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5680  001906  9392               	bcf	_flags& (0+255),1,b
  5681  001908                     l2511:
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5685  001908  BF91               	btfsc	(_prec+1)& (0+255),7,b
  5686  00190A  EF91  F00C         	goto	u2320
  5687  00190E  5191               	movf	(_prec+1)& (0+255),w,b
  5688  001910  E106               	bnz	u2321
  5689  001912  0590               	decf	_prec& (0+255),w,b
  5690  001914  B0D8               	btfsc	status,0,c
  5691  001916  EF8F  F00C         	goto	u2321
  5692  00191A  EF91  F00C         	goto	u2320
  5693  00191E                     u2321:
  5694  00191E  EF97  F00C         	goto	l878
  5695  001922                     u2320:
  5696  001922                     
  5697                           ; BSR set to: 0
  5698  001922  0E00               	movlw	0
  5699  001924  6E31               	movwf	(dtoa@p+1)^0,c
  5700  001926  0E01               	movlw	1
  5701  001928  6E30               	movwf	dtoa@p^0,c
  5702  00192A  EF9B  F00C         	goto	l880
  5703  00192E                     l878:
  5704                           
  5705                           ; BSR set to: 0
  5706  00192E  C090  F030         	movff	_prec,dtoa@p
  5707  001932  C091  F031         	movff	_prec+1,dtoa@p+1
  5708  001936                     l880:
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5712  001936  C08E  F032         	movff	_width,dtoa@w
  5713  00193A  C08F  F033         	movff	_width+1,dtoa@w+1
  5714  00193E                     
  5715                           ; BSR set to: 0
  5716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5717  00193E  5034               	movf	dtoa@s^0,w,c
  5718  001940  1035               	iorwf	(dtoa@s+1)^0,w,c
  5719  001942  A4D8               	btfss	status,2,c
  5720  001944  EFA6  F00C         	goto	u2331
  5721  001948  EFA8  F00C         	goto	u2330
  5722  00194C                     u2331:
  5723  00194C  EFAF  F00C         	goto	l2519
  5724  001950                     u2330:
  5725  001950                     
  5726                           ; BSR set to: 0
  5727  001950  A592               	btfss	_flags& (0+255),2,b
  5728  001952  EFAD  F00C         	goto	u2341
  5729  001956  EFAF  F00C         	goto	u2340
  5730  00195A                     u2341:
  5731  00195A  EFB2  F00C         	goto	l2521
  5732  00195E                     u2340:
  5733  00195E                     l2519:
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  5737  00195E  0632               	decf	dtoa@w^0,f,c
  5738  001960  A0D8               	btfss	status,0,c
  5739  001962  0633               	decf	(dtoa@w+1)^0,f,c
  5740  001964                     l2521:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5744  001964  0E00               	movlw	0
  5745  001966  6E3F               	movwf	(dtoa@i+1)^0,c
  5746  001968  0E1F               	movlw	31
  5747  00196A  6E3E               	movwf	dtoa@i^0,c
  5748  00196C                     
  5749                           ; BSR set to: 0
  5750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5751  00196C  0E00               	movlw	0
  5752  00196E  6FB7               	movwf	(_dbuf+31)& (0+255),b
  5753                           
  5754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5755  001970  EF36  F00D         	goto	l2535
  5756  001974                     l2525:
  5757                           
  5758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  5759  001974  063E               	decf	dtoa@i^0,f,c
  5760  001976  A0D8               	btfss	status,0,c
  5761  001978  063F               	decf	(dtoa@i+1)^0,f,c
  5762  00197A                     
  5763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5764  00197A  0E98               	movlw	low _dbuf
  5765  00197C  243E               	addwf	dtoa@i^0,w,c
  5766  00197E  6ED9               	movwf	fsr2l,c
  5767  001980  0E00               	movlw	high _dbuf
  5768  001982  203F               	addwfc	(dtoa@i+1)^0,w,c
  5769  001984  6EDA               	movwf	fsr2h,c
  5770  001986  C036  F001         	movff	dtoa@n,___aomod@dividend
  5771  00198A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5772  00198E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5773  001992  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5774  001996  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5775  00199A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5776  00199E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5777  0019A2  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5778  0019A6  0E0A               	movlw	10
  5779  0019A8  6E09               	movwf	___aomod@divisor^0,c
  5780  0019AA  0E00               	movlw	0
  5781  0019AC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5782  0019AE  0E00               	movlw	0
  5783  0019B0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5784  0019B2  0E00               	movlw	0
  5785  0019B4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5786  0019B6  0E00               	movlw	0
  5787  0019B8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5788  0019BA  0E00               	movlw	0
  5789  0019BC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5790  0019BE  0E00               	movlw	0
  5791  0019C0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5792  0019C2  0E00               	movlw	0
  5793  0019C4  6E10               	movwf	(___aomod@divisor+7)^0,c
  5794  0019C6  EC6B  F013         	call	___aomod	;wreg free
  5795  0019CA  C001  F026         	movff	?___aomod,??_dtoa
  5796  0019CE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5797  0019D2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5798  0019D6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5799  0019DA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5800  0019DE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5801  0019E2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5802  0019E6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5803  0019EA  C026  F013         	movff	??_dtoa,abs@a
  5804  0019EE  C028  F014         	movff	??_dtoa+2,abs@a+1
  5805  0019F2  ECAB  F018         	call	_abs	;wreg free
  5806  0019F6  5013               	movf	?_abs^0,w,c
  5807  0019F8  0F30               	addlw	48
  5808  0019FA  6EDF               	movwf	indf2,c
  5809  0019FC                     
  5810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  5811  0019FC  0630               	decf	dtoa@p^0,f,c
  5812  0019FE  A0D8               	btfss	status,0,c
  5813  001A00  0631               	decf	(dtoa@p+1)^0,f,c
  5814  001A02                     
  5815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  5816  001A02  0632               	decf	dtoa@w^0,f,c
  5817  001A04  A0D8               	btfss	status,0,c
  5818  001A06  0633               	decf	(dtoa@w+1)^0,f,c
  5819  001A08                     
  5820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5821  001A08  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5822  001A0C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5823  001A10  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5824  001A14  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5825  001A18  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5826  001A1C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5827  001A20  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5828  001A24  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5829  001A28  0E0A               	movlw	10
  5830  001A2A  6E09               	movwf	___aodiv@divisor^0,c
  5831  001A2C  0E00               	movlw	0
  5832  001A2E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5833  001A30  0E00               	movlw	0
  5834  001A32  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5835  001A34  0E00               	movlw	0
  5836  001A36  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5837  001A38  0E00               	movlw	0
  5838  001A3A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5839  001A3C  0E00               	movlw	0
  5840  001A3E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5841  001A40  0E00               	movlw	0
  5842  001A42  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5843  001A44  0E00               	movlw	0
  5844  001A46  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5845  001A48  ECE4  F011         	call	___aodiv	;wreg free
  5846  001A4C  C001  F036         	movff	?___aodiv,dtoa@n
  5847  001A50  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5848  001A54  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5849  001A58  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5850  001A5C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5851  001A60  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5852  001A64  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5853  001A68  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5854  001A6C                     l2535:
  5855                           
  5856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5857  001A6C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5858  001A6E  EF41  F00D         	goto	u2351
  5859  001A72  503F               	movf	(dtoa@i+1)^0,w,c
  5860  001A74  E108               	bnz	u2350
  5861  001A76  043E               	decf	dtoa@i^0,w,c
  5862  001A78  A0D8               	btfss	status,0,c
  5863  001A7A  EF41  F00D         	goto	u2351
  5864  001A7E  EF43  F00D         	goto	u2350
  5865  001A82                     u2351:
  5866  001A82  EF74  F00D         	goto	l2545
  5867  001A86                     u2350:
  5868  001A86  5036               	movf	dtoa@n^0,w,c
  5869  001A88  1037               	iorwf	(dtoa@n+1)^0,w,c
  5870  001A8A  1038               	iorwf	(dtoa@n+2)^0,w,c
  5871  001A8C  1039               	iorwf	(dtoa@n+3)^0,w,c
  5872  001A8E  103A               	iorwf	(dtoa@n+4)^0,w,c
  5873  001A90  103B               	iorwf	(dtoa@n+5)^0,w,c
  5874  001A92  103C               	iorwf	(dtoa@n+6)^0,w,c
  5875  001A94  103D               	iorwf	(dtoa@n+7)^0,w,c
  5876  001A96  A4D8               	btfss	status,2,c
  5877  001A98  EF50  F00D         	goto	u2361
  5878  001A9C  EF52  F00D         	goto	u2360
  5879  001AA0                     u2361:
  5880  001AA0  EFBA  F00C         	goto	l2525
  5881  001AA4                     u2360:
  5882  001AA4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5883  001AA6  EF5F  F00D         	goto	u2370
  5884  001AAA  5031               	movf	(dtoa@p+1)^0,w,c
  5885  001AAC  E106               	bnz	u2371
  5886  001AAE  0430               	decf	dtoa@p^0,w,c
  5887  001AB0  B0D8               	btfsc	status,0,c
  5888  001AB2  EF5D  F00D         	goto	u2371
  5889  001AB6  EF5F  F00D         	goto	u2370
  5890  001ABA                     u2371:
  5891  001ABA  EFBA  F00C         	goto	l2525
  5892  001ABE                     u2370:
  5893  001ABE  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5894  001AC0  EF6A  F00D         	goto	u2381
  5895  001AC4  5033               	movf	(dtoa@w+1)^0,w,c
  5896  001AC6  E108               	bnz	u2380
  5897  001AC8  0432               	decf	dtoa@w^0,w,c
  5898  001ACA  A0D8               	btfss	status,0,c
  5899  001ACC  EF6A  F00D         	goto	u2381
  5900  001AD0  EF6C  F00D         	goto	u2380
  5901  001AD4                     u2381:
  5902  001AD4  EF74  F00D         	goto	l2545
  5903  001AD8                     u2380:
  5904  001AD8  0100               	movlb	0	; () banked
  5905  001ADA  B392               	btfsc	_flags& (0+255),1,b
  5906  001ADC  EF72  F00D         	goto	u2391
  5907  001AE0  EF74  F00D         	goto	u2390
  5908  001AE4                     u2391:
  5909  001AE4  EFBA  F00C         	goto	l2525
  5910  001AE8                     u2390:
  5911  001AE8                     l2545:
  5912                           
  5913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5914  001AE8  5034               	movf	dtoa@s^0,w,c
  5915  001AEA  1035               	iorwf	(dtoa@s+1)^0,w,c
  5916  001AEC  A4D8               	btfss	status,2,c
  5917  001AEE  EF7B  F00D         	goto	u2401
  5918  001AF2  EF7D  F00D         	goto	u2400
  5919  001AF6                     u2401:
  5920  001AF6  EF85  F00D         	goto	l2549
  5921  001AFA                     u2400:
  5922  001AFA  0100               	movlb	0	; () banked
  5923  001AFC  A592               	btfss	_flags& (0+255),2,b
  5924  001AFE  EF83  F00D         	goto	u2411
  5925  001B02  EF85  F00D         	goto	u2410
  5926  001B06                     u2411:
  5927  001B06  EFA3  F00D         	goto	l2559
  5928  001B0A                     u2410:
  5929  001B0A                     l2549:
  5930                           
  5931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  5932  001B0A  063E               	decf	dtoa@i^0,f,c
  5933  001B0C  A0D8               	btfss	status,0,c
  5934  001B0E  063F               	decf	(dtoa@i+1)^0,f,c
  5935  001B10                     
  5936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5937  001B10  5034               	movf	dtoa@s^0,w,c
  5938  001B12  1035               	iorwf	(dtoa@s+1)^0,w,c
  5939  001B14  A4D8               	btfss	status,2,c
  5940  001B16  EF8F  F00D         	goto	u2421
  5941  001B1A  EF91  F00D         	goto	u2420
  5942  001B1E                     u2421:
  5943  001B1E  EF97  F00D         	goto	l2555
  5944  001B22                     u2420:
  5945  001B22  0E00               	movlw	0
  5946  001B24  6E2F               	movwf	(_dtoa$1094+1)^0,c
  5947  001B26  0E2B               	movlw	43
  5948  001B28  6E2E               	movwf	_dtoa$1094^0,c
  5949  001B2A  EF9B  F00D         	goto	l2557
  5950  001B2E                     l2555:
  5951  001B2E  0E00               	movlw	0
  5952  001B30  6E2F               	movwf	(_dtoa$1094+1)^0,c
  5953  001B32  0E2D               	movlw	45
  5954  001B34  6E2E               	movwf	_dtoa$1094^0,c
  5955  001B36                     l2557:
  5956  001B36  0E98               	movlw	low _dbuf
  5957  001B38  243E               	addwf	dtoa@i^0,w,c
  5958  001B3A  6ED9               	movwf	fsr2l,c
  5959  001B3C  0E00               	movlw	high _dbuf
  5960  001B3E  203F               	addwfc	(dtoa@i+1)^0,w,c
  5961  001B40  6EDA               	movwf	fsr2h,c
  5962  001B42  C02E  FFDF         	movff	_dtoa$1094,indf2
  5963  001B46                     l2559:
  5964                           
  5965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5966  001B46  C01C  F011         	movff	dtoa@fp,pad@fp
  5967  001B4A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5968  001B4E  0E98               	movlw	low _dbuf
  5969  001B50  243E               	addwf	dtoa@i^0,w,c
  5970  001B52  6E13               	movwf	pad@buf^0,c
  5971  001B54  0E00               	movlw	high _dbuf
  5972  001B56  203F               	addwfc	(dtoa@i+1)^0,w,c
  5973  001B58  6E14               	movwf	(pad@buf+1)^0,c
  5974  001B5A  C032  F015         	movff	dtoa@w,pad@p
  5975  001B5E  C033  F016         	movff	dtoa@w+1,pad@p+1
  5976  001B62  EC45  F017         	call	_pad	;wreg free
  5977  001B66  C011  F01C         	movff	?_pad,?_dtoa
  5978  001B6A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5979  001B6E  0012               	return		;funcret
  5980  001B70                     __end_of_dtoa:
  5981                           	callstack 0
  5982                           
  5983 ;; *************** function _pad *****************
  5984 ;; Defined at:
  5985 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5988 ;;		 -> vsnprintf@f(6), 
  5989 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5990 ;;		 -> dbuf(32), 
  5991 ;;  p               2   20[COMRAM] int 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  w               2   25[COMRAM] int 
  5994 ;;  i               2   23[COMRAM] int 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  2   16[COMRAM] int 
  5997 ;; Registers used:
  5998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6004 ;;      Params:         6       0       0       0       0       0       0
  6005 ;;      Locals:         4       0       0       0       0       0       0
  6006 ;;      Temps:          1       0       0       0       0       0       0
  6007 ;;      Totals:        11       0       0       0       0       0       0
  6008 ;;Total ram usage:       11 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    3
  6011 ;; This function calls:
  6012 ;;		_fputc
  6013 ;;		_fputs
  6014 ;;		_strlen
  6015 ;; This function is called by:
  6016 ;;		_dtoa
  6017 ;;		_otoa
  6018 ;;		_utoa
  6019 ;;		_xtoa
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text17
  6024  002E8A                     __ptext17:
  6025                           	callstack 0
  6026  002E8A                     _pad:
  6027                           	callstack 22
  6028  002E8A                     
  6029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6030  002E8A  0100               	movlb	0	; () banked
  6031  002E8C  A192               	btfss	_flags& (0+255),0,b
  6032  002E8E  EF4B  F017         	goto	u2071
  6033  002E92  EF4D  F017         	goto	u2070
  6034  002E96                     u2071:
  6035  002E96  EF57  F017         	goto	l2417
  6036  002E9A                     u2070:
  6037  002E9A                     
  6038                           ; BSR set to: 0
  6039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6040  002E9A  C013  F00A         	movff	pad@buf,fputs@s
  6041  002E9E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6042  002EA2  C011  F00C         	movff	pad@fp,fputs@fp
  6043  002EA6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6044  002EAA  EC89  F018         	call	_fputs	;wreg free
  6045  002EAE                     l2417:
  6046                           
  6047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6048  002EAE  BE16               	btfsc	(pad@p+1)^0,7,c
  6049  002EB0  EF5C  F017         	goto	u2081
  6050  002EB4  EF5E  F017         	goto	u2080
  6051  002EB8                     u2081:
  6052  002EB8  EF64  F017         	goto	l2421
  6053  002EBC                     u2080:
  6054  002EBC  C015  F01A         	movff	pad@p,pad@w
  6055  002EC0  C016  F01B         	movff	pad@p+1,pad@w+1
  6056  002EC4  EF68  F017         	goto	l851
  6057  002EC8                     l2421:
  6058  002EC8  0E00               	movlw	0
  6059  002ECA  6E1B               	movwf	(pad@w+1)^0,c
  6060  002ECC  0E00               	movlw	0
  6061  002ECE  6E1A               	movwf	pad@w^0,c
  6062  002ED0                     l851:
  6063                           
  6064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6065  002ED0  0E00               	movlw	0
  6066  002ED2  6E19               	movwf	(pad@i+1)^0,c
  6067  002ED4  0E00               	movlw	0
  6068  002ED6  6E18               	movwf	pad@i^0,c
  6069                           
  6070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6071  002ED8  EF7A  F017         	goto	l2427
  6072  002EDC                     l2423:
  6073                           
  6074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6075  002EDC  0E00               	movlw	0
  6076  002EDE  6E02               	movwf	(fputc@c+1)^0,c
  6077  002EE0  0E20               	movlw	32
  6078  002EE2  6E01               	movwf	fputc@c^0,c
  6079  002EE4  C011  F003         	movff	pad@fp,fputc@fp
  6080  002EE8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6081  002EEC  ECE0  F016         	call	_fputc	;wreg free
  6082  002EF0                     
  6083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6084  002EF0  4A18               	infsnz	pad@i^0,f,c
  6085  002EF2  2A19               	incf	(pad@i+1)^0,f,c
  6086  002EF4                     l2427:
  6087                           
  6088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6089  002EF4  501A               	movf	pad@w^0,w,c
  6090  002EF6  5C18               	subwf	pad@i^0,w,c
  6091  002EF8  5019               	movf	(pad@i+1)^0,w,c
  6092  002EFA  0A80               	xorlw	128
  6093  002EFC  6E17               	movwf	??_pad^0,c
  6094  002EFE  501B               	movf	(pad@w+1)^0,w,c
  6095  002F00  0A80               	xorlw	128
  6096  002F02  5817               	subwfb	??_pad^0,w,c
  6097  002F04  A0D8               	btfss	status,0,c
  6098  002F06  EF87  F017         	goto	u2091
  6099  002F0A  EF89  F017         	goto	u2090
  6100  002F0E                     u2091:
  6101  002F0E  EF6E  F017         	goto	l2423
  6102  002F12                     u2090:
  6103  002F12                     
  6104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6105  002F12  0100               	movlb	0	; () banked
  6106  002F14  B192               	btfsc	_flags& (0+255),0,b
  6107  002F16  EF8F  F017         	goto	u2101
  6108  002F1A  EF91  F017         	goto	u2100
  6109  002F1E                     u2101:
  6110  002F1E  EF9B  F017         	goto	l2431
  6111  002F22                     u2100:
  6112  002F22                     
  6113                           ; BSR set to: 0
  6114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6115  002F22  C013  F00A         	movff	pad@buf,fputs@s
  6116  002F26  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6117  002F2A  C011  F00C         	movff	pad@fp,fputs@fp
  6118  002F2E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6119  002F32  EC89  F018         	call	_fputs	;wreg free
  6120  002F36                     l2431:
  6121                           
  6122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6123  002F36  C013  F001         	movff	pad@buf,strlen@s
  6124  002F3A  C014  F002         	movff	pad@buf+1,strlen@s+1
  6125  002F3E  EC58  F019         	call	_strlen	;wreg free
  6126  002F42  501A               	movf	pad@w^0,w,c
  6127  002F44  2401               	addwf	?_strlen^0,w,c
  6128  002F46  6E11               	movwf	?_pad^0,c
  6129  002F48  501B               	movf	(pad@w+1)^0,w,c
  6130  002F4A  2002               	addwfc	(?_strlen+1)^0,w,c
  6131  002F4C  6E12               	movwf	(?_pad+1)^0,c
  6132  002F4E  0012               	return		;funcret
  6133  002F50                     __end_of_pad:
  6134                           	callstack 0
  6135                           
  6136 ;; *************** function _strlen *****************
  6137 ;; Defined at:
  6138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6141 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6144 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  2    0[COMRAM] unsigned int 
  6147 ;; Registers used:
  6148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6154 ;;      Params:         2       0       0       0       0       0       0
  6155 ;;      Locals:         2       0       0       0       0       0       0
  6156 ;;      Temps:          0       0       0       0       0       0       0
  6157 ;;      Totals:         4       0       0       0       0       0       0
  6158 ;;Total ram usage:        4 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_pad
  6164 ;;		_stoa
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text18
  6169  0032B0                     __ptext18:
  6170                           	callstack 0
  6171  0032B0                     _strlen:
  6172                           	callstack 24
  6173  0032B0  C001  F003         	movff	strlen@s,strlen@a
  6174  0032B4  C002  F004         	movff	strlen@s+1,strlen@a+1
  6175  0032B8  EF60  F019         	goto	l2279
  6176  0032BC                     l2277:
  6177  0032BC  4A01               	infsnz	strlen@s^0,f,c
  6178  0032BE  2A02               	incf	(strlen@s+1)^0,f,c
  6179  0032C0                     l2279:
  6180  0032C0  C001  FFD9         	movff	strlen@s,fsr2l
  6181  0032C4  C002  FFDA         	movff	strlen@s+1,fsr2h
  6182  0032C8  50DF               	movf	indf2,w,c
  6183  0032CA  A4D8               	btfss	status,2,c
  6184  0032CC  EF6A  F019         	goto	u1841
  6185  0032D0  EF6C  F019         	goto	u1840
  6186  0032D4                     u1841:
  6187  0032D4  EF5E  F019         	goto	l2277
  6188  0032D8                     u1840:
  6189  0032D8  5003               	movf	strlen@a^0,w,c
  6190  0032DA  5C01               	subwf	strlen@s^0,w,c
  6191  0032DC  6E01               	movwf	?_strlen^0,c
  6192  0032DE  5004               	movf	(strlen@a+1)^0,w,c
  6193  0032E0  5802               	subwfb	(strlen@s+1)^0,w,c
  6194  0032E2  6E02               	movwf	(?_strlen+1)^0,c
  6195  0032E4  0012               	return		;funcret
  6196  0032E6                     __end_of_strlen:
  6197                           	callstack 0
  6198                           
  6199 ;; *************** function _fputs *****************
  6200 ;; Defined at:
  6201 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6204 ;;		 -> dbuf(32), 
  6205 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6206 ;;		 -> vsnprintf@f(6), 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;  i               2   14[COMRAM] int 
  6209 ;;  c               1   13[COMRAM] unsigned char 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  2    9[COMRAM] int 
  6212 ;; Registers used:
  6213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6219 ;;      Params:         4       0       0       0       0       0       0
  6220 ;;      Locals:         3       0       0       0       0       0       0
  6221 ;;      Temps:          0       0       0       0       0       0       0
  6222 ;;      Totals:         7       0       0       0       0       0       0
  6223 ;;Total ram usage:        7 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    2
  6226 ;; This function calls:
  6227 ;;		_fputc
  6228 ;; This function is called by:
  6229 ;;		_pad
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text19
  6234  003112                     __ptext19:
  6235                           	callstack 0
  6236  003112                     _fputs:
  6237                           	callstack 22
  6238  003112  0E00               	movlw	0
  6239  003114  6E10               	movwf	(fputs@i+1)^0,c
  6240  003116  0E00               	movlw	0
  6241  003118  6E0F               	movwf	fputs@i^0,c
  6242  00311A  EF9A  F018         	goto	l2273
  6243  00311E                     l2269:
  6244  00311E  C00E  F001         	movff	fputs@c,fputc@c
  6245  003122  6A02               	clrf	(fputc@c+1)^0,c
  6246  003124  C00C  F003         	movff	fputs@fp,fputc@fp
  6247  003128  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6248  00312C  ECE0  F016         	call	_fputc	;wreg free
  6249  003130  4A0F               	infsnz	fputs@i^0,f,c
  6250  003132  2A10               	incf	(fputs@i+1)^0,f,c
  6251  003134                     l2273:
  6252  003134  500F               	movf	fputs@i^0,w,c
  6253  003136  240A               	addwf	fputs@s^0,w,c
  6254  003138  6ED9               	movwf	fsr2l,c
  6255  00313A  5010               	movf	(fputs@i+1)^0,w,c
  6256  00313C  200B               	addwfc	(fputs@s+1)^0,w,c
  6257  00313E  6EDA               	movwf	fsr2h,c
  6258  003140  50DF               	movf	indf2,w,c
  6259  003142  6E0E               	movwf	fputs@c^0,c
  6260  003144  500E               	movf	fputs@c^0,w,c
  6261  003146  A4D8               	btfss	status,2,c
  6262  003148  EFA8  F018         	goto	u1831
  6263  00314C  EFAA  F018         	goto	u1830
  6264  003150                     u1831:
  6265  003150  EF8F  F018         	goto	l2269
  6266  003154                     u1830:
  6267  003154  0012               	return		;funcret
  6268  003156                     __end_of_fputs:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function _abs *****************
  6272 ;; Defined at:
  6273 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  a               2   18[COMRAM] int 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  2   18[COMRAM] int 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6287 ;;      Params:         2       0       0       0       0       0       0
  6288 ;;      Locals:         0       0       0       0       0       0       0
  6289 ;;      Temps:          2       0       0       0       0       0       0
  6290 ;;      Totals:         4       0       0       0       0       0       0
  6291 ;;Total ram usage:        4 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_dtoa
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text20
  6301  003156                     __ptext20:
  6302                           	callstack 0
  6303  003156                     _abs:
  6304                           	callstack 25
  6305  003156  BE14               	btfsc	(abs@a+1)^0,7,c
  6306  003158  EFB8  F018         	goto	u2110
  6307  00315C  5014               	movf	(abs@a+1)^0,w,c
  6308  00315E  E106               	bnz	u2111
  6309  003160  0413               	decf	abs@a^0,w,c
  6310  003162  B0D8               	btfsc	status,0,c
  6311  003164  EFB6  F018         	goto	u2111
  6312  003168  EFB8  F018         	goto	u2110
  6313  00316C                     u2111:
  6314  00316C  EFC6  F018         	goto	l1068
  6315  003170                     u2110:
  6316  003170  C013  F015         	movff	abs@a,??_abs
  6317  003174  C014  F016         	movff	abs@a+1,??_abs+1
  6318  003178  1E15               	comf	??_abs^0,f,c
  6319  00317A  1E16               	comf	(??_abs+1)^0,f,c
  6320  00317C  4A15               	infsnz	??_abs^0,f,c
  6321  00317E  2A16               	incf	(??_abs+1)^0,f,c
  6322  003180  C015  F013         	movff	??_abs,?_abs
  6323  003184  C016  F014         	movff	??_abs+1,?_abs+1
  6324  003188  EFCA  F018         	goto	l1071
  6325  00318C                     l1068:
  6326  00318C  C013  F013         	movff	abs@a,?_abs
  6327  003190  C014  F014         	movff	abs@a+1,?_abs+1
  6328  003194                     l1071:
  6329  003194  0012               	return		;funcret
  6330  003196                     __end_of_abs:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function ___aomod *****************
  6334 ;; Defined at:
  6335 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  dividend        8    0[COMRAM] long long 
  6338 ;;  divisor         8    8[COMRAM] long long 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  sign            1   17[COMRAM] unsigned char 
  6341 ;;  counter         1   16[COMRAM] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  8    0[COMRAM] long long 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6351 ;;      Params:        16       0       0       0       0       0       0
  6352 ;;      Locals:         2       0       0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0
  6354 ;;      Totals:        18       0       0       0       0       0       0
  6355 ;;Total ram usage:       18 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_dtoa
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text21
  6365  0026D6                     __ptext21:
  6366                           	callstack 0
  6367  0026D6                     ___aomod:
  6368                           	callstack 25
  6369  0026D6  0E00               	movlw	0
  6370  0026D8  6E12               	movwf	___aomod@sign^0,c
  6371  0026DA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6372  0026DC  EF74  F013         	goto	u1940
  6373  0026E0  EF72  F013         	goto	u1941
  6374  0026E4                     u1941:
  6375  0026E4  EF86  F013         	goto	l2347
  6376  0026E8                     u1940:
  6377  0026E8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6378  0026EA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6379  0026EC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6380  0026EE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6381  0026F0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6382  0026F2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6383  0026F4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6384  0026F6  6C01               	negf	___aomod@dividend^0,c
  6385  0026F8  0E00               	movlw	0
  6386  0026FA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6387  0026FC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6388  0026FE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6389  002700  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6390  002702  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6391  002704  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6392  002706  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6393  002708  0E01               	movlw	1
  6394  00270A  6E12               	movwf	___aomod@sign^0,c
  6395  00270C                     l2347:
  6396  00270C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6397  00270E  EF8D  F013         	goto	u1950
  6398  002712  EF8B  F013         	goto	u1951
  6399  002716                     u1951:
  6400  002716  EF9D  F013         	goto	l2351
  6401  00271A                     u1950:
  6402  00271A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6403  00271C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6404  00271E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6405  002720  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6406  002722  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6407  002724  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6408  002726  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6409  002728  6C09               	negf	___aomod@divisor^0,c
  6410  00272A  0E00               	movlw	0
  6411  00272C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6412  00272E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6413  002730  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6414  002732  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6415  002734  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6416  002736  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6417  002738  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6418  00273A                     l2351:
  6419  00273A  5009               	movf	___aomod@divisor^0,w,c
  6420  00273C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6421  00273E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6422  002740  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6423  002742  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6424  002744  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6425  002746  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6426  002748  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6427  00274A  B4D8               	btfsc	status,2,c
  6428  00274C  EFAA  F013         	goto	u1961
  6429  002750  EFAC  F013         	goto	u1960
  6430  002754                     u1961:
  6431  002754  EFF4  F013         	goto	l2367
  6432  002758                     u1960:
  6433  002758  0E01               	movlw	1
  6434  00275A  6E11               	movwf	___aomod@counter^0,c
  6435  00275C  EFBA  F013         	goto	l2357
  6436  002760                     l2355:
  6437  002760  90D8               	bcf	status,0,c
  6438  002762  3609               	rlcf	___aomod@divisor^0,f,c
  6439  002764  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6440  002766  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6441  002768  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6442  00276A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6443  00276C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6444  00276E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6445  002770  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6446  002772  2A11               	incf	___aomod@counter^0,f,c
  6447  002774                     l2357:
  6448  002774  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6449  002776  EFBF  F013         	goto	u1971
  6450  00277A  EFC1  F013         	goto	u1970
  6451  00277E                     u1971:
  6452  00277E  EFB0  F013         	goto	l2355
  6453  002782                     u1970:
  6454  002782                     l2359:
  6455  002782  5009               	movf	___aomod@divisor^0,w,c
  6456  002784  5C01               	subwf	___aomod@dividend^0,w,c
  6457  002786  500A               	movf	(___aomod@divisor+1)^0,w,c
  6458  002788  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6459  00278A  500B               	movf	(___aomod@divisor+2)^0,w,c
  6460  00278C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6461  00278E  500C               	movf	(___aomod@divisor+3)^0,w,c
  6462  002790  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6463  002792  500D               	movf	(___aomod@divisor+4)^0,w,c
  6464  002794  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6465  002796  500E               	movf	(___aomod@divisor+5)^0,w,c
  6466  002798  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6467  00279A  500F               	movf	(___aomod@divisor+6)^0,w,c
  6468  00279C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6469  00279E  5010               	movf	(___aomod@divisor+7)^0,w,c
  6470  0027A0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6471  0027A2  A0D8               	btfss	status,0,c
  6472  0027A4  EFD6  F013         	goto	u1981
  6473  0027A8  EFD8  F013         	goto	u1980
  6474  0027AC                     u1981:
  6475  0027AC  EFE8  F013         	goto	l2363
  6476  0027B0                     u1980:
  6477  0027B0  5009               	movf	___aomod@divisor^0,w,c
  6478  0027B2  5E01               	subwf	___aomod@dividend^0,f,c
  6479  0027B4  500A               	movf	(___aomod@divisor+1)^0,w,c
  6480  0027B6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6481  0027B8  500B               	movf	(___aomod@divisor+2)^0,w,c
  6482  0027BA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6483  0027BC  500C               	movf	(___aomod@divisor+3)^0,w,c
  6484  0027BE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6485  0027C0  500D               	movf	(___aomod@divisor+4)^0,w,c
  6486  0027C2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6487  0027C4  500E               	movf	(___aomod@divisor+5)^0,w,c
  6488  0027C6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6489  0027C8  500F               	movf	(___aomod@divisor+6)^0,w,c
  6490  0027CA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6491  0027CC  5010               	movf	(___aomod@divisor+7)^0,w,c
  6492  0027CE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6493  0027D0                     l2363:
  6494  0027D0  90D8               	bcf	status,0,c
  6495  0027D2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6496  0027D4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6497  0027D6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6498  0027D8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6499  0027DA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6500  0027DC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6501  0027DE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6502  0027E0  3209               	rrcf	___aomod@divisor^0,f,c
  6503  0027E2  2E11               	decfsz	___aomod@counter^0,f,c
  6504  0027E4  EFC1  F013         	goto	l2359
  6505  0027E8                     l2367:
  6506  0027E8  5012               	movf	___aomod@sign^0,w,c
  6507  0027EA  B4D8               	btfsc	status,2,c
  6508  0027EC  EFFA  F013         	goto	u1991
  6509  0027F0  EFFC  F013         	goto	u1990
  6510  0027F4                     u1991:
  6511  0027F4  EF0C  F014         	goto	l2371
  6512  0027F8                     u1990:
  6513  0027F8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6514  0027FA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6515  0027FC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6516  0027FE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6517  002800  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6518  002802  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6519  002804  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6520  002806  6C01               	negf	___aomod@dividend^0,c
  6521  002808  0E00               	movlw	0
  6522  00280A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6523  00280C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6524  00280E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6525  002810  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6526  002812  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6527  002814  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6528  002816  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6529  002818                     l2371:
  6530  002818  C001  F001         	movff	___aomod@dividend,?___aomod
  6531  00281C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6532  002820  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6533  002824  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6534  002828  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6535  00282C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6536  002830  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6537  002834  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6538  002838  0012               	return		;funcret
  6539  00283A                     __end_of___aomod:
  6540                           	callstack 0
  6541                           
  6542 ;; *************** function ___aodiv *****************
  6543 ;; Defined at:
  6544 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  dividend        8    0[COMRAM] long long 
  6547 ;;  divisor         8    8[COMRAM] long long 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  quotient        8   18[COMRAM] long long 
  6550 ;;  sign            1   17[COMRAM] unsigned char 
  6551 ;;  counter         1   16[COMRAM] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  8    0[COMRAM] long long 
  6554 ;; Registers used:
  6555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6561 ;;      Params:        16       0       0       0       0       0       0
  6562 ;;      Locals:        10       0       0       0       0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0
  6564 ;;      Totals:        26       0       0       0       0       0       0
  6565 ;;Total ram usage:       26 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_dtoa
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text22
  6575  0023C8                     __ptext22:
  6576                           	callstack 0
  6577  0023C8                     ___aodiv:
  6578                           	callstack 25
  6579  0023C8  0E00               	movlw	0
  6580  0023CA  6E12               	movwf	___aodiv@sign^0,c
  6581  0023CC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6582  0023CE  EFED  F011         	goto	u1870
  6583  0023D2  EFEB  F011         	goto	u1871
  6584  0023D6                     u1871:
  6585  0023D6  EFFF  F011         	goto	l2303
  6586  0023DA                     u1870:
  6587  0023DA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6588  0023DC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6589  0023DE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6590  0023E0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6591  0023E2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6592  0023E4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6593  0023E6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6594  0023E8  6C09               	negf	___aodiv@divisor^0,c
  6595  0023EA  0E00               	movlw	0
  6596  0023EC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6597  0023EE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6598  0023F0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6599  0023F2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6600  0023F4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6601  0023F6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6602  0023F8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6603  0023FA  0E01               	movlw	1
  6604  0023FC  6E12               	movwf	___aodiv@sign^0,c
  6605  0023FE                     l2303:
  6606  0023FE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6607  002400  EF06  F012         	goto	u1880
  6608  002404  EF04  F012         	goto	u1881
  6609  002408                     u1881:
  6610  002408  EF18  F012         	goto	l2309
  6611  00240C                     u1880:
  6612  00240C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6613  00240E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6614  002410  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6615  002412  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6616  002414  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6617  002416  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6618  002418  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6619  00241A  6C01               	negf	___aodiv@dividend^0,c
  6620  00241C  0E00               	movlw	0
  6621  00241E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6622  002420  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6623  002422  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6624  002424  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6625  002426  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6626  002428  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6627  00242A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6628  00242C  0E01               	movlw	1
  6629  00242E  1A12               	xorwf	___aodiv@sign^0,f,c
  6630  002430                     l2309:
  6631  002430  EE20  F013         	lfsr	2,___aodiv@quotient
  6632  002434  0E07               	movlw	7
  6633  002436                     u1891:
  6634  002436  6ADE               	clrf	postinc2,c
  6635  002438  06E8               	decf	wreg,f,c
  6636  00243A  E2FD               	bc	u1891
  6637  00243C  5009               	movf	___aodiv@divisor^0,w,c
  6638  00243E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6639  002440  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6640  002442  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6641  002444  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6642  002446  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6643  002448  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6644  00244A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6645  00244C  B4D8               	btfsc	status,2,c
  6646  00244E  EF2B  F012         	goto	u1901
  6647  002452  EF2D  F012         	goto	u1900
  6648  002456                     u1901:
  6649  002456  EF7F  F012         	goto	l2331
  6650  00245A                     u1900:
  6651  00245A  0E01               	movlw	1
  6652  00245C  6E11               	movwf	___aodiv@counter^0,c
  6653  00245E  EF3B  F012         	goto	l2317
  6654  002462                     l2315:
  6655  002462  90D8               	bcf	status,0,c
  6656  002464  3609               	rlcf	___aodiv@divisor^0,f,c
  6657  002466  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6658  002468  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6659  00246A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6660  00246C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6661  00246E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6662  002470  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6663  002472  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6664  002474  2A11               	incf	___aodiv@counter^0,f,c
  6665  002476                     l2317:
  6666  002476  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6667  002478  EF40  F012         	goto	u1911
  6668  00247C  EF42  F012         	goto	u1910
  6669  002480                     u1911:
  6670  002480  EF31  F012         	goto	l2315
  6671  002484                     u1910:
  6672  002484                     l2319:
  6673  002484  90D8               	bcf	status,0,c
  6674  002486  3613               	rlcf	___aodiv@quotient^0,f,c
  6675  002488  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6676  00248A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6677  00248C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6678  00248E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6679  002490  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6680  002492  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6681  002494  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6682  002496  5009               	movf	___aodiv@divisor^0,w,c
  6683  002498  5C01               	subwf	___aodiv@dividend^0,w,c
  6684  00249A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6685  00249C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6686  00249E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6687  0024A0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6688  0024A2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6689  0024A4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6690  0024A6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6691  0024A8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6692  0024AA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6693  0024AC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6694  0024AE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6695  0024B0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6696  0024B2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6697  0024B4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6698  0024B6  A0D8               	btfss	status,0,c
  6699  0024B8  EF60  F012         	goto	u1921
  6700  0024BC  EF62  F012         	goto	u1920
  6701  0024C0                     u1921:
  6702  0024C0  EF73  F012         	goto	l2327
  6703  0024C4                     u1920:
  6704  0024C4  5009               	movf	___aodiv@divisor^0,w,c
  6705  0024C6  5E01               	subwf	___aodiv@dividend^0,f,c
  6706  0024C8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6707  0024CA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6708  0024CC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6709  0024CE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6710  0024D0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6711  0024D2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6712  0024D4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6713  0024D6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6714  0024D8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6715  0024DA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6716  0024DC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6717  0024DE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6718  0024E0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6719  0024E2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6720  0024E4  8013               	bsf	___aodiv@quotient^0,0,c
  6721  0024E6                     l2327:
  6722  0024E6  90D8               	bcf	status,0,c
  6723  0024E8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6724  0024EA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6725  0024EC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6726  0024EE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6727  0024F0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6728  0024F2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6729  0024F4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6730  0024F6  3209               	rrcf	___aodiv@divisor^0,f,c
  6731  0024F8  2E11               	decfsz	___aodiv@counter^0,f,c
  6732  0024FA  EF42  F012         	goto	l2319
  6733  0024FE                     l2331:
  6734  0024FE  5012               	movf	___aodiv@sign^0,w,c
  6735  002500  B4D8               	btfsc	status,2,c
  6736  002502  EF85  F012         	goto	u1931
  6737  002506  EF87  F012         	goto	u1930
  6738  00250A                     u1931:
  6739  00250A  EF97  F012         	goto	l2335
  6740  00250E                     u1930:
  6741  00250E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6742  002510  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6743  002512  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6744  002514  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6745  002516  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6746  002518  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6747  00251A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6748  00251C  6C13               	negf	___aodiv@quotient^0,c
  6749  00251E  0E00               	movlw	0
  6750  002520  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6751  002522  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6752  002524  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6753  002526  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6754  002528  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6755  00252A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6756  00252C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6757  00252E                     l2335:
  6758  00252E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6759  002532  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6760  002536  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6761  00253A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6762  00253E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6763  002542  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6764  002546  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6765  00254A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6766  00254E  0012               	return		;funcret
  6767  002550                     __end_of___aodiv:
  6768                           	callstack 0
  6769                           
  6770 ;; *************** function _ctoa *****************
  6771 ;; Defined at:
  6772 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  6775 ;;		 -> vsnprintf@f(6), 
  6776 ;;  c               1   11[COMRAM] unsigned char 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  w               2   15[COMRAM] int 
  6779 ;;  l               2   13[COMRAM] int 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  2    9[COMRAM] int 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6789 ;;      Params:         3       0       0       0       0       0       0
  6790 ;;      Locals:         4       0       0       0       0       0       0
  6791 ;;      Temps:          1       0       0       0       0       0       0
  6792 ;;      Totals:         8       0       0       0       0       0       0
  6793 ;;Total ram usage:        8 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:    2
  6796 ;; This function calls:
  6797 ;;		_fputc
  6798 ;; This function is called by:
  6799 ;;		_vfpfcnvrt
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text23
  6804  002C18                     __ptext23:
  6805                           	callstack 0
  6806  002C18                     _ctoa:
  6807                           	callstack 24
  6808  002C18                     
  6809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  6810  002C18  0100               	movlb	0	; () banked
  6811  002C1A  518E               	movf	_width& (0+255),w,b
  6812  002C1C  118F               	iorwf	(_width+1)& (0+255),w,b
  6813  002C1E  A4D8               	btfss	status,2,c
  6814  002C20  EF14  F016         	goto	u2231
  6815  002C24  EF16  F016         	goto	u2230
  6816  002C28                     u2231:
  6817  002C28  EF1C  F016         	goto	l2477
  6818  002C2C                     u2230:
  6819  002C2C                     
  6820                           ; BSR set to: 0
  6821  002C2C  C08E  F010         	movff	_width,ctoa@w
  6822  002C30  C08F  F011         	movff	_width+1,ctoa@w+1
  6823  002C34  EF22  F016         	goto	l2479
  6824  002C38                     l2477:
  6825                           
  6826                           ; BSR set to: 0
  6827  002C38  0EFF               	movlw	255
  6828  002C3A  258E               	addwf	_width& (0+255),w,b
  6829  002C3C  6E10               	movwf	ctoa@w^0,c
  6830  002C3E  0EFF               	movlw	255
  6831  002C40  218F               	addwfc	(_width+1)& (0+255),w,b
  6832  002C42  6E11               	movwf	(ctoa@w+1)^0,c
  6833  002C44                     l2479:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  6837  002C44  A192               	btfss	_flags& (0+255),0,b
  6838  002C46  EF27  F016         	goto	u2241
  6839  002C4A  EF29  F016         	goto	u2240
  6840  002C4E                     u2241:
  6841  002C4E  EF32  F016         	goto	l2483
  6842  002C52                     u2240:
  6843  002C52                     
  6844                           ; BSR set to: 0
  6845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  6846  002C52  C00C  F001         	movff	ctoa@c,fputc@c
  6847  002C56  6A02               	clrf	(fputc@c+1)^0,c
  6848  002C58  C00A  F003         	movff	ctoa@fp,fputc@fp
  6849  002C5C  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  6850  002C60  ECE0  F016         	call	_fputc	;wreg free
  6851  002C64                     l2483:
  6852                           
  6853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  6854  002C64  BE11               	btfsc	(ctoa@w+1)^0,7,c
  6855  002C66  EF37  F016         	goto	u2251
  6856  002C6A  EF39  F016         	goto	u2250
  6857  002C6E                     u2251:
  6858  002C6E  EF3B  F016         	goto	l2487
  6859  002C72                     u2250:
  6860  002C72  EF3F  F016         	goto	l867
  6861  002C76                     l2487:
  6862  002C76  0E00               	movlw	0
  6863  002C78  6E11               	movwf	(ctoa@w+1)^0,c
  6864  002C7A  0E00               	movlw	0
  6865  002C7C  6E10               	movwf	ctoa@w^0,c
  6866  002C7E                     l867:
  6867                           
  6868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  6869  002C7E  0E00               	movlw	0
  6870  002C80  6E0F               	movwf	(ctoa@l+1)^0,c
  6871  002C82  0E00               	movlw	0
  6872  002C84  6E0E               	movwf	ctoa@l^0,c
  6873                           
  6874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  6875  002C86  EF51  F016         	goto	l2493
  6876  002C8A                     l2489:
  6877                           
  6878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  6879  002C8A  0E00               	movlw	0
  6880  002C8C  6E02               	movwf	(fputc@c+1)^0,c
  6881  002C8E  0E20               	movlw	32
  6882  002C90  6E01               	movwf	fputc@c^0,c
  6883  002C92  C00A  F003         	movff	ctoa@fp,fputc@fp
  6884  002C96  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  6885  002C9A  ECE0  F016         	call	_fputc	;wreg free
  6886  002C9E                     
  6887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
  6888  002C9E  4A0E               	infsnz	ctoa@l^0,f,c
  6889  002CA0  2A0F               	incf	(ctoa@l+1)^0,f,c
  6890  002CA2                     l2493:
  6891                           
  6892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  6893  002CA2  5010               	movf	ctoa@w^0,w,c
  6894  002CA4  5C0E               	subwf	ctoa@l^0,w,c
  6895  002CA6  500F               	movf	(ctoa@l+1)^0,w,c
  6896  002CA8  0A80               	xorlw	128
  6897  002CAA  6E0D               	movwf	??_ctoa^0,c
  6898  002CAC  5011               	movf	(ctoa@w+1)^0,w,c
  6899  002CAE  0A80               	xorlw	128
  6900  002CB0  580D               	subwfb	??_ctoa^0,w,c
  6901  002CB2  A0D8               	btfss	status,0,c
  6902  002CB4  EF5E  F016         	goto	u2261
  6903  002CB8  EF60  F016         	goto	u2260
  6904  002CBC                     u2261:
  6905  002CBC  EF45  F016         	goto	l2489
  6906  002CC0                     u2260:
  6907  002CC0                     
  6908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  6909  002CC0  0100               	movlb	0	; () banked
  6910  002CC2  B192               	btfsc	_flags& (0+255),0,b
  6911  002CC4  EF66  F016         	goto	u2271
  6912  002CC8  EF68  F016         	goto	u2270
  6913  002CCC                     u2271:
  6914  002CCC  EF71  F016         	goto	l2497
  6915  002CD0                     u2270:
  6916  002CD0                     
  6917                           ; BSR set to: 0
  6918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  6919  002CD0  C00C  F001         	movff	ctoa@c,fputc@c
  6920  002CD4  6A02               	clrf	(fputc@c+1)^0,c
  6921  002CD6  C00A  F003         	movff	ctoa@fp,fputc@fp
  6922  002CDA  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  6923  002CDE  ECE0  F016         	call	_fputc	;wreg free
  6924  002CE2                     l2497:
  6925                           
  6926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  6927  002CE2  0E01               	movlw	1
  6928  002CE4  240E               	addwf	ctoa@l^0,w,c
  6929  002CE6  6E0A               	movwf	?_ctoa^0,c
  6930  002CE8  0E00               	movlw	0
  6931  002CEA  200F               	addwfc	(ctoa@l+1)^0,w,c
  6932  002CEC  6E0B               	movwf	(?_ctoa+1)^0,c
  6933  002CEE  0012               	return		;funcret
  6934  002CF0                     __end_of_ctoa:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _fputc *****************
  6938 ;; Defined at:
  6939 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  c               2    0[COMRAM] int 
  6942 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6943 ;;		 -> vsnprintf@f(6), 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  2    0[COMRAM] int 
  6948 ;; Registers used:
  6949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6955 ;;      Params:         4       0       0       0       0       0       0
  6956 ;;      Locals:         0       0       0       0       0       0       0
  6957 ;;      Temps:          5       0       0       0       0       0       0
  6958 ;;      Totals:         9       0       0       0       0       0       0
  6959 ;;Total ram usage:        9 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    1
  6962 ;; This function calls:
  6963 ;;		_putch
  6964 ;; This function is called by:
  6965 ;;		_pad
  6966 ;;		_ctoa
  6967 ;;		_stoa
  6968 ;;		_vfpfcnvrt
  6969 ;;		_fputs
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text24
  6974  002DC0                     __ptext24:
  6975                           	callstack 0
  6976  002DC0                     _fputc:
  6977                           	callstack 22
  6978  002DC0  5003               	movf	fputc@fp^0,w,c
  6979  002DC2  1004               	iorwf	(fputc@fp+1)^0,w,c
  6980  002DC4  B4D8               	btfsc	status,2,c
  6981  002DC6  EFE7  F016         	goto	u1791
  6982  002DCA  EFE9  F016         	goto	u1790
  6983  002DCE                     u1791:
  6984  002DCE  EFF2  F016         	goto	l2257
  6985  002DD2                     u1790:
  6986  002DD2  5003               	movf	fputc@fp^0,w,c
  6987  002DD4  1004               	iorwf	(fputc@fp+1)^0,w,c
  6988  002DD6  A4D8               	btfss	status,2,c
  6989  002DD8  EFF0  F016         	goto	u1801
  6990  002DDC  EFF2  F016         	goto	u1800
  6991  002DE0                     u1801:
  6992  002DE0  EFF7  F016         	goto	l2259
  6993  002DE4                     u1800:
  6994  002DE4                     l2257:
  6995  002DE4  5001               	movf	fputc@c^0,w,c
  6996  002DE6  ECD0  F019         	call	_putch
  6997  002DEA  EF44  F017         	goto	l1142
  6998  002DEE                     l2259:
  6999  002DEE  EE20 F004          	lfsr	2,4
  7000  002DF2  5003               	movf	fputc@fp^0,w,c
  7001  002DF4  26D9               	addwf	fsr2l,f,c
  7002  002DF6  5004               	movf	(fputc@fp+1)^0,w,c
  7003  002DF8  22DA               	addwfc	fsr2h,f,c
  7004  002DFA  50DE               	movf	postinc2,w,c
  7005  002DFC  10DE               	iorwf	postinc2,w,c
  7006  002DFE  B4D8               	btfsc	status,2,c
  7007  002E00  EF04  F017         	goto	u1811
  7008  002E04  EF06  F017         	goto	u1810
  7009  002E08                     u1811:
  7010  002E08  EF21  F017         	goto	l2263
  7011  002E0C                     u1810:
  7012  002E0C  EE20 F004          	lfsr	2,4
  7013  002E10  5003               	movf	fputc@fp^0,w,c
  7014  002E12  26D9               	addwf	fsr2l,f,c
  7015  002E14  5004               	movf	(fputc@fp+1)^0,w,c
  7016  002E16  22DA               	addwfc	fsr2h,f,c
  7017  002E18  EE10 F002          	lfsr	1,2
  7018  002E1C  5003               	movf	fputc@fp^0,w,c
  7019  002E1E  26E1               	addwf	fsr1l,f,c
  7020  002E20  5004               	movf	(fputc@fp+1)^0,w,c
  7021  002E22  22E2               	addwfc	fsr1h,f,c
  7022  002E24  50DE               	movf	postinc2,w,c
  7023  002E26  5CE6               	subwf	postinc1,w,c
  7024  002E28  50E6               	movf	postinc1,w,c
  7025  002E2A  0A80               	xorlw	128
  7026  002E2C  6E09               	movwf	(??_fputc+4)^0,c
  7027  002E2E  50DE               	movf	postinc2,w,c
  7028  002E30  0A80               	xorlw	128
  7029  002E32  5809               	subwfb	(??_fputc+4)^0,w,c
  7030  002E34  B0D8               	btfsc	status,0,c
  7031  002E36  EF1F  F017         	goto	u1821
  7032  002E3A  EF21  F017         	goto	u1820
  7033  002E3E                     u1821:
  7034  002E3E  EF44  F017         	goto	l1142
  7035  002E42                     u1820:
  7036  002E42                     l2263:
  7037  002E42  EE20 F002          	lfsr	2,2
  7038  002E46  5003               	movf	fputc@fp^0,w,c
  7039  002E48  26D9               	addwf	fsr2l,f,c
  7040  002E4A  5004               	movf	(fputc@fp+1)^0,w,c
  7041  002E4C  22DA               	addwfc	fsr2h,f,c
  7042  002E4E  CFDE F005          	movff	postinc2,??_fputc
  7043  002E52  CFDD F006          	movff	postdec2,??_fputc+1
  7044  002E56  C003  FFD9         	movff	fputc@fp,fsr2l
  7045  002E5A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7046  002E5E  CFDE F007          	movff	postinc2,??_fputc+2
  7047  002E62  CFDD F008          	movff	postdec2,??_fputc+3
  7048  002E66  5005               	movf	??_fputc^0,w,c
  7049  002E68  2407               	addwf	(??_fputc+2)^0,w,c
  7050  002E6A  6ED9               	movwf	fsr2l,c
  7051  002E6C  5006               	movf	(??_fputc+1)^0,w,c
  7052  002E6E  2008               	addwfc	(??_fputc+3)^0,w,c
  7053  002E70  6EDA               	movwf	fsr2h,c
  7054  002E72  C001  FFDF         	movff	fputc@c,indf2
  7055  002E76  EE20 F002          	lfsr	2,2
  7056  002E7A  5003               	movf	fputc@fp^0,w,c
  7057  002E7C  26D9               	addwf	fsr2l,f,c
  7058  002E7E  5004               	movf	(fputc@fp+1)^0,w,c
  7059  002E80  22DA               	addwfc	fsr2h,f,c
  7060  002E82  2ADE               	incf	postinc2,f,c
  7061  002E84  0E00               	movlw	0
  7062  002E86  22DD               	addwfc	postdec2,f,c
  7063  002E88                     l1142:
  7064  002E88  0012               	return		;funcret
  7065  002E8A                     __end_of_fputc:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function _putch *****************
  7069 ;; Defined at:
  7070 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  c               1    wreg     unsigned char 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  c               1    0[COMRAM] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      void 
  7077 ;; Registers used:
  7078 ;;		wreg
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7084 ;;      Params:         0       0       0       0       0       0       0
  7085 ;;      Locals:         0       0       0       0       0       0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0
  7087 ;;      Totals:         0       0       0       0       0       0       0
  7088 ;;Total ram usage:        0 bytes
  7089 ;; Hardware stack levels used:    1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_fputc
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text25
  7098  0033A0                     __ptext25:
  7099                           	callstack 0
  7100  0033A0                     _putch:
  7101                           	callstack 22
  7102  0033A0  0012               	return		;funcret
  7103  0033A2                     __end_of_putch:
  7104                           	callstack 0
  7105                           
  7106 ;; *************** function _atoi *****************
  7107 ;; Defined at:
  7108 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7111 ;;		 -> STR_3(11), STR_2(10), 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  n               2   20[COMRAM] int 
  7114 ;;  neg             2   13[COMRAM] int 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  2    7[COMRAM] int 
  7117 ;; Registers used:
  7118 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7124 ;;      Params:         2       0       0       0       0       0       0
  7125 ;;      Locals:         9       0       0       0       0       0       0
  7126 ;;      Temps:          4       0       0       0       0       0       0
  7127 ;;      Totals:        15       0       0       0       0       0       0
  7128 ;;Total ram usage:       15 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    1
  7131 ;; This function calls:
  7132 ;;		___wmul
  7133 ;;		_isdigit
  7134 ;;		_isspace
  7135 ;; This function is called by:
  7136 ;;		_vfpfcnvrt
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text26
  7141  002238                     __ptext26:
  7142                           	callstack 0
  7143  002238                     _atoi:
  7144                           	callstack 25
  7145  002238  0E00               	movlw	0
  7146  00223A  6E16               	movwf	(atoi@n+1)^0,c
  7147  00223C  0E00               	movlw	0
  7148  00223E  6E15               	movwf	atoi@n^0,c
  7149  002240  0E00               	movlw	0
  7150  002242  6E0F               	movwf	(atoi@neg+1)^0,c
  7151  002244  0E00               	movlw	0
  7152  002246  6E0E               	movwf	atoi@neg^0,c
  7153  002248  EF28  F011         	goto	l2759
  7154  00224C                     l2757:
  7155  00224C  4A08               	infsnz	atoi@s^0,f,c
  7156  00224E  2A09               	incf	(atoi@s+1)^0,f,c
  7157  002250                     l2759:
  7158  002250  0E01               	movlw	1
  7159  002252  6E14               	movwf	_atoi$1272^0,c
  7160  002254  C008  FFF6         	movff	atoi@s,tblptrl
  7161  002258  C009  FFF7         	movff	atoi@s+1,tblptrh
  7162  00225C                     	if	0	;tblptru may be non-zero
  7163  00225C                     	endif
  7164  00225C                     	if	0	;tblptru may be non-zero
  7165  00225C                     	endif
  7166  00225C  0008               	tblrd		*
  7167  00225E  50F5               	movf	tablat,w,c
  7168  002260  0A20               	xorlw	32
  7169  002262  B4D8               	btfsc	status,2,c
  7170  002264  EF36  F011         	goto	u2861
  7171  002268  EF38  F011         	goto	u2860
  7172  00226C                     u2861:
  7173  00226C  EF55  F011         	goto	l2767
  7174  002270                     u2860:
  7175  002270  0EF7               	movlw	247
  7176  002272  6E0A               	movwf	??_atoi^0,c
  7177  002274  0EFF               	movlw	255
  7178  002276  6E0B               	movwf	(??_atoi+1)^0,c
  7179  002278  C008  FFF6         	movff	atoi@s,tblptrl
  7180  00227C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7181  002280                     	if	0	;tblptru may be non-zero
  7182  002280                     	endif
  7183  002280                     	if	0	;tblptru may be non-zero
  7184  002280                     	endif
  7185  002280  0008               	tblrd		*
  7186  002282  50F5               	movf	tablat,w,c
  7187  002284  6E0C               	movwf	(??_atoi+2)^0,c
  7188  002286  6A0D               	clrf	(??_atoi+3)^0,c
  7189  002288  500A               	movf	??_atoi^0,w,c
  7190  00228A  260C               	addwf	(??_atoi+2)^0,f,c
  7191  00228C  500B               	movf	(??_atoi+1)^0,w,c
  7192  00228E  220D               	addwfc	(??_atoi+3)^0,f,c
  7193  002290  500D               	movf	(??_atoi+3)^0,w,c
  7194  002292  E109               	bnz	u2870
  7195  002294  0E05               	movlw	5
  7196  002296  5C0C               	subwf	(??_atoi+2)^0,w,c
  7197  002298  A0D8               	btfss	status,0,c
  7198  00229A  EF51  F011         	goto	u2871
  7199  00229E  EF53  F011         	goto	u2870
  7200  0022A2                     u2871:
  7201  0022A2  EF55  F011         	goto	l2767
  7202  0022A6                     u2870:
  7203  0022A6  0E00               	movlw	0
  7204  0022A8  6E14               	movwf	_atoi$1272^0,c
  7205  0022AA                     l2767:
  7206  0022AA  C014  F010         	movff	_atoi$1272,_atoi$1271
  7207  0022AE  6A11               	clrf	(_atoi$1271+1)^0,c
  7208  0022B0  5010               	movf	_atoi$1271^0,w,c
  7209  0022B2  1011               	iorwf	(_atoi$1271+1)^0,w,c
  7210  0022B4  A4D8               	btfss	status,2,c
  7211  0022B6  EF5F  F011         	goto	u2881
  7212  0022BA  EF61  F011         	goto	u2880
  7213  0022BE                     u2881:
  7214  0022BE  EF26  F011         	goto	l2757
  7215  0022C2                     u2880:
  7216  0022C2  EF6B  F011         	goto	l2777
  7217  0022C6                     l2773:
  7218  0022C6  0E00               	movlw	0
  7219  0022C8  6E0F               	movwf	(atoi@neg+1)^0,c
  7220  0022CA  0E01               	movlw	1
  7221  0022CC  6E0E               	movwf	atoi@neg^0,c
  7222  0022CE                     l2775:
  7223  0022CE  4A08               	infsnz	atoi@s^0,f,c
  7224  0022D0  2A09               	incf	(atoi@s+1)^0,f,c
  7225  0022D2  EFA0  F011         	goto	l2783
  7226  0022D6                     l2777:
  7227  0022D6  C008  FFF6         	movff	atoi@s,tblptrl
  7228  0022DA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7229  0022DE                     	if	0	;tblptru may be non-zero
  7230  0022DE                     	endif
  7231  0022DE                     	if	0	;tblptru may be non-zero
  7232  0022DE                     	endif
  7233  0022DE  0008               	tblrd		*
  7234  0022E0  50F5               	movf	tablat,w,c
  7235  0022E2  6E0A               	movwf	??_atoi^0,c
  7236  0022E4  6A0B               	clrf	(??_atoi+1)^0,c
  7237                           
  7238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7239                           ; Switch size 1, requested type "simple"
  7240                           ; Number of cases is 1, Range of values is 0 to 0
  7241                           ; switch strategies available:
  7242                           ; Name         Instructions Cycles
  7243                           ; simple_byte            4     3 (average)
  7244                           ;	Chosen strategy is simple_byte
  7245  0022E6  500B               	movf	(??_atoi+1)^0,w,c
  7246  0022E8  0A00               	xorlw	0	; case 0
  7247  0022EA  B4D8               	btfsc	status,2,c
  7248  0022EC  EF7A  F011         	goto	l3325
  7249  0022F0  EFA0  F011         	goto	l2783
  7250  0022F4                     l3325:
  7251                           
  7252                           ; Switch size 1, requested type "simple"
  7253                           ; Number of cases is 2, Range of values is 43 to 45
  7254                           ; switch strategies available:
  7255                           ; Name         Instructions Cycles
  7256                           ; simple_byte            7     4 (average)
  7257                           ;	Chosen strategy is simple_byte
  7258  0022F4  500A               	movf	??_atoi^0,w,c
  7259  0022F6  0A2B               	xorlw	43	; case 43
  7260  0022F8  B4D8               	btfsc	status,2,c
  7261  0022FA  EF67  F011         	goto	l2775
  7262  0022FE  0A06               	xorlw	6	; case 45
  7263  002300  B4D8               	btfsc	status,2,c
  7264  002302  EF63  F011         	goto	l2773
  7265  002306  EFA0  F011         	goto	l2783
  7266  00230A                     l2779:
  7267  00230A  C015  F001         	movff	atoi@n,___wmul@multiplier
  7268  00230E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7269  002312  0E00               	movlw	0
  7270  002314  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7271  002316  0E0A               	movlw	10
  7272  002318  6E03               	movwf	___wmul@multiplicand^0,c
  7273  00231A  EC8B  F019         	call	___wmul	;wreg free
  7274  00231E  C008  FFF6         	movff	atoi@s,tblptrl
  7275  002322  C009  FFF7         	movff	atoi@s+1,tblptrh
  7276  002326                     	if	0	;tblptru may be non-zero
  7277  002326                     	endif
  7278  002326                     	if	0	;tblptru may be non-zero
  7279  002326                     	endif
  7280  002326  0008               	tblrd		*
  7281  002328  50F5               	movf	tablat,w,c
  7282  00232A  5E01               	subwf	?___wmul^0,f,c
  7283  00232C  0E00               	movlw	0
  7284  00232E  5A02               	subwfb	(?___wmul+1)^0,f,c
  7285  002330  0E30               	movlw	48
  7286  002332  2401               	addwf	?___wmul^0,w,c
  7287  002334  6E15               	movwf	atoi@n^0,c
  7288  002336  0E00               	movlw	0
  7289  002338  2002               	addwfc	(?___wmul+1)^0,w,c
  7290  00233A  6E16               	movwf	(atoi@n+1)^0,c
  7291  00233C  EF67  F011         	goto	l2775
  7292  002340                     l2783:
  7293  002340  0ED0               	movlw	208
  7294  002342  6E0A               	movwf	??_atoi^0,c
  7295  002344  0EFF               	movlw	255
  7296  002346  6E0B               	movwf	(??_atoi+1)^0,c
  7297  002348  C008  FFF6         	movff	atoi@s,tblptrl
  7298  00234C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7299  002350                     	if	0	;tblptru may be non-zero
  7300  002350                     	endif
  7301  002350                     	if	0	;tblptru may be non-zero
  7302  002350                     	endif
  7303  002350  0008               	tblrd		*
  7304  002352  50F5               	movf	tablat,w,c
  7305  002354  6E0C               	movwf	(??_atoi+2)^0,c
  7306  002356  6A0D               	clrf	(??_atoi+3)^0,c
  7307  002358  500A               	movf	??_atoi^0,w,c
  7308  00235A  260C               	addwf	(??_atoi+2)^0,f,c
  7309  00235C  500B               	movf	(??_atoi+1)^0,w,c
  7310  00235E  220D               	addwfc	(??_atoi+3)^0,f,c
  7311  002360  500D               	movf	(??_atoi+3)^0,w,c
  7312  002362  E10A               	bnz	u2890
  7313  002364  0E0A               	movlw	10
  7314  002366  5C0C               	subwf	(??_atoi+2)^0,w,c
  7315  002368  A0D8               	btfss	status,0,c
  7316  00236A  EFB9  F011         	goto	u2891
  7317  00236E  EFBC  F011         	goto	u2890
  7318  002372                     u2891:
  7319  002372  0E01               	movlw	1
  7320  002374  EFBD  F011         	goto	u2900
  7321  002378                     u2890:
  7322  002378  0E00               	movlw	0
  7323  00237A                     u2900:
  7324  00237A  6E12               	movwf	_atoi$1273^0,c
  7325  00237C  6A13               	clrf	(_atoi$1273+1)^0,c
  7326  00237E  5012               	movf	_atoi$1273^0,w,c
  7327  002380  1013               	iorwf	(_atoi$1273+1)^0,w,c
  7328  002382  A4D8               	btfss	status,2,c
  7329  002384  EFC6  F011         	goto	u2911
  7330  002388  EFC8  F011         	goto	u2910
  7331  00238C                     u2911:
  7332  00238C  EF85  F011         	goto	l2779
  7333  002390                     u2910:
  7334  002390  500E               	movf	atoi@neg^0,w,c
  7335  002392  100F               	iorwf	(atoi@neg+1)^0,w,c
  7336  002394  A4D8               	btfss	status,2,c
  7337  002396  EFCF  F011         	goto	u2921
  7338  00239A  EFD1  F011         	goto	u2920
  7339  00239E                     u2921:
  7340  00239E  EFDF  F011         	goto	l1099
  7341  0023A2                     u2920:
  7342  0023A2  C015  F00A         	movff	atoi@n,??_atoi
  7343  0023A6  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7344  0023AA  1E0A               	comf	??_atoi^0,f,c
  7345  0023AC  1E0B               	comf	(??_atoi+1)^0,f,c
  7346  0023AE  4A0A               	infsnz	??_atoi^0,f,c
  7347  0023B0  2A0B               	incf	(??_atoi+1)^0,f,c
  7348  0023B2  C00A  F008         	movff	??_atoi,?_atoi
  7349  0023B6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7350  0023BA  EFE3  F011         	goto	l1102
  7351  0023BE                     l1099:
  7352  0023BE  C015  F008         	movff	atoi@n,?_atoi
  7353  0023C2  C016  F009         	movff	atoi@n+1,?_atoi+1
  7354  0023C6                     l1102:
  7355  0023C6  0012               	return		;funcret
  7356  0023C8                     __end_of_atoi:
  7357                           	callstack 0
  7358                           
  7359 ;; *************** function _isspace *****************
  7360 ;; Defined at:
  7361 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  c               2    0[COMRAM] int 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;		None
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  2    0[COMRAM] int 
  7368 ;; Registers used:
  7369 ;;		wreg, status,2, status,0
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7375 ;;      Params:         2       0       0       0       0       0       0
  7376 ;;      Locals:         1       0       0       0       0       0       0
  7377 ;;      Temps:          4       0       0       0       0       0       0
  7378 ;;      Totals:         7       0       0       0       0       0       0
  7379 ;;Total ram usage:        7 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_atoi
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text27
  7389  00306E                     __ptext27:
  7390                           	callstack 0
  7391  00306E                     _isspace:
  7392                           	callstack 25
  7393  00306E  0E01               	movlw	1
  7394  003070  6E07               	movwf	_isspace$1299^0,c
  7395  003072  0E20               	movlw	32
  7396  003074  1801               	xorwf	isspace@c^0,w,c
  7397  003076  1002               	iorwf	(isspace@c+1)^0,w,c
  7398  003078  B4D8               	btfsc	status,2,c
  7399  00307A  EF41  F018         	goto	u2211
  7400  00307E  EF43  F018         	goto	u2210
  7401  003082                     u2211:
  7402  003082  EF5C  F018         	goto	l2469
  7403  003086                     u2210:
  7404  003086  0EF7               	movlw	247
  7405  003088  6E03               	movwf	??_isspace^0,c
  7406  00308A  0EFF               	movlw	255
  7407  00308C  6E04               	movwf	(??_isspace+1)^0,c
  7408  00308E  C001  F005         	movff	isspace@c,??_isspace+2
  7409  003092  C002  F006         	movff	isspace@c+1,??_isspace+3
  7410  003096  5003               	movf	??_isspace^0,w,c
  7411  003098  2605               	addwf	(??_isspace+2)^0,f,c
  7412  00309A  5004               	movf	(??_isspace+1)^0,w,c
  7413  00309C  2206               	addwfc	(??_isspace+3)^0,f,c
  7414  00309E  5006               	movf	(??_isspace+3)^0,w,c
  7415  0030A0  E109               	bnz	u2220
  7416  0030A2  0E05               	movlw	5
  7417  0030A4  5C05               	subwf	(??_isspace+2)^0,w,c
  7418  0030A6  A0D8               	btfss	status,0,c
  7419  0030A8  EF58  F018         	goto	u2221
  7420  0030AC  EF5A  F018         	goto	u2220
  7421  0030B0                     u2221:
  7422  0030B0  EF5C  F018         	goto	l2469
  7423  0030B4                     u2220:
  7424  0030B4  0E00               	movlw	0
  7425  0030B6  6E07               	movwf	_isspace$1299^0,c
  7426  0030B8                     l2469:
  7427  0030B8  C007  F001         	movff	_isspace$1299,?_isspace
  7428  0030BC  6A02               	clrf	(?_isspace+1)^0,c
  7429  0030BE  0012               	return		;funcret
  7430  0030C0                     __end_of_isspace:
  7431                           	callstack 0
  7432                           
  7433 ;; *************** function _isdigit *****************
  7434 ;; Defined at:
  7435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  c               2    0[COMRAM] int 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;		None
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  2    0[COMRAM] int 
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7449 ;;      Params:         2       0       0       0       0       0       0
  7450 ;;      Locals:         0       0       0       0       0       0       0
  7451 ;;      Temps:          4       0       0       0       0       0       0
  7452 ;;      Totals:         6       0       0       0       0       0       0
  7453 ;;Total ram usage:        6 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_vfpfcnvrt
  7459 ;;		_atoi
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text28
  7464  003242                     __ptext28:
  7465                           	callstack 0
  7466  003242                     _isdigit:
  7467                           	callstack 26
  7468  003242  0ED0               	movlw	208
  7469  003244  6E03               	movwf	??_isdigit^0,c
  7470  003246  0EFF               	movlw	255
  7471  003248  6E04               	movwf	(??_isdigit+1)^0,c
  7472  00324A  C001  F005         	movff	isdigit@c,??_isdigit+2
  7473  00324E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7474  003252  5003               	movf	??_isdigit^0,w,c
  7475  003254  2605               	addwf	(??_isdigit+2)^0,f,c
  7476  003256  5004               	movf	(??_isdigit+1)^0,w,c
  7477  003258  2206               	addwfc	(??_isdigit+3)^0,f,c
  7478  00325A  5006               	movf	(??_isdigit+3)^0,w,c
  7479  00325C  E10A               	bnz	u2190
  7480  00325E  0E0A               	movlw	10
  7481  003260  5C05               	subwf	(??_isdigit+2)^0,w,c
  7482  003262  A0D8               	btfss	status,0,c
  7483  003264  EF36  F019         	goto	u2191
  7484  003268  EF39  F019         	goto	u2190
  7485  00326C                     u2191:
  7486  00326C  0E01               	movlw	1
  7487  00326E  EF3A  F019         	goto	u2200
  7488  003272                     u2190:
  7489  003272  0E00               	movlw	0
  7490  003274                     u2200:
  7491  003274  6E01               	movwf	?_isdigit^0,c
  7492  003276  6A02               	clrf	(?_isdigit+1)^0,c
  7493  003278  0012               	return		;funcret
  7494  00327A                     __end_of_isdigit:
  7495                           	callstack 0
  7496                           
  7497 ;; *************** function ___wmul *****************
  7498 ;; Defined at:
  7499 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  multiplier      2    0[COMRAM] unsigned int 
  7502 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  product         2    4[COMRAM] unsigned int 
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  2    0[COMRAM] unsigned int 
  7507 ;; Registers used:
  7508 ;;		wreg, status,2, status,0, prodl, prodh
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7514 ;;      Params:         4       0       0       0       0       0       0
  7515 ;;      Locals:         2       0       0       0       0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0
  7517 ;;      Totals:         6       0       0       0       0       0       0
  7518 ;;Total ram usage:        6 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		_atoi
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text29
  7528  003316                     __ptext29:
  7529                           	callstack 0
  7530  003316                     ___wmul:
  7531                           	callstack 25
  7532  003316  5001               	movf	___wmul@multiplier^0,w,c
  7533  003318  0203               	mulwf	___wmul@multiplicand^0,c
  7534  00331A  CFF3 F005          	movff	prodl,___wmul@product
  7535  00331E  CFF4 F006          	movff	prodh,___wmul@product+1
  7536  003322  5001               	movf	___wmul@multiplier^0,w,c
  7537  003324  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7538  003326  50F3               	movf	243,w,c
  7539  003328  2606               	addwf	(___wmul@product+1)^0,f,c
  7540  00332A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7541  00332C  0203               	mulwf	___wmul@multiplicand^0,c
  7542  00332E  50F3               	movf	243,w,c
  7543  003330  2606               	addwf	(___wmul@product+1)^0,f,c
  7544  003332  C005  F001         	movff	___wmul@product,?___wmul
  7545  003336  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7546  00333A  0012               	return		;funcret
  7547  00333C                     __end_of___wmul:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _UART_send_string *****************
  7551 ;; Defined at:
  7552 ;;		line 54 in file "hw_uart.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  st_pt           2    1[COMRAM] PTR unsigned char 
  7555 ;;		 -> main@_adc_str(20), STR_1(19), 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7567 ;;      Params:         2       0       0       0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0       0
  7570 ;;      Totals:         2       0       0       0       0       0       0
  7571 ;;Total ram usage:        2 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; Hardware stack levels required when called:    1
  7574 ;; This function calls:
  7575 ;;		_UART_send_char
  7576 ;; This function is called by:
  7577 ;;		_main
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text30
  7582  003010                     __ptext30:
  7583                           	callstack 0
  7584  003010                     _UART_send_string:
  7585                           	callstack 29
  7586  003010                     
  7587                           ;hw_uart.c: 54: void UART_send_string(char* st_pt);hw_uart.c: 55: {;hw_uart.c: 56:     w
      +                          hile(*st_pt)
  7588  003010  EF1E  F018         	goto	l3221
  7589  003014                     l3217:
  7590                           
  7591                           ;hw_uart.c: 57:         UART_send_char(*st_pt++);
  7592  003014  C002  FFF6         	movff	UART_send_string@st_pt,tblptrl
  7593  003018  C003  FFF7         	movff	UART_send_string@st_pt+1,tblptrh
  7594  00301C  6AF8               	clrf	tblptru,c
  7595  00301E  0E05               	movlw	(high __ramtop+-1)
  7596  003020  64F7               	cpfsgt	tblptrh,c
  7597  003022  D003               	bra	u3507
  7598  003024  0008               	tblrd		*
  7599  003026  50F5               	movf	tablat,w,c
  7600  003028  D005               	bra	u3500
  7601  00302A                     u3507:
  7602  00302A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7603  00302E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7604  003032  50E7               	movf	indf1,w,c
  7605  003034                     u3500:
  7606  003034  ECAE  F019         	call	_UART_send_char
  7607  003038  4A02               	infsnz	UART_send_string@st_pt^0,f,c
  7608  00303A  2A03               	incf	(UART_send_string@st_pt+1)^0,f,c
  7609  00303C                     l3221:
  7610                           
  7611                           ;hw_uart.c: 56:     while(*st_pt)
  7612  00303C  C002  FFF6         	movff	UART_send_string@st_pt,tblptrl
  7613  003040  C003  FFF7         	movff	UART_send_string@st_pt+1,tblptrh
  7614  003044  6AF8               	clrf	tblptru,c
  7615  003046  0E05               	movlw	(high __ramtop+-1)
  7616  003048  64F7               	cpfsgt	tblptrh,c
  7617  00304A  D003               	bra	u3517
  7618  00304C  0008               	tblrd		*
  7619  00304E  50F5               	movf	tablat,w,c
  7620  003050  D005               	bra	u3510
  7621  003052                     u3517:
  7622  003052  CFF6 FFE1          	movff	tblptrl,fsr1l
  7623  003056  CFF7 FFE2          	movff	tblptrh,fsr1h
  7624  00305A  50E7               	movf	indf1,w,c
  7625  00305C                     u3510:
  7626  00305C  0900               	iorlw	0
  7627  00305E  A4D8               	btfss	status,2,c
  7628  003060  EF34  F018         	goto	u3521
  7629  003064  EF36  F018         	goto	u3520
  7630  003068                     u3521:
  7631  003068  EF0A  F018         	goto	l3217
  7632  00306C                     u3520:
  7633  00306C  0012               	return		;funcret
  7634  00306E                     __end_of_UART_send_string:
  7635                           	callstack 0
  7636                           
  7637 ;; *************** function _UART_send_char *****************
  7638 ;; Defined at:
  7639 ;;		line 27 in file "hw_uart.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  bt              1    wreg     unsigned char 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  bt              1    0[COMRAM] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7653 ;;      Params:         0       0       0       0       0       0       0
  7654 ;;      Locals:         1       0       0       0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0
  7656 ;;      Totals:         1       0       0       0       0       0       0
  7657 ;;Total ram usage:        1 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_UART_send_string
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           	psect	text31
  7667  00335C                     __ptext31:
  7668                           	callstack 0
  7669  00335C                     _UART_send_char:
  7670                           	callstack 29
  7671                           
  7672                           ;incstack = 0
  7673                           ;UART_send_char@bt stored from wreg
  7674  00335C  6E01               	movwf	UART_send_char@bt^0,c
  7675  00335E                     l69:
  7676  00335E  A89E               	btfss	3998,4,c	;volatile
  7677  003360  EFB4  F019         	goto	u3441
  7678  003364  EFB6  F019         	goto	u3440
  7679  003368                     u3441:
  7680  003368  EFAF  F019         	goto	l69
  7681  00336C                     u3440:
  7682  00336C                     
  7683                           ;hw_uart.c: 30:     TXREG = bt;
  7684  00336C  C001  FFAD         	movff	UART_send_char@bt,4013	;volatile
  7685  003370  0012               	return		;funcret
  7686  003372                     __end_of_UART_send_char:
  7687                           	callstack 0
  7688                           
  7689 ;; *************** function _UART_Init *****************
  7690 ;; Defined at:
  7691 ;;		line 10 in file "hw_uart.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;  baud_rate       3    0[COMRAM] unsigned um
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;		None
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7705 ;;      Params:         3       0       0       0       0       0       0
  7706 ;;      Locals:         0       0       0       0       0       0       0
  7707 ;;      Temps:          0       0       0       0       0       0       0
  7708 ;;      Totals:         3       0       0       0       0       0       0
  7709 ;;Total ram usage:        3 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_main
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text32
  7719  003372                     __ptext32:
  7720                           	callstack 0
  7721  003372                     _UART_Init:
  7722                           	callstack 30
  7723  003372                     
  7724                           ;hw_uart.c: 10: void UART_Init(uint24_t baud_rate);hw_uart.c: 11: {;hw_uart.c: 13:    TX
      +                          STAbits.TXEN = 1;
  7725  003372  8AAC               	bsf	172,5,c	;volatile
  7726                           
  7727                           ;hw_uart.c: 15:    TXSTAbits.SYNC = 0;
  7728  003374  98AC               	bcf	172,4,c	;volatile
  7729                           
  7730                           ;hw_uart.c: 17:    TXSTAbits.BRGH = 0;
  7731  003376  94AC               	bcf	172,2,c	;volatile
  7732                           
  7733                           ;hw_uart.c: 19:    BAUDCONbits.BRG16 = 0;
  7734  003378  96B8               	bcf	184,3,c	;volatile
  7735                           
  7736                           ;hw_uart.c: 21:    RCSTAbits.SPEN = 1;
  7737  00337A  8EAB               	bsf	171,7,c	;volatile
  7738  00337C                     
  7739                           ;hw_uart.c: 23:    SPBRGH = 0x00;
  7740  00337C  0E00               	movlw	0
  7741  00337E  6EB0               	movwf	176,c	;volatile
  7742                           
  7743                           ;hw_uart.c: 24:    SPBRG = 0x0C;
  7744  003380  0E0C               	movlw	12
  7745  003382  6EAF               	movwf	175,c	;volatile
  7746  003384  0012               	return		;funcret
  7747  003386                     __end_of_UART_Init:
  7748                           	callstack 0
  7749                           
  7750 ;; *************** function _Read_ADC *****************
  7751 ;; Defined at:
  7752 ;;		line 16 in file "hw_adc.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  channel         1    wreg     unsigned char 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  channel         1    4[COMRAM] unsigned char 
  7757 ;;  result          2    5[COMRAM] unsigned int 
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  2    0[COMRAM] unsigned int 
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7767 ;;      Params:         2       0       0       0       0       0       0
  7768 ;;      Locals:         3       0       0       0       0       0       0
  7769 ;;      Temps:          2       0       0       0       0       0       0
  7770 ;;      Totals:         7       0       0       0       0       0       0
  7771 ;;Total ram usage:        7 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; This function calls:
  7774 ;;		Nothing
  7775 ;; This function is called by:
  7776 ;;		_main
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           	psect	text33
  7781  0030C0                     __ptext33:
  7782                           	callstack 0
  7783  0030C0                     _Read_ADC:
  7784                           	callstack 30
  7785                           
  7786                           ;incstack = 0
  7787                           ;Read_ADC@channel stored from wreg
  7788  0030C0  6E05               	movwf	Read_ADC@channel^0,c
  7789  0030C2                     
  7790                           ;hw_adc.c: 16: unsigned int Read_ADC (unsigned char channel);hw_adc.c: 17: {;hw_adc.c: 1
      +                          8:     unsigned int result;;hw_adc.c: 19:     if (channel == 0)
  7791  0030C2  5005               	movf	Read_ADC@channel^0,w,c
  7792  0030C4  A4D8               	btfss	status,2,c
  7793  0030C6  EF67  F018         	goto	u3531
  7794  0030CA  EF69  F018         	goto	u3530
  7795  0030CE                     u3531:
  7796  0030CE  EF6D  F018         	goto	l3227
  7797  0030D2                     u3530:
  7798  0030D2                     
  7799                           ;hw_adc.c: 20:     {;hw_adc.c: 21:          ADCON0bits.CHS = 0000;
  7800  0030D2  0EC3               	movlw	-61
  7801  0030D4  16C2               	andwf	194,f,c	;volatile
  7802                           
  7803                           ;hw_adc.c: 24:     }
  7804  0030D6  EF71  F018         	goto	l109
  7805  0030DA                     l3227:
  7806                           
  7807                           ;hw_adc.c: 26:     {;hw_adc.c: 27:        ADCON0bits.CHS = 0001;
  7808  0030DA  50C2               	movf	194,w,c	;volatile
  7809  0030DC  0BC3               	andlw	-61
  7810  0030DE  0904               	iorlw	4
  7811  0030E0  6EC2               	movwf	194,c	;volatile
  7812  0030E2                     l109:
  7813  0030E2                     
  7814                           ;hw_adc.c: 33:        ADCON0bits.GO = 1;
  7815  0030E2  82C2               	bsf	194,1,c	;volatile
  7816  0030E4                     l110:
  7817  0030E4  B2C2               	btfsc	194,1,c	;volatile
  7818  0030E6  EF77  F018         	goto	u3541
  7819  0030EA  EF79  F018         	goto	u3540
  7820  0030EE                     u3541:
  7821  0030EE  EF72  F018         	goto	l110
  7822  0030F2                     u3540:
  7823  0030F2                     
  7824                           ;hw_adc.c: 35:        result = (ADRESH << 8) | (ADRESL);
  7825  0030F2  50C3               	movf	195,w,c	;volatile
  7826  0030F4  CFC4 F003          	movff	4036,??_Read_ADC	;volatile
  7827  0030F8  6A04               	clrf	(??_Read_ADC+1)^0,c
  7828  0030FA  C003  F004         	movff	??_Read_ADC,??_Read_ADC+1
  7829  0030FE  6A03               	clrf	??_Read_ADC^0,c
  7830  003100  1003               	iorwf	??_Read_ADC^0,w,c
  7831  003102  6E06               	movwf	Read_ADC@result^0,c
  7832  003104  5004               	movf	(??_Read_ADC+1)^0,w,c
  7833  003106  6E07               	movwf	(Read_ADC@result+1)^0,c
  7834  003108                     
  7835                           ;hw_adc.c: 38:     return result;
  7836  003108  C006  F001         	movff	Read_ADC@result,?_Read_ADC
  7837  00310C  C007  F002         	movff	Read_ADC@result+1,?_Read_ADC+1
  7838  003110  0012               	return		;funcret
  7839  003112                     __end_of_Read_ADC:
  7840                           	callstack 0
  7841                           
  7842 ;; *************** function _PORT_Initialize *****************
  7843 ;; Defined at:
  7844 ;;		line 93 in file "Test.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;		None
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;		None
  7849 ;; Return value:  Size  Location     Type
  7850 ;;                  1    wreg      void 
  7851 ;; Registers used:
  7852 ;;		None
  7853 ;; Tracked objects:
  7854 ;;		On entry : 0/0
  7855 ;;		On exit  : 0/0
  7856 ;;		Unchanged: 0/0
  7857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7858 ;;      Params:         0       0       0       0       0       0       0
  7859 ;;      Locals:         0       0       0       0       0       0       0
  7860 ;;      Temps:          0       0       0       0       0       0       0
  7861 ;;      Totals:         0       0       0       0       0       0       0
  7862 ;;Total ram usage:        0 bytes
  7863 ;; Hardware stack levels used:    1
  7864 ;; This function calls:
  7865 ;;		Nothing
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text34
  7872  00339A                     __ptext34:
  7873                           	callstack 0
  7874  00339A                     _PORT_Initialize:
  7875                           	callstack 30
  7876  00339A                     
  7877                           ;Test.c: 95:    TRISC6 = 1;
  7878  00339A  8C94               	bsf	3988,6,c	;volatile
  7879                           
  7880                           ;Test.c: 96:    TRISC7 = 1;
  7881  00339C  8E94               	bsf	3988,7,c	;volatile
  7882  00339E  0012               	return		;funcret
  7883  0033A0                     __end_of_PORT_Initialize:
  7884                           	callstack 0
  7885                           
  7886 ;; *************** function _CLK_intialize *****************
  7887 ;; Defined at:
  7888 ;;		line 81 in file "Test.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;		None
  7891 ;; Auto vars:     Size  Location     Type
  7892 ;;		None
  7893 ;; Return value:  Size  Location     Type
  7894 ;;                  1    wreg      void 
  7895 ;; Registers used:
  7896 ;;		wreg, status,2
  7897 ;; Tracked objects:
  7898 ;;		On entry : 0/0
  7899 ;;		On exit  : 0/0
  7900 ;;		Unchanged: 0/0
  7901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7902 ;;      Params:         0       0       0       0       0       0       0
  7903 ;;      Locals:         0       0       0       0       0       0       0
  7904 ;;      Temps:          0       0       0       0       0       0       0
  7905 ;;      Totals:         0       0       0       0       0       0       0
  7906 ;;Total ram usage:        0 bytes
  7907 ;; Hardware stack levels used:    1
  7908 ;; This function calls:
  7909 ;;		Nothing
  7910 ;; This function is called by:
  7911 ;;		_main
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text35
  7916  003386                     __ptext35:
  7917                           	callstack 0
  7918  003386                     _CLK_intialize:
  7919                           	callstack 30
  7920  003386                     
  7921                           ;Test.c: 87:     OSCCONbits.IRCF = 0b111;
  7922  003386  0E70               	movlw	112
  7923  003388  12D3               	iorwf	211,f,c	;volatile
  7924  00338A                     
  7925                           ;Test.c: 89:     OSCCONbits.IDLEN = 0b0;
  7926  00338A  9ED3               	bcf	211,7,c	;volatile
  7927                           
  7928                           ;Test.c: 90:     OSCCONbits.SCS = 0b11 ;
  7929  00338C  0E03               	movlw	3
  7930  00338E  12D3               	iorwf	211,f,c	;volatile
  7931  003390  0012               	return		;funcret
  7932  003392                     __end_of_CLK_intialize:
  7933                           	callstack 0
  7934                           
  7935 ;; *************** function _ADC_intialize *****************
  7936 ;; Defined at:
  7937 ;;		line 41 in file "hw_adc.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;		None
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      void 
  7944 ;; Registers used:
  7945 ;;		wreg, status,2
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7951 ;;      Params:         0       0       0       0       0       0       0
  7952 ;;      Locals:         0       0       0       0       0       0       0
  7953 ;;      Temps:          0       0       0       0       0       0       0
  7954 ;;      Totals:         0       0       0       0       0       0       0
  7955 ;;Total ram usage:        0 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_main
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text36
  7965  00333C                     __ptext36:
  7966                           	callstack 0
  7967  00333C                     _ADC_intialize:
  7968                           	callstack 30
  7969  00333C                     
  7970                           ;hw_adc.c: 48:    TRISA1 = 1 ;
  7971  00333C  8292               	bsf	3986,1,c	;volatile
  7972  00333E                     
  7973                           ;hw_adc.c: 52:     ADCON1bits.PCFG = 0b1101;
  7974  00333E  50C1               	movf	193,w,c	;volatile
  7975  003340  0BF0               	andlw	-16
  7976  003342  090D               	iorlw	13
  7977  003344  6EC1               	movwf	193,c	;volatile
  7978  003346                     
  7979                           ;hw_adc.c: 53:     ADCON1bits.VCFG0 = 0;
  7980  003346  98C1               	bcf	193,4,c	;volatile
  7981  003348                     
  7982                           ;hw_adc.c: 54:     ADCON1bits.VCFG1 = 0 ;
  7983  003348  9AC1               	bcf	193,5,c	;volatile
  7984                           
  7985                           ;hw_adc.c: 57:      ADCON2bits.ADCS = 0b110;
  7986  00334A  50C0               	movf	192,w,c	;volatile
  7987  00334C  0BF8               	andlw	-8
  7988  00334E  0906               	iorlw	6
  7989  003350  6EC0               	movwf	192,c	;volatile
  7990                           
  7991                           ;hw_adc.c: 58:      ADCON2bits.ACQT = 0b111;
  7992  003352  0E38               	movlw	56
  7993  003354  12C0               	iorwf	192,f,c	;volatile
  7994  003356                     
  7995                           ;hw_adc.c: 59:      ADCON2bits.ADFM = 1;
  7996  003356  8EC0               	bsf	192,7,c	;volatile
  7997  003358                     
  7998                           ;hw_adc.c: 61:     ADCON0bits.ADON = 1 ;
  7999  003358  80C2               	bsf	194,0,c	;volatile
  8000  00335A  0012               	return		;funcret
  8001  00335C                     __end_of_ADC_intialize:
  8002                           	callstack 0
  8003                           
  8004                           	psect	rparam
  8005  0000                     
  8006                           	psect	idloc
  8007                           
  8008                           ;Config register IDLOC0 @ 0x200000
  8009                           ;	unspecified, using default values
  8010  200000                     	org	2097152
  8011  200000  FF                 	db	255
  8012                           
  8013                           ;Config register IDLOC1 @ 0x200001
  8014                           ;	unspecified, using default values
  8015  200001                     	org	2097153
  8016  200001  FF                 	db	255
  8017                           
  8018                           ;Config register IDLOC2 @ 0x200002
  8019                           ;	unspecified, using default values
  8020  200002                     	org	2097154
  8021  200002  FF                 	db	255
  8022                           
  8023                           ;Config register IDLOC3 @ 0x200003
  8024                           ;	unspecified, using default values
  8025  200003                     	org	2097155
  8026  200003  FF                 	db	255
  8027                           
  8028                           ;Config register IDLOC4 @ 0x200004
  8029                           ;	unspecified, using default values
  8030  200004                     	org	2097156
  8031  200004  FF                 	db	255
  8032                           
  8033                           ;Config register IDLOC5 @ 0x200005
  8034                           ;	unspecified, using default values
  8035  200005                     	org	2097157
  8036  200005  FF                 	db	255
  8037                           
  8038                           ;Config register IDLOC6 @ 0x200006
  8039                           ;	unspecified, using default values
  8040  200006                     	org	2097158
  8041  200006  FF                 	db	255
  8042                           
  8043                           ;Config register IDLOC7 @ 0x200007
  8044                           ;	unspecified, using default values
  8045  200007                     	org	2097159
  8046  200007  FF                 	db	255
  8047                           
  8048                           	psect	config
  8049                           
  8050                           ; Padding undefined space
  8051  300000                     	org	3145728
  8052  300000  FF                 	db	255
  8053                           
  8054                           ;Config register CONFIG1H @ 0x300001
  8055                           ;	Oscillator Selection bits
  8056                           ;	OSC = INTIO7, Internal oscillator block, CLKO function on RA6, port function on RA7
  8057                           ;	Fail-Safe Clock Monitor Enable bit
  8058                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8059                           ;	Internal/External Oscillator Switchover bit
  8060                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8061  300001                     	org	3145729
  8062  300001  09                 	db	9
  8063                           
  8064                           ;Config register CONFIG2L @ 0x300002
  8065                           ;	Power-up Timer Enable bit
  8066                           ;	PWRT = OFF, PWRT disabled
  8067                           ;	Brown-out Reset Enable bits
  8068                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8069                           ;	Brown Out Reset Voltage bits
  8070                           ;	BORV = 3, Minimum setting
  8071  300002                     	org	3145730
  8072  300002  1F                 	db	31
  8073                           
  8074                           ;Config register CONFIG2H @ 0x300003
  8075                           ;	Watchdog Timer Enable bit
  8076                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8077                           ;	Watchdog Timer Postscale Select bits
  8078                           ;	WDTPS = 32768, 1:32768
  8079  300003                     	org	3145731
  8080  300003  1E                 	db	30
  8081                           
  8082                           ; Padding undefined space
  8083  300004                     	org	3145732
  8084  300004  FF                 	db	255
  8085                           
  8086                           ;Config register CONFIG3H @ 0x300005
  8087                           ;	CCP2 MUX bit
  8088                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8089                           ;	PORTB A/D Enable bit
  8090                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8091                           ;	Low-Power Timer1 Oscillator Enable bit
  8092                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8093                           ;	MCLR Pin Enable bit
  8094                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8095  300005                     	org	3145733
  8096  300005  83                 	db	131
  8097                           
  8098                           ;Config register CONFIG4L @ 0x300006
  8099                           ;	Stack Full/Underflow Reset Enable bit
  8100                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8101                           ;	Single-Supply ICSP Enable bit
  8102                           ;	LVP = ON, Single-Supply ICSP enabled
  8103                           ;	Extended Instruction Set Enable bit
  8104                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8105                           ;	Background Debugger Enable bit
  8106                           ;	DEBUG = 0x1, unprogrammed default
  8107  300006                     	org	3145734
  8108  300006  85                 	db	133
  8109                           
  8110                           ; Padding undefined space
  8111  300007                     	org	3145735
  8112  300007  FF                 	db	255
  8113                           
  8114                           ;Config register CONFIG5L @ 0x300008
  8115                           ;	Code Protection bit
  8116                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8117                           ;	Code Protection bit
  8118                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8119                           ;	Code Protection bit
  8120                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8121                           ;	Code Protection bit
  8122                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8123  300008                     	org	3145736
  8124  300008  0F                 	db	15
  8125                           
  8126                           ;Config register CONFIG5H @ 0x300009
  8127                           ;	Boot Block Code Protection bit
  8128                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8129                           ;	Data EEPROM Code Protection bit
  8130                           ;	CPD = OFF, Data EEPROM not code-protected
  8131  300009                     	org	3145737
  8132  300009  C0                 	db	192
  8133                           
  8134                           ;Config register CONFIG6L @ 0x30000A
  8135                           ;	Write Protection bit
  8136                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8137                           ;	Write Protection bit
  8138                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8139                           ;	Write Protection bit
  8140                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8141                           ;	Write Protection bit
  8142                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8143  30000A                     	org	3145738
  8144  30000A  0F                 	db	15
  8145                           
  8146                           ;Config register CONFIG6H @ 0x30000B
  8147                           ;	Configuration Register Write Protection bit
  8148                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8149                           ;	Boot Block Write Protection bit
  8150                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8151                           ;	Data EEPROM Write Protection bit
  8152                           ;	WRTD = OFF, Data EEPROM not write-protected
  8153  30000B                     	org	3145739
  8154  30000B  E0                 	db	224
  8155                           
  8156                           ;Config register CONFIG7L @ 0x30000C
  8157                           ;	Table Read Protection bit
  8158                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8159                           ;	Table Read Protection bit
  8160                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8161                           ;	Table Read Protection bit
  8162                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8163                           ;	Table Read Protection bit
  8164                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8165  30000C                     	org	3145740
  8166  30000C  0F                 	db	15
  8167                           
  8168                           ;Config register CONFIG7H @ 0x30000D
  8169                           ;	Boot Block Table Read Protection bit
  8170                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8171  30000D                     	org	3145741
  8172  30000D  40                 	db	64
  8173                           tosu	equ	0xFFF
  8174                           tosh	equ	0xFFE
  8175                           tosl	equ	0xFFD
  8176                           stkptr	equ	0xFFC
  8177                           pclatu	equ	0xFFB
  8178                           pclath	equ	0xFFA
  8179                           pcl	equ	0xFF9
  8180                           tblptru	equ	0xFF8
  8181                           tblptrh	equ	0xFF7
  8182                           tblptrl	equ	0xFF6
  8183                           tablat	equ	0xFF5
  8184                           prodh	equ	0xFF4
  8185                           prodl	equ	0xFF3
  8186                           indf0	equ	0xFEF
  8187                           postinc0	equ	0xFEE
  8188                           postdec0	equ	0xFED
  8189                           preinc0	equ	0xFEC
  8190                           plusw0	equ	0xFEB
  8191                           fsr0h	equ	0xFEA
  8192                           fsr0l	equ	0xFE9
  8193                           wreg	equ	0xFE8
  8194                           indf1	equ	0xFE7
  8195                           postinc1	equ	0xFE6
  8196                           postdec1	equ	0xFE5
  8197                           preinc1	equ	0xFE4
  8198                           plusw1	equ	0xFE3
  8199                           fsr1h	equ	0xFE2
  8200                           fsr1l	equ	0xFE1
  8201                           bsr	equ	0xFE0
  8202                           indf2	equ	0xFDF
  8203                           postinc2	equ	0xFDE
  8204                           postdec2	equ	0xFDD
  8205                           preinc2	equ	0xFDC
  8206                           plusw2	equ	0xFDB
  8207                           fsr2h	equ	0xFDA
  8208                           fsr2l	equ	0xFD9
  8209                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    0
    Data        7
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     126
    BANK0           128     46     109
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    S985_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[10]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 20
		 -> main@_adc_str(BANK0[20]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   47822
                                            124 COMRAM     2     2      0
                                             22 BANK0     24    24      0
                      _ADC_intialize
                      _CLK_intialize
                    _PORT_Initialize
                           _Read_ADC
                          _UART_Init
                   _UART_send_string
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   47361
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           23    15      8   46759
                                            111 COMRAM    13     5      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45996
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45535
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7759
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6799
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2595
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    6244
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7398
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5293
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2147
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2101
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1746
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     0      2     219
                                              1 COMRAM     2     0      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            3     0      3      76
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _PORT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLK_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_intialize                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_intialize
   _CLK_intialize
   _PORT_Initialize
   _Read_ADC
   _UART_Init
   _UART_send_string
     _UART_send_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2E      6D       5       85.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EB      15        0.0%
DATA                 0      0      EB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 11:17:52 2021

                        _i 0096                         l25 3390                         l28 339E  
                       l72 3370                         l66 3384                         l69 335E  
                       l85 306C        ___wmul@multiplicand 0003             ?_CLK_intialize 0001  
                      l110 30E4                        l113 3110                        l116 335A  
                      l109 30E2                        l119 333A                        l233 254E  
                      l246 2838                        _ADC 0080                        l810 2934  
                      l564 2B38                        l557 2B18                        l805 2954  
                      l574 2DBE                        l903 2082                        l567 2D9E  
                      l912 21D0                        l905 208A                        l921 25D0  
                      l914 2236                        l851 2ED0                        l923 25D8  
                      l932 2682                        l933 26CC                        l870 2CC0  
                      l854 2F12                        l942 1E80                        l872 2CEE  
                      l856 2F4E                        l880 1936                        l952 2048  
                      l944 1E88                        l937 26D4                        l867 2C7E  
                      l980 1DE2                        l957 1BA8                        l797 3314  
                      l878 192E                        l982 1E46                        l966 1C44  
                      l959 1BB0                        l898 1B6E                        l996 0758  
                      _abs 3156                        _pad 2E8A                        wreg 000FE8  
                     l1102 23C6                       l1113 3278                       l1121 30BE  
                     l1107 31D0                       l1019 188C                       ?_abs 0013  
                     l1142 2E88                       l1150 3154                       l1071 3194  
                     l1127 3240                       l1063 2FA8                       l1064 2FB0  
                     l1153 33A0                       l1163 2C16                       l1068 318C  
                     l2301 23FA                       l1173 3006                       l3005 1096  
                     l2311 243C                       l2303 23FE                       l1159 32E4  
                     l3111 17A2                       l3031 123C                       l3023 11C2  
                     l3007 10CC                       l3015 1118                       l1184 3208  
                     l3201 337C                       l2321 2496                       l2313 245A  
                     l2305 240C                       l2401 2D16                       l3121 1816  
                     l3113 17B2                       l3105 1710                       l3041 1326  
                     l3033 1272                       l3025 11E6                       l3017 113C  
                     l3009 1104                       l1178 300E                       l3211 3356  
                     l3203 333C                       l1099 23BE                       l2323 24C4  
                     l2315 2462                       l2331 24FE                       l2307 242C  
                     l2411 2D98                       l2403 2D2A                       l3123 1824  
                     l3107 1746                       l3035 12B8                       l3027 121C  
                     l3019 1186                       l3213 3358                       l3205 333E  
                     l3221 303C                       l2261 2E0C                       l2253 2DC0  
                     l2333 250E                       l2325 24E4                       l2317 2476  
                     l2309 2430                       l2341 26DA                       l2421 2EC8  
                     l2413 2E8A                       l2501 188E                       l2405 2D38  
                     l3125 1838                       l3109 177C                       l3207 3346  
                     l3231 30F2                       l3223 30C2                       l3215 3010  
                     l2263 2E42                       l2255 2DD2                       l2335 252E  
                     l2327 24E6                       l2319 2484                       l2351 273A  
                     l2343 26E8                       l2271 3130                       l2431 2F36  
                     l2423 2EDC                       l2415 2E9A                       l2511 1908  
                     l2503 18AE                       l2407 2D66                       l3119 17F2  
                     l3071 1510                       l3063 146E                       l3055 13E8  
                     l3047 1376                       l3039 12F0                       l3135 1856  
                     l3151 2F58                       l3209 3348                       l3233 3108  
                     l3225 30D2                       l3217 3014                       l2257 2DE4  
                     l2329 24F8                       l2361 27B0                       l2353 2758  
                     l2345 2708                       l2273 3134                       l2281 32D8  
                     l2425 2EF0                       l2417 2EAE                       l2521 1964  
                     l2513 1922                       l2505 18D6                       l2601 21F2  
                     l2409 2D86                       l3137 187A                       l3129 1844  
                     l3081 15EE                       l3073 1546                       l3065 14A4  
                     l3057 141E                       l3049 139A                       l3153 2F66  
                     l3161 283A                       l3227 30DA                       l3219 3038  
                     l2291 3332                       l2259 2DEE                       l2371 2818  
                     l2363 27D0                       l2355 2760                       l2347 270C  
                     l2339 26D6                       l2435 3156                       l2267 3112  
                     l2275 32B0                       l2427 2EF4                       l2419 2EBC  
                     l2531 1A02                       l2523 196C                       l2515 193E  
                     l2507 18F6                       l2603 21F8                       l2611 2550  
                     l2443 3196                       l2451 2FE8                       l3083 1614  
                     l3091 1664                       l3067 14DA                       l3323 0718  
                     l3155 2F8C                       l3171 287C                       l3163 284C  
                     l3251 297C                       l3243 2956                       l3229 30E2  
                     l3157 335E                       l2461 306E                       l3325 22F4  
                     l2365 27E2                       l2357 2774                       l2349 271A  
                     l2437 3170                       l2269 311E                       l2277 32BC  
                     l2429 2F22                       l2541 1ABE                       l2533 1A08  
                     l2525 1974                       l2517 1950                       l2509 1906  
                     l2605 2208                       l2621 2598                       l2613 2562  
                     l2381 2A7C                       l2285 31D2                       l2453 2FFA  
                     l2701 1BEE                       l3093 1688                       l3085 1624  
                     l3069 1500                       l3077 1582                       l3149 2F50  
                     l3181 28DE                       l3173 288A                       l3165 2856  
                     l3237 32E6                       l3261 29B8                       l3253 2988  
                     l3245 2960                       l3159 336C                       l2463 3072  
                     l2295 23C8                       l2359 2782                       l2367 27E8  
                     l2279 32C0                       l2551 1B10                       l2543 1AD8  
                     l2527 197A                       l2535 1A6C                       l2519 195E  
                     l2607 220E                       l2631 2610                       l2623 25A0  
                     l2615 256A                       l2391 2AFE                       l2383 2A90  
                     l2375 2A4A                       l2439 320A                       l2447 2FB2  
                     l2711 1C28                       l2703 1BF6                       l3095 16AC  
                     l3079 15B8                       l3183 28EE                       l3175 2896  
                     l3239 32F0                       l3271 2A1C                       l3263 29C6  
                     l3255 299E                       l3247 2968                       l3193 3386  
                     l2289 3316                       l2457 3242                       l2465 3086  
                     l2481 2C52                       l2473 2C18                       l2297 23CC  
                     l2369 27F8                       l2553 1B22                       l2537 1A86  
                     l2545 1AE8                       l2529 19FC                       l2641 2660  
                     l2633 2614                       l2625 25AE                       l2617 257C  
                     l2393 2B00                       l2385 2A9E                       l2377 2A56  
                     l2713 1C38                       l2705 1BFE                       l3097 16C2  
                     l3185 2924                       l3177 28A8                       l3169 285E  
                     l3265 29EC                       l3257 29A0                       l3249 2978  
                     l3195 338A                       l2467 30B4                       l2491 2C9E  
                     l2483 2C64                       l2475 2C2C                       l2299 23DA  
                     l2555 1B2E                       l2547 1AFA                       l2539 1AA4  
                     l2571 20B2                       l2563 204A                       l2651 26AE  
                     l2643 2664                       l2635 2632                       l2619 2584  
                     l2811 2BC8                       l2803 2B70                       l2395 2B12  
                     l2387 2AB0                       l2379 2A74                       l2731 1D00  
                     l2723 1CC4                       l2707 1C04                       l3099 16D0  
                     l3187 293C                       l3179 28CC                       l3267 29F8  
                     l3259 29B6                       l3197 339A                       l2469 30B8  
                     l2493 2CA2                       l2477 2C38                       l2557 1B36  
                     l2549 1B0A                       l2581 20D8                       l2573 20BA  
                     l2565 205A                       l2637 263E                       l2629 25FC  
                     l2813 2BF2                       l2805 2B7E                       l2389 2ADE  
                     l2397 2CF0                       l2661 1EB0                       l2653 1E48  
                     l2741 1DB8                       l2733 1D06                       l2725 1CD6  
                     l2717 1C78                       l2709 1C0C                       l2821 068E  
                     l3189 294C                       l3269 2A0E                       l3199 3372  
                     l2495 2CD0                       l2487 2C76                       l2479 2C44  
                     l2559 1B46                       l2591 216E                       l2583 20EA  
                     l2575 20BE                       l2567 205C                       l2647 2696  
                     l2639 265C                       l2807 2B9A                       l2399 2D0E  
                     l2671 1F42                       l2663 1EB8                       l2655 1E58  
                     l2751 1E1E                       l2743 1DD2                       l2719 1C8A  
                     l2727 1CEA                       l2735 1D64                       l2903 09F8  
                     l2831 06C6                       l2823 06A0                       l2761 2254  
                     l2497 2CE2                       l2489 2C8A                       l2593 218C  
                     l2585 20F0                       l2577 20CA                       l2569 2076  
                     l2649 26AA                       l2809 2BB6                       l2681 1FF6  
                     l2673 1F48                       l2665 1EC0                       l2657 1E5A  
                     l2745 1DF2                       l2737 1D80                       l2729 1CFA  
                     l2913 0AE4                       l2905 0A2E                       l2825 06A4  
                     l2817 065C                       l2771 22B0                       l2763 2270  
                     l2755 2238                       l2595 21A6                       l2587 20F6  
                     l2579 20D0                       l2683 2010                       l2667 1EC6  
                     l2675 1FAC                       l2659 1E74                       l2747 1DF8  
                     l2739 1D9E                       l2691 1B80                       l2923 0B9E  
                     l2915 0B1A                       l2907 0A64                       l2851 06F2  
                     l2843 06DE                       l2835 06CE                       l2827 06B0  
                     l2819 0680                       l2773 22C6                       l2765 22A6  
                     l2757 224C                       l2597 21C0                       l2589 2154  
                     l2677 1FBE                       l2685 2020                       l2669 1F3C  
                     l2749 1E08                       l2693 1B82                       l2933 0C32  
                     l2925 0BC2                       l2917 0B50                       l2909 0AAC  
                     l2861 07C4                       l2829 06B4                       l2853 0746  
                     ?_pad 0011                       l2791 23A2                       l2783 2340  
                     l2775 22CE                       l2767 22AA                       l2759 2250  
                     l2599 21E0                       l2679 1FDC                       l2695 1B9C  
                     l2951 0DA2                       l2943 0CEE                       l2935 0C68  
                     l2927 0BE6                       l2863 07D2                       l2855 0768  
                     l2847 06E6                       l2839 06D6                       l2777 22D6  
                     l2697 1BC6                       l2689 1B70                       l2961 0E4C  
                     l2953 0DD8                       l2945 0D24                       l2937 0C9E  
                     l2881 08A2                       l2873 0854                       l2865 07E0  
                     l2857 076A                       l2787 237E                       l2779 230A  
                     l2699 1BCE                       l2947 0D6A                       l2883 08C6  
                     l2867 0800                       l2875 0866                       l2859 078E  
                     l2789 2390                       l2797 2B3A                       l2981 0F9A  
                     l2893 0974                       l2885 0900                       l2877 088A  
                     l2869 080E                       l2799 2B64                       l2975 0F20  
                     l2967 0E9A                       l2959 0E28                       l2887 0920  
                     l2879 0894                       l2895 0986                       l2977 0F56  
                     l2985 0FA6                       l2969 0ED0                       l2897 09AA  
                     l2889 092E                       l2987 0FDC                       l2995 1028  
                     l2979 0F8E                       l2899 09DC                       l2997 104C  
                     l2989 1014                       l2999 1082                       STR_1 0601  
                     STR_2 061F                       STR_3 0614                       STR_4 062D  
                     STR_6 062D                       STR_8 0631                       u2001 2A50  
                     u2010 2A74                       u2011 2A70                       u2100 2F22  
                     u2020 2A9E                       u2101 2F1E                       u2021 2A9A  
                     u2110 3170                       u2030 2ADE                       u2111 316C  
                     u2031 2ADA                       u2200 3274                       u2040 2D0E  
                     u2120 323A                       u3000 0768                       u2041 2D0A  
                     u2121 3234                       u3001 0764                       u2210 3086  
                     u2050 2D38                       u2130 323C                       u3010 078E  
                     u2211 3082                       u2051 2D34                       u3011 078A  
                     u2220 30B4                       u2300 18D6                       u2060 2D66  
                     u2140 31CA                       u3100 0986                       u3020 07D2  
                     u2221 30B0                       u2301 18D2                       u2061 2D62  
                     u2141 31C4                       u3101 0982                       u3021 07CE  
                     u2230 2C2C                       u2070 2E9A                       u2310 1906  
                     u2150 31CC                       u3110 09AA                       u3030 084E  
                     u2231 2C28                       u2071 2E96                       u2311 1902  
                     u3111 09A6                       u3031 0848                       u2240 2C52  
                     u2080 2EBC                       u2400 1AFA                       u2320 1922  
                     u2160 2FE2                       u3200 0D24                       u3120 0A2E  
                     u3040 0850                       u2241 2C4E                       u2081 2EB8  
                     u2401 1AF6                       u2321 191E                       u2161 2FDC  
                     u3201 0D20                       u3121 0A2A                       u2250 2C72  
                     u2090 2F12                       u2410 1B0A                       u2330 1950  
                     u2170 2FE4                       u3210 0DD8                       u3130 0A64  
                     u3050 0866                       u2251 2C6E                       u2091 2F0E  
                     u2411 1B06                       u2331 194C                       u3211 0DD4  
                     u3131 0A60                       u3051 0862                       u2260 2CC0  
                     u2420 1B22                       u2340 195E                       u2500 21D0  
                     u2180 2FFA                       u3300 1272                       u3220 0E4C  
                     u3140 0B1A                       u3060 088A                       u2261 2CBC  
                     u2421 1B1E                       u2341 195A                       u2501 21CC  
                     u2181 2FF6                       u3301 126E                       u3221 0E48  
                     u3141 0B16                       u3061 0886                       u2190 3272  
                     u2270 2CD0                       u2350 1A86                       u2510 21E0  
                     u2430 205A                       u3310 1326                       u3230 0ED0  
                     u3150 0B50                       u3070 08C6                       u2191 326C  
                     u2271 2CCC                       u2351 1A82                       u2511 21DC  
                     u2431 2056                       u3311 1322                       u3231 0ECC  
                     u3151 0B4C                       u3071 08C2                       u1800 2DE4  
                     u2360 1AA4                       u2280 18BE                       u2520 21F2  
                     u2440 2076                       u2600 2692                       u3400 1746  
                     u3320 139A                       u3240 0F56                       u3160 0BC2  
                     u3080 096E                       u1801 2DE0                       u2361 1AA0  
                     u2281 18B8                       u2521 21EE                       u2441 2072  
                     u2601 268E                       u3401 1742                       u3321 1396  
                     u3241 0F52                       u3161 0BBE                       u3081 0968  
                     u1810 2E0C                       u2370 1ABE                       u2290 18C0  
                     u2450 212E                       u2610 26CC                       u3410 177C  
                     u3330 141E                       u3250 0FDC                       u3170 0BE6  
                     u3090 0970                       u1811 2E08                       u2371 1ABA  
                     u2611 26C8                       u2531 255A                       u3411 1778  
                     u3331 141A                       u3251 0FD8                       u3171 0BE2  
                     u3500 3034                       u1820 2E42                       u1900 245A  
                     u2380 1AD8                       u2460 216E                       u2540 257C  
                     u2620 1E58                       u2700 1B9C                       u3420 1816  
                     u3340 14A4                       u3260 104C                       u3180 0C68  
                     u1821 2E3E                       u1901 2456                       u2381 1AD4  
                     u2461 216A                       u2541 2578                       u2621 1E54  
                     u2701 1B98                       u3421 1812                       u3341 14A0  
                     u3261 1048                       u3181 0C64                       u3510 305C  
                     u1910 2484                       u1830 3154                       u2390 1AE8  
                     u2470 218C                       u2550 25AE                       u2630 1E74  
                     u2710 1BC6                       u3350 14DA                       u3270 10CC  
                     u3190 0C9E                       u3430 2FA8                       u1911 2480  
                     u1831 3150                       u2391 1AE4                       u2471 2188  
                     u2455 211C                       u2551 25AA                       u2631 1E70  
                     u2711 1BC2                       u3351 14D6                       u3271 10C8  
                     u3191 0C9A                       u3431 2FA4                       u3440 336C  
                     u3520 306C                       u1920 24C4                       u1840 32D8  
                     u2480 21A6                       u2560 25CC                       u2640 1FBE  
                     u2800 1D80                       u2720 1C28                       u3360 15B8  
                     u3280 113C                       u3441 3368                       u3521 3068  
                     u1921 24C0                       u1841 32D4                       u2481 21A2  
                     u2561 25C8                       u2641 1FBA                       u2801 1D7C  
                     u2721 1C24                       u3361 15B4                       u3281 1138  
                     u3530 30D2                       u1930 250E                       u2490 21C0  
                     u2570 25F8                       u2650 1FDC                       u1850 3202  
                     u2810 1D9E                       u2730 1C72                       u3370 15EE  
                     u3290 11E6                       u3450 284C                       u3531 30CE  
                     u3507 302A                       u1931 250A                       u2491 21BC  
                     u2571 25F4                       u2651 1FD8                       u1851 31FC  
                     u2811 1D9A                       u2731 1C6C                       u3371 15EA  
                     u3291 11E2                       u3451 2848                       u3540 30F2  
                     u2900 237A                       u1940 26E8                       u2580 2632  
                     u2660 1FF6                       u1860 3204                       u2820 1DB8  
                     u2740 1C74                       u3380 1688                       u3460 287C  
                     u3541 30EE                       u3517 3052                       u1941 26E4  
                     u2581 262E                       u2661 1FF2                       u2821 1DB4  
                     u3381 1684                       u3461 2878                       u2910 2390  
                     u1790 2DD2                       u1870 23DA                       u1950 271A  
                     u2590 2682                       u2670 2010                       u2830 1DD2  
                     u2750 1C8A                       u3390 16AC                       u3470 28DE  
                     u2911 238C                       u1791 2DCE                       u1871 23D6  
                     u1951 2716                       u2591 267E                       u2671 200C  
                     u2831 1DCE                       u2751 1C86                       u3391 16A8  
                     u3471 28DA                       u2920 23A2                       u1880 240C  
                     u1960 2758                       u2680 2020                       u2840 1DE2  
                     u2760 1CBE                       u3480 28EE                       u2921 239E  
                     u1881 2408                       u1961 2754                       u2681 201C  
                     u2841 1DDE                       u2761 1CB8                       u3481 28EA  
                     u1970 2782                       u2930 2B64                       u2850 1DF2  
                     u2770 1CC0                       u2690 1B80                       u3490 2924  
                     u1891 2436                       u1971 277E                       u2931 2B60  
                     u2851 1DEE                       u2691 1B7C                       u3491 2920  
                     u2860 2270                       u1980 27B0                       u2940 2B9A  
                     u2780 1CD6                       u2861 226C                       u1981 27AC  
                     u2941 2B96                       u2781 1CD2                       u3557 2992  
                     u2870 22A6                       u1990 27F8                       u2950 2BB6  
                     u2790 1D3E                       u2871 22A2                       u1991 27F4  
                     u2951 2BB2                       u3567 29AA                       u2880 22C2  
                     u2960 2BC8                       u2881 22BE                       u2961 2BC4  
                     u3577 2A02                       u2890 2378                       u2970 2BF2  
                     u2891 2372                       u2971 2BEE                       u2795 1D2C  
                     u2980 0680                       _RCIF 007CF5                       u2981 067C  
                     u2990 0758                       u2991 0754                       _TXIF 007CF4  
                     abs@a 0013                       _dbuf 0098                       _atoi 2238  
                     _ctoa 2C18                       _main 2956                       _dtoa 188E  
             main@_adc_str 00CE                       _prec 0090                       _otoa 204A  
                     _nout 008C                       pad@i 0018                       pad@p 0015  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9                       _stoa 2550                       _utoa 1E48  
                     _xtoa 1B70                       prodh 000FF4                       prodl 000FF3  
                     start 0000               ___param_bank 000000                      ??_abs 0015  
__size_of_UART_send_string 005E                      ??_pad 0017            __end_of___aodiv 2550  
                    ?_atoi 0008                      ?_ctoa 000A                      ?_main 0001  
                    ?_dtoa 001C            __end_of___aomod 283A                      STR_10 0631  
                    STR_22 0648                      STR_15 062E                      STR_31 0639  
                    STR_24 0648                      STR_33 0639                      STR_41 0651  
                    STR_26 064B                      STR_19 0632                      STR_43 0651  
                    STR_28 064B                      STR_53 0636                      STR_61 063D  
                    STR_38 063A                      STR_46 0635                      STR_63 063D  
                    STR_71 0654                      STR_48 0635                      STR_56 064E  
                    STR_80 0629                      STR_73 0654                      STR_82 0629  
                    STR_58 064E                      STR_91 062A                      STR_68 063E  
                    STR_76 0641                      STR_78 0641                      STR_94 0657  
                    STR_87 0642                      STR_96 0657                      STR_98 0645  
                    ?_otoa 001C                      ?_stoa 000A                      ?_utoa 001C  
          __end_of___lodiv 2B3A                      ?_xtoa 001C                      _LATA4 007C4C  
                    _LATA5 007C4D                      _LATA6 007C4E            __end_of___lomod 2DC0  
                    _RCREG 000FAE               vfpfcnvrt@fmt 0045               vfpfcnvrt@llu 0060  
                    _SPBRG 000FAF                      _TXREG 000FAD         __size_of_UART_Init 0014  
                    _flags 0092                      _errno 0094                      _fputc 2DC0  
          __end_of_isalpha 31D2                      _fputs 3112            __end_of_isdigit 327A  
                    _value 0084               main@temp_adc 00E2                      atoi@n 0015  
                    pad@fp 0011                      atoi@s 0008                      _width 008E  
                    ctoa@c 000C                      _putch 33A0                      ctoa@l 000E  
                    ctoa@w 0010                      dtoa@d 001E                      dtoa@i 003E  
                    dtoa@n 0036                      dtoa@p 0030                      dtoa@s 0034  
                    dtoa@w 0032            __end_of_islower 320A            __end_of_isspace 30C0  
          __end_of_isupper 3242                      tablat 000FF5                      otoa@d 001E  
                    otoa@i 003C                      otoa@n 0034                      otoa@p 002E  
                    otoa@t 0030                      otoa@w 0032                      plusw1 000FE3  
                    plusw2 000FDB                      stoa@i 0016                      stoa@l 001E  
                    stoa@p 001C                      stoa@s 000C                      stoa@w 0018  
                    utoa@d 001E                      utoa@i 003A                      utoa@n 0032  
                    utoa@p 002E                      utoa@w 0030                      status 000FD8  
                    xtoa@c 0041                      xtoa@d 001E                      xtoa@i 003F  
                    xtoa@n 0037                      xtoa@p 0033                      xtoa@w 0035  
                    xtoa@x 0026            __end_of_strncmp 2C18            __end_of_toupper 3010  
         ___lodiv@dividend 0001          ??_PORT_Initialize 0001               _toupper$1359 000D  
          __initialization 327A               __end_of_atoi 23C8               __end_of_ctoa 2CF0  
             __end_of_main 2A4A               __end_of_dtoa 1B70               __end_of_otoa 2238  
             __end_of_stoa 26D6               __end_of_utoa 204A               __end_of_xtoa 1E48  
         __end_of_Read_ADC 3112            ??_CLK_intialize 0001                     ??_atoi 000A  
                   ??_ctoa 000D                     ??_main 007D                     ??_dtoa 0026  
                   ??_otoa 0026                     ??_stoa 000E                     ??_utoa 0026  
                   ??_xtoa 0027              __activetblptr 000002           ___lodiv@quotient 0011  
                   ?_fputc 0001                     STR_100 0645                     ?_fputs 000A  
                   _ADRESH 000FC4                     _ADRESL 000FC3                     ?_putch 0001  
            vfpfcnvrt@done 004F                     _SPBRGH 000FB0                     _TRISA1 007C91  
                   _TRISB1 007C99                     _TRISC6 007CA6                     _TRISC7 007CA7  
            main@humid_adc 00E4               vfprintf@cfmt 006E          __end_of_UART_Init 3386  
          Read_ADC@channel 0005                  ??___aodiv 0011                  ??___aomod 0011  
                   ___wmul 3316                  ??___lodiv 0011                  ??___lomod 0011  
                   clear_0 32A0                     pad@buf 0013                     ctoa@fp 000A  
                   dtoa@fp 001C                     _strlen 32B0                     fputc@c 0001  
                   fputs@c 000E                     fputs@i 000F                     fputs@s 000A  
                ??_isalpha 0003                  ??_isdigit 0003                  ??_islower 0003  
             __mediumconst 0000                  ??_isspace 0003                     otoa@fp 001C  
                   tblptrh 000FF7                  ??_isupper 0003                     tblptrl 000FF6  
                   tblptru 000FF8                     stoa@cp 001A                     stoa@fp 000A  
                   putch@c 0001           __end_of_vfprintf 2FB2                     utoa@fp 001C  
         __end_of_snprintf 3316                     xtoa@fp 001C                  ??_strncmp 0007  
                ??_toupper 0009                 __accesstop 0080    __end_of__initialization 32A6  
            ___rparam_used 000001             __pcstackCOMRAM 0001               __pidataBANK0 3392  
         _UART_send_string 3010              __end_of_fputc 2E8A              __end_of_fputs 3156  
            __end_of_putch 33A2                    ??_fputc 0005                    ??_fputs 000E  
                  ??_putch 0001                 __pbssBANK0 0080                  ?_Read_ADC 0001  
   __size_of_ADC_intialize 0020                    ?___wmul 0001                    ?_strlen 0001  
       __size_of_vfpfcnvrt 1232            _PORT_Initialize 339A    __size_of_UART_send_char 0016  
         ___lomod@dividend 0001                 ??_Read_ADC 0003                    __Hparam 0000  
                  __Lparam 0000         __size_of_vsnprintf 011C                    ___aodiv 23C8  
                  ___aomod 26D6            __size_of___wmul 0026                    ___lodiv 2A4A  
                  ___lomod 2CF0                  ?_vfprintf 0068               __psmallconst 0600  
                ?_snprintf 00C2                    __pcinit 327A              _ADC_intialize 333C  
                  __ramtop 0600                    __ptext0 2956                    __ptext1 32E6  
                  __ptext2 283A                    __ptext3 2F50                    __ptext4 065C  
                  __ptext5 1B70                    __ptext6 2FB2                    __ptext7 31D2  
                  __ptext8 320A                    __ptext9 3196            __size_of_strlen 0036  
             __size_of_abs 0040               __size_of_pad 00C6                    _isalpha 3196  
                  _isdigit 3242                    _islower 31D2                    _isspace 306E  
                  _isupper 320A                    atoi@neg 000E                    _voltage 0088  
                  _strncmp 2B3A                    _toupper 2FB2       end_of_initialization 32A6  
                  fputc@fp 0003              __Lmediumconst 0000                    fputs@fp 000C  
        __end_of_vfpfcnvrt 188E                  _RCSTAbits 000FAB                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_vfprintf 006E             ?_ADC_intialize 0001  
               ??_snprintf 007D                    strlen@a 0003                    strlen@s 0001  
                _UART_Init 3372    __end_of_PORT_Initialize 33A0      __end_of_CLK_intialize 3392  
       UART_Init@baud_rate 0001          __end_of_vsnprintf 2956   __end_of_UART_send_string 306E  
                _TXSTAbits 000FAC                vfpfcnvrt@ap 0047                vfpfcnvrt@cp 004D  
              vfpfcnvrt@fp 0043                vfpfcnvrt@ll 0055             __end_of___wmul 333C  
              vfpfcnvrt@vp 005D                _BAUDCONbits 000FB8                 ?_UART_Init 0001  
           __end_of_strlen 32E6        start_initialization 327A            ___lodiv@divisor 0009  
          ___lodiv@counter 0019             _UART_send_char 335C                __end_of_abs 3196  
              __end_of_pad 2F50          __size_of_Read_ADC 0052                vfprintf@fmt 006A  
          ??_ADC_intialize 0001                   ??___wmul 0005                __pdataBANK0 00E6  
           Read_ADC@result 0006           ?_PORT_Initialize 0001                   ??_strlen 0003  
   __end_of_UART_send_char 3372               vsnprintf@cnt 00BA               vsnprintf@fmt 0074  
            __pcstackBANK0 00B8           ___aodiv@dividend 0001                snprintf@fmt 00C6  
                _atoi$1271 0010                  _atoi$1272 0014                  _atoi$1273 0012  
                _dtoa$1094 002E                   ?___aodiv 0001                   ?___aomod 0001  
         ___aodiv@quotient 0013                   ?___lodiv 0001                   ?___lomod 0001  
              ??_UART_Init 0004           UART_send_char@bt 0001          __size_of_vfprintf 0062  
        __size_of_snprintf 0030            ___lomod@divisor 0009                __smallconst 0600  
          ?_UART_send_char 0001            ___lomod@counter 0011                   ?_isalpha 0001  
                 ?_isdigit 0001                   ?_islower 0001                   ?_isspace 0001  
                 ?_isupper 0001             __size_of_fputc 00CA             __size_of_fputs 0044  
                 ?_strncmp 0001                   ?_toupper 0007             __size_of_putch 0002  
           ___wmul@product 0005                  _vfpfcnvrt 065C                  _xtoa$1131 002F  
                _xtoa$1132 0031                 _ADCON0bits 000FC2                 _ADCON1bits 000FC1  
               _ADCON2bits 000FC0          ___wmul@multiplier 0001      UART_send_string@st_pt 0002  
             _isspace$1299 0007                 vfpfcnvrt@c 005F                  copy_data0 328E  
        ?_UART_send_string 0002                  _vsnprintf 283A                   _Read_ADC 30C0  
       ??_UART_send_string 0004                   __Hrparam 0000                 vfprintf@ap 006C  
                 __Lrparam 0000                 vfprintf@fp 0068           __size_of___aodiv 0188  
         __size_of___aomod 0164                vsnprintf@ap 0076           __size_of___lodiv 00F0  
         __size_of___lomod 00D0                 ?_vfpfcnvrt 0043                 snprintf@ap 00CC  
          ___aodiv@divisor 0009            ___aodiv@counter 0011           __size_of_isalpha 003C  
         __size_of_isdigit 0038           __size_of_islower 0038           __size_of_isspace 0052  
                 __ptext10 1E48                   __ptext11 2CF0                   __ptext20 3156  
                 __ptext12 2A4A                   __ptext21 26D6                   __ptext13 2B3A  
                 __ptext30 3010                   __ptext22 23C8                   __ptext14 2550  
                 __ptext31 335C                   __ptext23 2C18                   __ptext15 204A  
                 __ptext32 3372                   __ptext24 2DC0                   __ptext16 188E  
                 __ptext33 30C0                   __ptext25 33A0                   __ptext17 2E8A  
                 __ptext34 339A                   __ptext26 2238                   __ptext18 32B0  
                 __ptext35 3386                   __ptext27 306E                   __ptext19 3112  
                 __ptext36 333C                   __ptext28 3242                   __ptext29 3316  
         __size_of_isupper 0038           __size_of_strncmp 00DE           __size_of_toupper 005E  
               ?_vsnprintf 0070              __size_of_atoi 0190              __size_of_ctoa 00D8  
            __size_of_main 00F4              __size_of_dtoa 02E2              __size_of_otoa 01EE  
            __size_of_stoa 0186              __size_of_utoa 0202              __size_of_xtoa 02D8  
   __size_of_CLK_intialize 000C                  stoa@F1154 00E6                   _vfprintf 2F50  
                 _snprintf 32E6           ___aomod@dividend 0001             _vfpfcnvrt$1146 0051  
           _vfpfcnvrt$1147 0053                 _INTCONbits 000FF2                   isalpha@c 0001  
                 isdigit@c 0001                 vsnprintf@f 00BC                 vsnprintf@n 0072  
               vsnprintf@s 0070                  snprintf@n 00C4                  snprintf@s 00C2  
                 islower@c 0001                   isspace@c 0001                   isupper@c 0001  
                strncmp@_l 0001                  strncmp@_r 0003                 _OSCCONbits 000FD3  
         ??_UART_send_char 0001            ___aomod@divisor 0009      __end_of_ADC_intialize 335C  
              ??_vfpfcnvrt 0049                   stoa@nuls 000F            ___aomod@counter 0011  
            _CLK_intialize 3386             _vsnprintf$1009 00B8                   strncmp@l 0008  
                 strncmp@n 0005                   strncmp@r 000A                   toupper@c 0007  
 __size_of_PORT_Initialize 0006               ___aodiv@sign 0012                ??_vsnprintf 0078  
             ___aomod@sign 0012  
